{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.15.1",
  "conda_private": false,
  "conda_version": "4.5.11",
  "description": "Multi dimensional arrays with broadcasting and lazy computing",
  "dev_url": "https://github.com/QuantStack/xtensor-python",
  "doc_url": "http://xtensor.readthedocs.io",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "SylvainCorlay",
    "JohanMabille"
   ]
  },
  "home": "http://quantstack.net/xtensor",
  "identifiers": [],
  "keywords": [],
  "license": "BSD 3-Clause",
  "license_family": "BSD",
  "license_file": "LICENSE",
  "root_pkgs": [
   "anaconda-client 1.7.1 py_0",
   "asn1crypto 0.24.0 py36_0",
   "beautifulsoup4 4.6.3 py36_1000",
   "ca-certificates 2018.8.24 ha4d7672_0",
   "certifi 2018.8.24 py36_1001",
   "cffi 1.11.5 py36h945400d_0",
   "chardet 3.0.4 py36h420ce6e_1",
   "click 7.0 py_0",
   "clyent 1.2.2 py_1",
   "conda 4.5.11 py36_1000",
   "conda-build 3.15.1 py36_0",
   "conda-env 2.6.0 h36134e3_1",
   "conda-forge-ci-setup 2.0.8 py36_0",
   "console_shortcut 0.1.1 h6bb2dd7_3",
   "cryptography 2.2.2 py36hfa6e2cd_0",
   "decorator 4.3.0 py_0",
   "filelock 3.0.9 py_0",
   "glob2 0.6 py_0",
   "idna 2.6 py36h148d497_1",
   "ipython_genutils 0.2.0 py_1",
   "jinja2 2.10 py_1",
   "jsonschema 2.6.0 py36_1002",
   "jupyter_core 4.4.0 py_0",
   "markupsafe 1.0 py36hfa6e2cd_1001",
   "menuinst 1.4.14 py36hfa6e2cd_0",
   "nbformat 4.4.0 py_1",
   "openssl 1.0.2p hfa6e2cd_1001",
   "pip 10.0.1 py36_0",
   "pkginfo 1.4.2 py_1",
   "psutil 5.4.7 py36hfa6e2cd_1001",
   "pycosat 0.6.3 py36h413d8a4_0",
   "pycparser 2.18 py36hd053e01_1",
   "pyopenssl 18.0.0 py36_0",
   "pysocks 1.6.8 py36_0",
   "python 3.6.5 h0c2934d_0",
   "python-dateutil 2.7.3 py_0",
   "pytz 2018.5 py_0",
   "pywin32 223 py36hfa6e2cd_1",
   "pyyaml 3.13 py36hfa6e2cd_1001",
   "requests 2.18.4 py36h4371aae_1",
   "ruamel_yaml 0.15.37 py36hfa6e2cd_2",
   "setuptools 39.2.0 py36_0",
   "six 1.11.0 py36h4db2310_1",
   "tqdm 4.26.0 py_0",
   "traitlets 4.3.2 py36_1000",
   "urllib3 1.22 py36h276f60a_0",
   "vc 14 h0510ff6_3",
   "vs2008_express_vc_python_patch 1.0.0 0",
   "vs2015_runtime 14.0.25123 3",
   "wheel 0.31.1 py36_0",
   "wincertstore 0.2 py36h7fe50ca_0",
   "win_inet_pton 1.0.1 py36he67d7fd_1",
   "yaml 0.1.7 vc14_0"
  ],
  "summary": "Python bindings for xtensor, the C++ tensor algebra library",
  "tags": []
 },
 "conda_build_config": {
  "c_compiler": "vs2015",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "vs2015",
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": "python",
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x.x",
    "min_pin": "x.x.x"
   },
   "vc": {
    "max_pin": "x"
   }
  },
  "python": "3.6",
  "r_base": "3.4",
  "target_platform": "win-64",
  "vc": "14",
  "zip_keys": [
   [
    "vc",
    "cxx_compiler"
   ]
  ]
 },
 "files": [
  "Library/include/xtensor-python/pyarray.hpp",
  "Library/include/xtensor-python/pycontainer.hpp",
  "Library/include/xtensor-python/pystrides_adaptor.hpp",
  "Library/include/xtensor-python/pytensor.hpp",
  "Library/include/xtensor-python/pyvectorize.hpp",
  "Library/include/xtensor-python/xtensor_python_config.hpp",
  "Library/include/xtensor-python/xtensor_type_caster_base.hpp",
  "Library/lib/cmake/xtensor-python/xtensor-pythonConfig.cmake",
  "Library/lib/cmake/xtensor-python/xtensor-pythonConfigVersion.cmake",
  "Library/lib/cmake/xtensor-python/xtensor-pythonTargets.cmake"
 ],
 "index": {
  "arch": "x86_64",
  "build": "h80bff14_1000",
  "build_number": 1000,
  "depends": [
   "numpy",
   "pybind11 >=2.1.0,<2.3",
   "vc >=14,<15.0a0",
   "xtensor >=0.17.0,<0.18",
   "xtl >=0.4.9,<0.5"
  ],
  "license": "BSD 3-Clause",
  "license_family": "BSD",
  "name": "xtensor-python",
  "platform": "win",
  "subdir": "win-64",
  "timestamp": 1539552097611,
  "version": "0.20.1"
 },
 "metadata_version": 1,
 "name": "xtensor-python",
 "raw_recipe": "{% set name = \"xtensor-python\" %}\n{% set version = \"0.20.1\" %}\n{% set sha256 = \"c0f67022ffd10f31e3939c208732dbfab8887d37acae7ece3e06d7f2576c3ee3\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n    fn: {{ name }}-{{ version }}.tar.gz\n    url: https://github.com/QuantStack/xtensor-python/archive/{{ version }}.tar.gz\n    sha256: {{ sha256 }}\n\nbuild:\n  number: 1000\n  # Skipping all but one version of Python to avoid package duplication due to\n  # the build matrix generated for each Python version.\n  skip: True  # [win and vc<14]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n  host:\n    - xtl >=0.4.13,<0.5\n    - xtensor >=0.17.0,<0.18\n    - pybind11 >=2.1.0,<2.3\n    - numpy\n  run:\n    - xtl >=0.4.9,<0.5\n    - xtensor >=0.17.0,<0.18\n    - pybind11 >=2.1.0,<2.3\n    - numpy\n\ntest:\n  commands:\n    - test -d ${PREFIX}/include/xtensor-python  # [unix]\n    - test -f ${PREFIX}/include/xtensor-python/pyarray.hpp  # [unix]\n    - test -f ${PREFIX}/lib/cmake/xtensor-python/xtensor-pythonConfig.cmake  # [unix]\n    - test -f ${PREFIX}/lib/cmake/xtensor-python/xtensor-pythonConfigVersion.cmake  # [unix]\n    - if exist %LIBRARY_PREFIX%\\include\\xtensor-python\\pyarray.hpp (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_PREFIX%\\lib\\cmake\\xtensor-pythonConfig.cmake (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_PREFIX%\\lib\\cmake\\xtensor-pythonConfigVersion.cmake (exit 0) else (exit 1)  # [win]\n\nabout:\n  home: http://quantstack.net/xtensor\n  license: BSD 3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: 'Python bindings for xtensor, the C++ tensor algebra library'\n  description: 'Multi dimensional arrays with broadcasting and lazy computing'\n  doc_url: http://xtensor.readthedocs.io\n  dev_url: https://github.com/QuantStack/xtensor-python\n\nextra:\n  recipe-maintainers:\n    - SylvainCorlay\n    - JohanMabille\n",
 "rendered_recipe": {
  "about": {
   "description": "Multi dimensional arrays with broadcasting and lazy computing",
   "dev_url": "https://github.com/QuantStack/xtensor-python",
   "doc_url": "http://xtensor.readthedocs.io",
   "home": "http://quantstack.net/xtensor",
   "license": "BSD 3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Python bindings for xtensor, the C++ tensor algebra library"
  },
  "build": {
   "number": "1000",
   "string": "h80bff14_1000"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "JohanMabille",
    "SylvainCorlay"
   ]
  },
  "package": {
   "name": "xtensor-python",
   "version": "0.20.1"
  },
  "requirements": {
   "build": [
    "cmake 3.12.3 he025d50_0",
    "vs2015_runtime 14.0.25420 0",
    "vs2015_win-64 14.0.25123 h17c34da_3"
   ],
   "host": [
    "blas 1.0 mkl",
    "icc_rt 2017.0.4 h97af966_0",
    "intel-openmp 2019.0 118",
    "mkl 2019.0 118",
    "numpy 1.11.3 py37h53ece5f_11",
    "numpy-base 1.11.3 py37h8128ebf_11",
    "pybind11 2.2.4 py37he980bc4_1000",
    "python 3.7.0 hc182675_1005",
    "vc 14 0",
    "vs2015_runtime 14.0.25420 0",
    "xtensor 0.17.4 h1ad3211_1000",
    "xtl 0.4.16 h1ad3211_1000"
   ],
   "run": [
    "numpy",
    "pybind11 >=2.1.0,<2.3",
    "vc >=14,<15.0a0",
    "xtensor >=0.17.0,<0.18",
    "xtl >=0.4.9,<0.5"
   ]
  },
  "source": {
   "fn": "xtensor-python-0.20.1.tar.gz",
   "sha256": "c0f67022ffd10f31e3939c208732dbfab8887d37acae7ece3e06d7f2576c3ee3",
   "url": "https://github.com/QuantStack/xtensor-python/archive/0.20.1.tar.gz"
  },
  "test": {
   "commands": [
    "if exist %LIBRARY_PREFIX%\\include\\xtensor-python\\pyarray.hpp (exit 0) else (exit 1)",
    "if exist %LIBRARY_PREFIX%\\lib\\cmake\\xtensor-pythonConfig.cmake (exit 0) else (exit 1)",
    "if exist %LIBRARY_PREFIX%\\lib\\cmake\\xtensor-pythonConfigVersion.cmake (exit 0) else (exit 1)"
   ]
  }
 },
 "version": "0.20.1"
}