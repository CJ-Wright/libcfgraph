{
 "about": {
  "channels": [
   "conda-forge",
   "defaults",
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.19.2",
  "conda_private": false,
  "conda_version": "4.8.3",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ndmaxar",
    "oblute",
    "rluria14",
    "conda-forge/r"
   ]
  },
  "home": "http://gitlab.com/hrbrmstr/ndjson",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": [
   "/Users/runner/miniforge3/conda-bld/r-ndjson_1591047615853/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/lib/R/share/licenses/MIT",
   "LICENSE"
  ],
  "root_pkgs": [
   "bzip2 1.0.8 h0b31af3_2",
   "libedit 3.1.20170329 hcfe32e1_1001",
   "tqdm 4.46.0 pyh9f0ad1d_0",
   "zstd 1.4.4 h4b3e974_3",
   "conda-env 2.6.0 1",
   "chardet 3.0.4 py37hc8dfbb8_1006",
   "jq 1.6 h1de35cc_1000",
   "krb5 1.17.1 h1752a42_0",
   "libffi 3.2.1 h4a8c4bd_1007",
   "anaconda-client 1.7.2 py_0",
   "py-lief 0.9.0 py37h0ceac7d_1",
   "readline 8.0 hcfe32e1_0",
   "libcxx 10.0.0 h1af66ff_2",
   "glob2 0.7 py_0",
   "shyaml 0.6.1 py_0",
   "lz4-c 1.9.2 h4a8c4bd_1",
   "icu 67.1 h4a8c4bd_0",
   "ripgrep 12.1.1 h0b31af3_0",
   "jsonschema 3.2.0 py37hc8dfbb8_1",
   "decorator 4.4.2 py_0",
   "curl 7.69.1 h2d98d24_0",
   "pysocks 1.7.1 py37hc8dfbb8_1",
   "git 2.26.2 pl526hcc376a2_0",
   "cffi 1.14.0 py37h356ff06_0",
   "importlib_metadata 1.6.0 0",
   "libxml2 2.9.10 hc06c4ae_1",
   "libiconv 1.15 h0b31af3_1006",
   "soupsieve 2.0.1 py37hc8dfbb8_0",
   "yaml 0.2.4 h0b31af3_0",
   "brotlipy 0.7.0 py37h9bfed18_1000",
   "conda-build 3.19.2 py37hc8dfbb8_2",
   "libssh2 1.9.0 h39bdce6_2",
   "click 7.1.2 pyh9f0ad1d_0",
   "setuptools 46.4.0 py37hc8dfbb8_0",
   "pycparser 2.20 py_0",
   "conda-forge-ci-setup 3.0.14 py37hc8dfbb8_0",
   "tk 8.6.10 hbbe82c9_0",
   "beautifulsoup4 4.9.1 py37hc8dfbb8_0",
   "perl 5.26.2 haec8ef5_1006",
   "urllib3 1.25.9 py_0",
   "markupsafe 1.1.1 py37h9bfed18_1",
   "pyopenssl 19.1.0 py_1",
   "pyrsistent 0.16.0 py37h9bfed18_0",
   "zlib 1.2.11 h0b31af3_1006",
   "jupyter_core 4.6.3 py37hc8dfbb8_1",
   "pytz 2020.1 pyh9f0ad1d_0",
   "attrs 19.3.0 py_0",
   "pycosat 0.6.3 py37h9bfed18_1004",
   "libarchive 3.3.3 h02796b4_1008",
   "pip 20.1.1 py_1",
   "python_abi 3.7 1_cp37m",
   "ca-certificates 2020.4.5.1 hecc5488_0",
   "psutil 5.7.0 py37h9bfed18_1",
   "idna 2.9 py_1",
   "pyyaml 5.3.1 py37h9bfed18_0",
   "libcurl 7.69.1 hc0b9707_0",
   "wheel 0.34.2 py_1",
   "jinja2 2.11.2 pyh9f0ad1d_0",
   "openssl 1.1.1g h0b31af3_0",
   "liblief 0.9.0 h3e78482_1",
   "clyent 1.2.2 py_1",
   "nbformat 5.0.6 py_0",
   "pcre 8.44 h4a8c4bd_0",
   "pkginfo 1.5.0.1 py_0",
   "ruamel_yaml 0.15.80 py37h9bfed18_1001",
   "requests 2.23.0 pyh8c360ce_2",
   "certifi 2020.4.5.1 py37hc8dfbb8_0",
   "zipp 3.1.0 py_0",
   "ncurses 6.1 h0a44026_1002",
   "cryptography 2.9.2 py37he655712_0",
   "gettext 0.19.8.1 h46ab8bc_1002",
   "sqlite 3.30.1 h93121df_0",
   "conda 4.8.3 py37hc8dfbb8_1",
   "ipython_genutils 0.2.0 py_1",
   "lzo 2.10 h1de35cc_1000",
   "oniguruma 6.9.3 h01d97ff_0",
   "python-libarchive-c 2.9 py37_0",
   "xz 5.2.5 h0b31af3_0",
   "python-dateutil 2.8.1 py_0",
   "six 1.15.0 pyh9f0ad1d_0",
   "importlib-metadata 1.6.0 py37hc8dfbb8_0",
   "traitlets 4.3.3 py37hc8dfbb8_1",
   "conda-package-handling 1.6.0 py37h9bfed18_2",
   "python 3.7.6 h90870a6_5_cpython",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "expat 2.2.9 h4a8c4bd_2"
  ],
  "summary": "Streaming 'JSON' ('ndjson') has one 'JSON' record per-line and many modern 'ndjson' files contain large numbers of records. These constructs may not be columnar in nature, but it is often useful to read in these files and \"flatten\" the structure out to enable working with the data in an R 'data.frame'-like context. Functions are provided that make it possible to read in plain 'ndjson' files or compressed ('gz') 'ndjson' files and either validate the format of the records or create \"flat\" 'data.table' structures from them.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_11.3.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.9",
  "c_compiler": "clang",
  "c_compiler_version": "9",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "cxx_compiler_version": "9",
  "extend_keys": [
   "ignore_version",
   "extend_keys",
   "pin_run_as_build",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "macos_min_version": "10.9",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7",
  "r_base": "4.0",
  "target_platform": "osx-64"
 },
 "files": [
  "lib/R/library/ndjson/DESCRIPTION",
  "lib/R/library/ndjson/INDEX",
  "lib/R/library/ndjson/LICENSE",
  "lib/R/library/ndjson/Meta/Rd.rds",
  "lib/R/library/ndjson/Meta/features.rds",
  "lib/R/library/ndjson/Meta/hsearch.rds",
  "lib/R/library/ndjson/Meta/links.rds",
  "lib/R/library/ndjson/Meta/nsInfo.rds",
  "lib/R/library/ndjson/Meta/package.rds",
  "lib/R/library/ndjson/NAMESPACE",
  "lib/R/library/ndjson/NEWS.md",
  "lib/R/library/ndjson/R/ndjson",
  "lib/R/library/ndjson/R/ndjson.rdb",
  "lib/R/library/ndjson/R/ndjson.rdx",
  "lib/R/library/ndjson/extdata/test.json",
  "lib/R/library/ndjson/extdata/testgz.json.gz",
  "lib/R/library/ndjson/help/AnIndex",
  "lib/R/library/ndjson/help/aliases.rds",
  "lib/R/library/ndjson/help/ndjson.rdb",
  "lib/R/library/ndjson/help/ndjson.rdx",
  "lib/R/library/ndjson/help/paths.rds",
  "lib/R/library/ndjson/html/00Index.html",
  "lib/R/library/ndjson/html/R.css",
  "lib/R/library/ndjson/include/json.h",
  "lib/R/library/ndjson/libs/ndjson.dylib",
  "lib/R/library/ndjson/tinytest/test_ndjson.R"
 ],
 "index": {
  "arch": "x86_64",
  "build": "r40hc5da6b9_1",
  "build_number": 1,
  "depends": [
   "libcxx >=9.0.1",
   "r-base >=4.0,<4.1.0a0",
   "r-data.table",
   "r-rcpp",
   "r-tibble",
   "zlib"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "r-ndjson",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1591047877639,
  "version": "0.8.0"
 },
 "metadata_version": 1,
 "name": "r-ndjson",
 "raw_recipe": "{% set version = '0.8.0' %}\n\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: r-ndjson\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/ndjson_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/ndjson/ndjson_{{ version }}.tar.gz\n  sha256: 22a037dbad0ae17e0ac442f45370fa7b4c4cc23f66ef1a949fe4e910dd5b7f53\n\nbuild:\n  number: 1\n  skip: True  # [win]\n\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ posix }}make\n\n  host:\n    - r-base\n    - r-rcpp\n    - r-data.table\n    - r-tibble\n\n  run:\n    - r-base\n    - r-rcpp\n    - r-data.table\n    - r-tibble\n    - zlib\n\ntest:\n  commands:\n    - $R -e \"library('ndjson')\"\n\nabout:\n  home: http://gitlab.com/hrbrmstr/ndjson\n  license: MIT\n  summary: Streaming 'JSON' ('ndjson') has one 'JSON' record per-line and many modern 'ndjson'\n    files contain large numbers of records. These constructs may not be columnar in\n    nature, but it is often useful to read in these files and \"flatten\" the structure\n    out to enable working with the data in an R 'data.frame'-like context. Functions\n    are provided that make it possible to read in plain 'ndjson' files or compressed\n    ('gz') 'ndjson' files and either validate the format of the records or create \"flat\"\n    'data.table' structures from them.\n  license_family: MIT\n  license_file:\n    - '{{ environ[\"PREFIX\"] }}/lib/R/share/licenses/MIT'\n    - LICENSE\n\nextra:\n  recipe-maintainers:\n    - ndmaxar\n    - oblute\n    - rluria14\n    - conda-forge/r\n\n# The original CRAN metadata for this package was:\n\n# Package: ndjson\n# Type: Package\n# Title: Wicked-Fast Streaming 'JSON' ('ndjson') Reader\n# Version: 0.8.0\n# Date: 2019-11-13\n# Authors@R: c( person(\"Bob\", \"Rudis\", email = \"bob@rud.is\", role = c(\"aut\", \"cre\"), comment = c(ORCID = \"0000-0001-5670-2640\")), person(\"Niels\", \"Lohmann\", role = \"aut\", comment = \"C++ json parser\"), person(\"Deepak\", \"Bandyopadhyay\", role = \"aut\", comment = \"C++ gzstream\"), person(\"Lutz\", \"Kettner\", role = \"aut\", comment = \"C++ gzstream\"), person(\"Neal\", \"Fultz\", role = \"ctb\", comment = \"Rcpp integration\"), person(\"Maarten\", \"Demeyer\", role = \"ctb\", comment = \"dtplyr cleanup\"))\n# Maintainer: Bob Rudis <bob@rud.is>\n# Description: Streaming 'JSON' ('ndjson') has one 'JSON' record per-line and many modern 'ndjson' files contain large numbers of records. These constructs may not be columnar in nature, but it is often useful to read in these files and \"flatten\" the structure out to enable working with the data in an R 'data.frame'-like context. Functions are provided that make it possible to read in plain 'ndjson' files or compressed ('gz') 'ndjson' files and either validate the format of the records or create \"flat\" 'data.table' structures from them.\n# URL: http://gitlab.com/hrbrmstr/ndjson\n# BugReports: https://gitlab.com/hrbrmstr/ndjson/issues\n# SystemRequirements: zlib, C++14\n# NeedsCompilation: yes\n# License: MIT + file LICENSE\n# Encoding: UTF-8\n# Suggests: tinytest, covr\n# Depends: R (>= 3.2.0)\n# Imports: Rcpp, data.table, tibble\n# LinkingTo: Rcpp\n# RoxygenNote: 6.1.1\n# Packaged: 2019-11-13 14:54:51 UTC; hrbrmstr\n# Author: Bob Rudis [aut, cre] (<https://orcid.org/0000-0001-5670-2640>), Niels Lohmann [aut] (C++ json parser), Deepak Bandyopadhyay [aut] (C++ gzstream), Lutz Kettner [aut] (C++ gzstream), Neal Fultz [ctb] (Rcpp integration), Maarten Demeyer [ctb] (dtplyr cleanup)\n# Repository: CRAN\n# Date/Publication: 2019-11-13 15:20:02 UTC\n\n# See\n# https://docs.conda.io/projects/conda-build for\n# more information about meta.yaml\n",
 "rendered_recipe": {
  "about": {
   "home": "http://gitlab.com/hrbrmstr/ndjson",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": [
    "/Users/runner/miniforge3/conda-bld/r-ndjson_1591047615853/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/lib/R/share/licenses/MIT",
    "LICENSE"
   ],
   "summary": "Streaming 'JSON' ('ndjson') has one 'JSON' record per-line and many modern 'ndjson' files contain large numbers of records. These constructs may not be columnar in nature, but it is often useful to read in these files and \"flatten\" the structure out to enable working with the data in an R 'data.frame'-like context. Functions are provided that make it possible to read in plain 'ndjson' files or compressed ('gz') 'ndjson' files and either validate the format of the records or create \"flat\" 'data.table' structures from them."
  },
  "build": {
   "number": "1",
   "rpaths": [
    "lib/",
    "lib/R/lib/"
   ],
   "string": "r40hc5da6b9_1"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "conda-forge/r",
    "ndmaxar",
    "oblute",
    "rluria14"
   ]
  },
  "package": {
   "name": "r-ndjson",
   "version": "0.8.0"
  },
  "requirements": {
   "build": [
    "cctools 927.0.2 h5ba7a2e_4",
    "clang 9.0.1 default_hf57f61e_0",
    "clang-tools 9.0.1 default_hf57f61e_0",
    "clang_osx-64 9.0.1 h05bbb7f_2",
    "clangxx 9.0.1 default_hf57f61e_0",
    "clangxx_osx-64 9.0.1 h05bbb7f_2",
    "compiler-rt 9.0.1 h6a512c6_3",
    "compiler-rt_osx-64 9.0.1 h99342c6_3",
    "ld64 450.3 h3c32e8a_4",
    "libcxx 10.0.0 h1af66ff_2",
    "libllvm9 9.0.1 h7475705_1",
    "llvm-tools 9.0.1 h1341992_1",
    "llvmdev 9.0.1 h7475705_1",
    "make 4.3 h0b31af3_0",
    "tapi 1000.10.8 ha1b3eb9_4",
    "zlib 1.2.11 h0b31af3_1006"
   ],
   "host": [
    "_r-mutex 1.0.1 anacondar_1",
    "bwidget 1.9.14 0",
    "bzip2 1.0.8 h0b31af3_2",
    "ca-certificates 2020.4.5.1 hecc5488_0",
    "cairo 1.16.0 hec6a9b0_1003",
    "cctools 927.0.2 h5ba7a2e_4",
    "clang 9.0.1 default_hf57f61e_0",
    "clang-tools 9.0.1 default_hf57f61e_0",
    "clang_osx-64 9.0.1 h05bbb7f_0",
    "clangxx 9.0.1 default_hf57f61e_0",
    "clangxx_osx-64 9.0.1 h05bbb7f_2",
    "compiler-rt 9.0.1 h6a512c6_3",
    "compiler-rt_osx-64 9.0.1 h99342c6_3",
    "curl 7.69.1 h2d98d24_0",
    "fontconfig 2.13.1 h6b1039f_1001",
    "freetype 2.10.2 h8da9a1a_0",
    "fribidi 1.0.9 h0b31af3_0",
    "gettext 0.19.8.1 h46ab8bc_1002",
    "gfortran_impl_osx-64 7.3.0 hf4212f2_2",
    "gfortran_osx-64 7.3.0 h22b1bf0_11",
    "glib 2.64.3 h577aef8_0",
    "gmp 6.2.0 h4a8c4bd_2",
    "graphite2 1.3.13 h12caacf_1001",
    "gsl 2.6 ha2d443c_0",
    "harfbuzz 2.4.0 hd8d2a14_3",
    "icu 64.2 h6de7cb9_1",
    "isl 0.19 0",
    "jpeg 9d h0b31af3_0",
    "krb5 1.17.1 h1752a42_0",
    "ld64 450.3 h3c32e8a_4",
    "libblas 3.8.0 16_openblas",
    "libcblas 3.8.0 16_openblas",
    "libcurl 7.69.1 hc0b9707_0",
    "libcxx 10.0.0 h1af66ff_2",
    "libedit 3.1.20170329 hcfe32e1_1001",
    "libffi 3.2.1 h4a8c4bd_1007",
    "libgfortran 4.0.0 2",
    "libiconv 1.15 h0b31af3_1006",
    "liblapack 3.8.0 16_openblas",
    "libllvm9 9.0.1 h7475705_1",
    "libopenblas 0.3.9 h3d69b6c_0",
    "libpng 1.6.37 hbbe82c9_1",
    "libssh2 1.9.0 h39bdce6_2",
    "libtiff 4.1.0 h2ae36a8_6",
    "libwebp-base 1.1.0 h0b31af3_3",
    "libxml2 2.9.10 h53d96d6_0",
    "llvm-openmp 10.0.0 h28b9765_0",
    "lz4-c 1.9.2 h4a8c4bd_1",
    "make 4.3 h0b31af3_0",
    "mpc 1.1.0 h4160ff4_1007",
    "mpfr 4.0.2 h65ac59c_1",
    "ncurses 6.1 h0a44026_1002",
    "openssl 1.1.1g h0b31af3_0",
    "pango 1.42.4 haa940fe_4",
    "pcre 8.44 h4a8c4bd_0",
    "pcre2 10.34 h977ceac_0",
    "pixman 0.38.0 h01d97ff_1003",
    "python 3.8.3 cpython_hd5f0129_0",
    "python_abi 3.8 1_cp38",
    "r-assertthat 0.2.1 r40h6115d3f_2",
    "r-backports 1.1.7 r40h17f1fa6_0",
    "r-base 4.0.0 hec7d121_3",
    "r-cli 2.0.2 r40h6115d3f_1",
    "r-crayon 1.3.4 r40h6115d3f_1003",
    "r-data.table 1.12.8 r40h17f1fa6_1",
    "r-digest 0.6.25 r40hc5da6b9_2",
    "r-ellipsis 0.3.1 r40h17f1fa6_0",
    "r-fansi 0.4.1 r40h17f1fa6_1",
    "r-glue 1.4.1 r40h17f1fa6_0",
    "r-lifecycle 0.2.0 r40h6115d3f_1",
    "r-magrittr 1.5 r40h6115d3f_1003",
    "r-pillar 1.4.4 r40h6115d3f_0",
    "r-pkgconfig 2.0.3 r40h6115d3f_1",
    "r-rcpp 1.0.4.6 r40hc5da6b9_1",
    "r-rlang 0.4.6 r40h17f1fa6_0",
    "r-tibble 3.0.1 r40h17f1fa6_1",
    "r-utf8 1.1.4 r40h17f1fa6_1003",
    "r-vctrs 0.3.0 r40h17f1fa6_0",
    "r-zeallot 0.1.0 r40h6115d3f_1002",
    "readline 8.0 hcfe32e1_0",
    "sqlite 3.30.1 h93121df_0",
    "tapi 1000.10.8 ha1b3eb9_4",
    "tk 8.6.10 hbbe82c9_0",
    "tktable 2.10 h008db23_3",
    "xz 5.2.5 h0b31af3_0",
    "zlib 1.2.11 h0b31af3_1006",
    "zstd 1.4.4 h4b3e974_3"
   ],
   "run": [
    "libcxx >=9.0.1",
    "r-base >=4.0,<4.1.0a0",
    "r-data.table",
    "r-rcpp",
    "r-tibble",
    "zlib"
   ]
  },
  "source": {
   "sha256": "22a037dbad0ae17e0ac442f45370fa7b4c4cc23f66ef1a949fe4e910dd5b7f53",
   "url": [
    "https://cran.r-project.org/src/contrib/Archive/ndjson/ndjson_0.8.0.tar.gz",
    "https://cran.r-project.org/src/contrib/ndjson_0.8.0.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('ndjson')\""
   ]
  }
 },
 "version": "0.8.0"
}