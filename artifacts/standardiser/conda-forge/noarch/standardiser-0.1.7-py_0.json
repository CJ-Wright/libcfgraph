{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.17.8",
  "conda_private": false,
  "conda_version": "4.7.5",
  "dev_url": "https://github.com/flatkinson/standardiser",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "tsenapathi"
   ]
  },
  "home": "https://www.ebi.ac.uk/chembldb/index.php/ws",
  "identifiers": [],
  "keywords": [],
  "license": "Apache Software",
  "license_family": "APACHE",
  "root_pkgs": [
   "py-lief 0.9.0 py37he1b5a44_1",
   "liblief 0.9.0 hf8a498c_1",
   "attrs 19.1.0 py_0",
   "conda-build 3.17.8 py37_1",
   "clyent 1.2.2 py_1",
   "sqlite 3.28.0 hcee41ef_1",
   "libiconv 1.15 h516909a_1005",
   "xz 5.2.4 h14c3975_1001",
   "patch 2.7.6 h14c3975_1001",
   "bzip2 1.0.6 h14c3975_1002",
   "tqdm 4.32.2 py_0",
   "icu 58.2 hf484d3e_1000",
   "patchelf 0.10 he1b5a44_0",
   "libffi 3.2.1 he1b5a44_1006",
   "pycparser 2.19 py37_1",
   "libgcc-ng 9.1.0 hdf63c60_0",
   "jsonschema 3.0.1 py37_0",
   "pyopenssl 19.0.0 py37_0",
   "anaconda-client 1.7.2 py_0",
   "python-dateutil 2.8.0 py_0",
   "glob2 0.7 py_0",
   "libarchive 3.3.3 hb44662c_1005",
   "libcurl 7.64.1 hda55be3_0",
   "pip 19.1.1 py37_0",
   "conda 4.7.5 py37_0",
   "ruamel_yaml 0.15.71 py37h14c3975_1000",
   "soupsieve 1.9.2 py37_0",
   "python-libarchive-c 2.8 py37_1004",
   "pyyaml 5.1.1 py37h516909a_0",
   "pycosat 0.6.3 py37h14c3975_1001",
   "zstd 1.4.0 h3b9ef0a_0",
   "jupyter_core 4.4.0 py_0",
   "expat 2.2.5 he1b5a44_1003",
   "certifi 2019.6.16 py37_0",
   "ncurses 6.1 hf484d3e_1002",
   "psutil 5.6.3 py37h516909a_0",
   "six 1.12.0 py37_1000",
   "cryptography 2.7 py37h72c5cf5_0",
   "pysocks 1.7.0 py37_0",
   "jinja2 2.10.1 py_0",
   "tini 0.18.0 h14c3975_1001",
   "pkginfo 1.5.0.1 py_0",
   "pytz 2019.1 py_0",
   "gettext 0.19.8.1 hc5be6a0_1002",
   "readline 8.0 hf8c457e_0",
   "idna 2.8 py37_1000",
   "traitlets 4.3.2 py37_1000",
   "decorator 4.4.0 py_0",
   "libstdcxx-ng 9.1.0 hdf63c60_0",
   "tk 8.6.9 hed695b0_1002",
   "git 2.22.0 pl526hce37bd2_0",
   "nbformat 4.4.0 py_1",
   "pyrsistent 0.15.3 py37h516909a_0",
   "curl 7.64.1 hf8cf82a_0",
   "requests 2.22.0 py37_0",
   "ipython_genutils 0.2.0 py_1",
   "asn1crypto 0.24.0 py37_1003",
   "lz4-c 1.8.3 he1b5a44_1001",
   "markupsafe 1.1.1 py37h14c3975_0",
   "libedit 3.1.20170329 hf8c457e_1001",
   "setuptools 41.0.1 py37_0",
   "beautifulsoup4 4.7.1 py37_1001",
   "openssl 1.1.1b h14c3975_1",
   "gosu 1.10 h81701ea_1001",
   "chardet 3.0.4 py37_1003",
   "_libgcc_mutex 0.1 main",
   "wheel 0.33.4 py37_0",
   "ca-certificates 2019.6.16 hecc5488_0",
   "conda-package-handling 1.3.10 py37_0",
   "filelock 3.0.10 py_0",
   "python 3.7.3 h33d41f4_1",
   "krb5 1.16.3 h05b26f9_1001",
   "zlib 1.2.11 h14c3975_1004",
   "libxml2 2.9.9 h13577e0_1",
   "libssh2 1.8.2 h22169c7_2",
   "cffi 1.12.3 py37h8022711_0",
   "perl 5.26.2 h516909a_1006",
   "urllib3 1.24.3 py37_0",
   "yaml 0.1.7 h14c3975_1001",
   "lzo 2.10 h14c3975_1000",
   "click 7.0 py_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 2.3.1 py37_0"
  ],
  "summary": "Provides a simple way of standardising molecules as a prelude to e.g. molecular modelling exercises.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "condaforge/linux-anvil-comp7",
  "extend_keys": [
   "pin_run_as_build",
   "ignore_build_only_deps",
   "extend_keys",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x.x",
    "min_pin": "x.x.x"
   }
  },
  "python": "3.7",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "files": [
  "site-packages/standardiser-0.1.7.dist-info/INSTALLER",
  "site-packages/standardiser-0.1.7.dist-info/METADATA",
  "site-packages/standardiser-0.1.7.dist-info/RECORD",
  "site-packages/standardiser-0.1.7.dist-info/WHEEL",
  "site-packages/standardiser/SDF.py",
  "site-packages/standardiser/__init__.py",
  "site-packages/standardiser/bin/__init__.py",
  "site-packages/standardiser/bin/rules_applied.py",
  "site-packages/standardiser/bin/standardiser.py",
  "site-packages/standardiser/bin/subset1.py",
  "site-packages/standardiser/bin/subset2.py",
  "site-packages/standardiser/bin/unique_smiles.py",
  "site-packages/standardiser/break_bonds.py",
  "site-packages/standardiser/data/rules.dat",
  "site-packages/standardiser/data/salts.tsv",
  "site-packages/standardiser/docs/00_Introduction.ipynb",
  "site-packages/standardiser/docs/01_break_bonds.ipynb",
  "site-packages/standardiser/docs/02_neutralise.ipynb",
  "site-packages/standardiser/docs/03_rules.ipynb",
  "site-packages/standardiser/docs/04_unsalt.ipynb",
  "site-packages/standardiser/docs/05_standardise.ipynb",
  "site-packages/standardiser/docs/06_alternative.ipynb",
  "site-packages/standardiser/docs/Charge-separated_systems.ipynb",
  "site-packages/standardiser/docs/Conjugated_cations_and_charge_neutralisation.ipynb",
  "site-packages/standardiser/docs/Hydroxy_pyridine_within_ring.ipynb",
  "site-packages/standardiser/docs/Keto-enol_tautomerism.ipynb",
  "site-packages/standardiser/docs/Miscellaeny.ipynb",
  "site-packages/standardiser/docs/Multiple_possible_tautomers.ipynb",
  "site-packages/standardiser/docs/Neutralisation_strategy.ipynb",
  "site-packages/standardiser/docs/Rule_application_strategy.ipynb",
  "site-packages/standardiser/docs/Sanity_Checking.ipynb",
  "site-packages/standardiser/docs/Tautomerism_and_aromaticity.ipynb",
  "site-packages/standardiser/docs/demo.py",
  "site-packages/standardiser/docs/label_mols.ipynb",
  "site-packages/standardiser/docs/setup.py",
  "site-packages/standardiser/docs/standardiser.pdf",
  "site-packages/standardiser/docs/standardiser.pptx",
  "site-packages/standardiser/knime/standardiser.zip",
  "site-packages/standardiser/neutralise.py",
  "site-packages/standardiser/rules.py",
  "site-packages/standardiser/standardise.py",
  "site-packages/standardiser/unsalt.py",
  "site-packages/standardiser/utils.py"
 ],
 "index": {
  "arch": null,
  "build": "py_0",
  "build_number": 0,
  "depends": [
   "python <3",
   "rdkit"
  ],
  "license": "Apache Software",
  "license_family": "APACHE",
  "name": "standardiser",
  "noarch": "python",
  "platform": null,
  "subdir": "noarch",
  "timestamp": 1562752100632,
  "version": "0.1.7"
 },
 "metadata_version": 1,
 "name": "standardiser",
 "raw_recipe": "{% set name = \"standardiser\" %}\n{% set version = \"0.1.7\" %}\n\npackage:\n  name: \"{{ name|lower }}\"\n  version: \"{{ version }}\"\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 58438da017fa559a8ec7d9b3d3c18ff06d172f2437c8172af50d0d67dc39f462\n\nbuild:\n  noarch: python\n  number: 0\n  entry_points:\n    - standardiser=standardiser.bin.standardiser:main\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv \"\n\nrequirements:\n  host:\n    - pip\n    - python <3\n  run:\n    - python <3\n    - rdkit\n\ntest:\n  imports:\n    - standardiser\n    - standardiser.bin\n  commands:\n    - standardiser --help\n\nabout:\n  home: https://www.ebi.ac.uk/chembldb/index.php/ws\n  license: Apache Software\n  license_family: APACHE\n  summary: Provides a simple way of standardising molecules as a prelude to e.g. molecular modelling exercises. \n  dev_url: https://github.com/flatkinson/standardiser\n\nextra:\n  recipe-maintainers:\n    - tsenapathi\n",
 "rendered_recipe": {
  "about": {
   "dev_url": "https://github.com/flatkinson/standardiser",
   "home": "https://www.ebi.ac.uk/chembldb/index.php/ws",
   "license": "Apache Software",
   "license_family": "APACHE",
   "summary": "Provides a simple way of standardising molecules as a prelude to e.g. molecular modelling exercises."
  },
  "build": {
   "entry_points": [
    "standardiser=standardiser.bin.standardiser:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/home/conda/feedstock_root/build_artifacts/standardiser_1562752047545/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehol/bin/python -m pip install . --no-deps --ignore-installed -vv ",
   "string": "py_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "tsenapathi"
   ]
  },
  "package": {
   "name": "standardiser",
   "version": "0.1.7"
  },
  "requirements": {
   "host": [
    "_libgcc_mutex 0.1 main",
    "ca-certificates 2019.6.16 hecc5488_0",
    "certifi 2019.6.16 py27_0",
    "libffi 3.2.1 he1b5a44_1006",
    "libgcc-ng 9.1.0 hdf63c60_0",
    "libstdcxx-ng 9.1.0 hdf63c60_0",
    "ncurses 6.1 hf484d3e_1002",
    "openssl 1.1.1b h14c3975_1",
    "pip 19.1.1 py27_0",
    "python 2.7.15 h5a48372_1009",
    "readline 8.0 hf8c457e_0",
    "setuptools 41.0.1 py27_0",
    "sqlite 3.28.0 hcee41ef_1",
    "tk 8.6.9 hed695b0_1002",
    "wheel 0.33.4 py27_0",
    "zlib 1.2.11 h14c3975_1004"
   ],
   "run": [
    "python <3",
    "rdkit"
   ]
  },
  "source": {
   "sha256": "58438da017fa559a8ec7d9b3d3c18ff06d172f2437c8172af50d0d67dc39f462",
   "url": "https://pypi.io/packages/source/s/standardiser/standardiser-0.1.7.tar.gz"
  },
  "test": {
   "commands": [
    "standardiser --help"
   ],
   "imports": [
    "standardiser",
    "standardiser.bin"
   ]
  }
 },
 "version": "0.1.7"
}