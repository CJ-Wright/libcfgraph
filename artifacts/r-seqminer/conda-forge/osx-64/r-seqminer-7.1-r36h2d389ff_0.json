{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.18.9",
  "conda_private": false,
  "conda_version": "4.7.12",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "conda-forge/r"
   ]
  },
  "home": "http://seqminer.genomic.codes",
  "identifiers": [],
  "keywords": [],
  "license": "GPL",
  "license_family": "GPL",
  "license_file": "LICENSE",
  "root_pkgs": [
   "anaconda-client 1.7.2 py_0",
   "asn1crypto 0.24.0 py37_1003",
   "attrs 19.1.0 py_0",
   "beautifulsoup4 4.8.0 py37_0",
   "bzip2 1.0.8 h01d97ff_1",
   "ca-certificates 2019.9.11 hecc5488_0",
   "certifi 2019.9.11 py37_0",
   "cffi 1.12.3 py37hccf1714_0",
   "chardet 3.0.4 py37_1003",
   "click 7.0 py_0",
   "clyent 1.2.2 py_1",
   "conda 4.7.12 py37_0",
   "conda-build 3.18.9 py37_5",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 2.5.1 py37_0",
   "conda-package-handling 1.6.0 py37h01d97ff_0",
   "cryptography 2.7 py37h212c5bf_0",
   "decorator 4.4.0 py_0",
   "filelock 3.0.10 py_0",
   "glob2 0.7 py_0",
   "icu 64.2 h6de7cb9_1",
   "idna 2.8 py37_1000",
   "ipython_genutils 0.2.0 py_1",
   "jinja2 2.10.1 py_0",
   "jq 1.6 h1de35cc_1000",
   "jsonschema 3.0.2 py37_0",
   "jupyter_core 4.4.0 py_0",
   "libarchive 3.3.3 h5c473cc_1006",
   "libcxx 8.0.1 0",
   "libcxxabi 8.0.1 0",
   "libffi 3.2.1 h6de7cb9_1006",
   "libiconv 1.15 h01d97ff_1005",
   "liblief 0.9.0 h2a1bed3_1",
   "libxml2 2.9.9 h12c6b28_5",
   "lz4-c 1.8.3 h6de7cb9_1001",
   "lzo 2.10 h1de35cc_1000",
   "markupsafe 1.1.1 py37h1de35cc_0",
   "nbformat 4.4.0 py_1",
   "ncurses 6.1 h0a44026_1002",
   "oniguruma 6.9.3 h01d97ff_0",
   "openssl 1.1.1c h01d97ff_0",
   "pkginfo 1.5.0.1 py_0",
   "psutil 5.6.3 py37h01d97ff_0",
   "py-lief 0.9.0 py37h6d6d4d2_1",
   "pycosat 0.6.3 py37h1de35cc_1001",
   "pycparser 2.19 py37_1",
   "pyopenssl 19.0.0 py37_0",
   "pyrsistent 0.15.4 py37h01d97ff_0",
   "pysocks 1.7.1 py37_0",
   "python 3.7.3 h93065d6_1",
   "python-dateutil 2.8.0 py_0",
   "python-libarchive-c 2.8 py37_1004",
   "pytz 2019.2 py_0",
   "pyyaml 5.1.2 py37h01d97ff_0",
   "readline 8.0 hcfe32e1_0",
   "requests 2.22.0 py37_1",
   "ripgrep 11.0.2 h01d97ff_3",
   "ruamel_yaml 0.15.71 py37h1de35cc_1000",
   "setuptools 41.2.0 py37_0",
   "shyaml 0.6.0 py_0",
   "six 1.12.0 py37_1000",
   "soupsieve 1.9.3 py37_0",
   "sqlite 3.29.0 hb7d70f7_1",
   "tk 8.6.9 h2573ce8_1003",
   "tqdm 4.36.1 py_0",
   "traitlets 4.3.2 py37_1000",
   "urllib3 1.25.5 py37_0",
   "xz 5.2.4 h1de35cc_1001",
   "yaml 0.1.7 h1de35cc_1001",
   "zlib 1.2.11 h01d97ff_1006",
   "zstd 1.4.0 ha9f0a20_0"
  ],
  "summary": "Integrate sequencing data (Variant call format, e.g. VCF or BCF) or meta-analysis results in R. This package can help you (1) read VCF/BCF/BGEN files by chromosomal ranges (e.g. 1:100-200); (2) read RareMETAL summary statistics files; (3) read tables from a tabix-indexed files; (4) annotate VCF/BCF files; (5) create customized workflow based on Makefile.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.9",
  "bzip2": "1",
  "c_compiler": "clang",
  "c_compiler_version": "4",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "cxx_compiler_version": "4",
  "extend_keys": [
   "ignore_build_only_deps",
   "pin_run_as_build",
   "ignore_version",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "macos_min_version": "10.9",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "bzip2": {
    "max_pin": "x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "zlib": {
    "max_pin": "x.x"
   },
   "zstd": {
    "max_pin": "x.x.x"
   }
  },
  "python": "3.7",
  "r_base": "3.6",
  "target_platform": "osx-64",
  "zlib": "1.2",
  "zstd": "1.4.0"
 },
 "files": [
  "lib/R/library/seqminer/CITATION",
  "lib/R/library/seqminer/DESCRIPTION",
  "lib/R/library/seqminer/INDEX",
  "lib/R/library/seqminer/LICENSE",
  "lib/R/library/seqminer/Meta/Rd.rds",
  "lib/R/library/seqminer/Meta/demo.rds",
  "lib/R/library/seqminer/Meta/features.rds",
  "lib/R/library/seqminer/Meta/hsearch.rds",
  "lib/R/library/seqminer/Meta/links.rds",
  "lib/R/library/seqminer/Meta/nsInfo.rds",
  "lib/R/library/seqminer/Meta/package.rds",
  "lib/R/library/seqminer/NAMESPACE",
  "lib/R/library/seqminer/R/seqminer",
  "lib/R/library/seqminer/R/seqminer.rdb",
  "lib/R/library/seqminer/R/seqminer.rdx",
  "lib/R/library/seqminer/bgen/all.anno.filtered.extract.bgen",
  "lib/R/library/seqminer/bgen/all.anno.filtered.extract.bgen.bgi",
  "lib/R/library/seqminer/demo/annotate.R",
  "lib/R/library/seqminer/demo/meta.workflow.R",
  "lib/R/library/seqminer/demo/vcf.workflow.R",
  "lib/R/library/seqminer/doc/Manual.html",
  "lib/R/library/seqminer/help/AnIndex",
  "lib/R/library/seqminer/help/aliases.rds",
  "lib/R/library/seqminer/help/paths.rds",
  "lib/R/library/seqminer/help/seqminer.rdb",
  "lib/R/library/seqminer/help/seqminer.rdx",
  "lib/R/library/seqminer/html/00Index.html",
  "lib/R/library/seqminer/html/R.css",
  "lib/R/library/seqminer/libs/seqminer.dylib",
  "lib/R/library/seqminer/plink/all.anno.filtered.extract.bed",
  "lib/R/library/seqminer/plink/all.anno.filtered.extract.bim",
  "lib/R/library/seqminer/plink/all.anno.filtered.extract.fam",
  "lib/R/library/seqminer/rvtests/rvtest.MetaCov.assoc.gz",
  "lib/R/library/seqminer/rvtests/rvtest.MetaCov.assoc.gz.tbi",
  "lib/R/library/seqminer/rvtests/rvtest.MetaScore.assoc.anno.gz",
  "lib/R/library/seqminer/rvtests/rvtest.MetaScore.assoc.anno.gz.tbi",
  "lib/R/library/seqminer/rvtests/rvtest.MetaScore.assoc.gz",
  "lib/R/library/seqminer/rvtests/rvtest.MetaScore.assoc.gz.tbi",
  "lib/R/library/seqminer/rvtests/rvtest.MetaSkew.assoc.gz",
  "lib/R/library/seqminer/rvtests/rvtest.MetaSkew.assoc.gz.tbi",
  "lib/R/library/seqminer/tabanno/input.100.vcf.gz",
  "lib/R/library/seqminer/tabanno/input.demo.vcf",
  "lib/R/library/seqminer/tabanno/input.test.vcf",
  "lib/R/library/seqminer/tabanno/test.bed",
  "lib/R/library/seqminer/tabanno/test.dbNSFP.gz",
  "lib/R/library/seqminer/tabanno/test.dbNSFP.gz.tbi",
  "lib/R/library/seqminer/tabanno/test.fa",
  "lib/R/library/seqminer/tabanno/test.fa.fai",
  "lib/R/library/seqminer/tabanno/tmp.vcf",
  "lib/R/library/seqminer/test-triallelic/bi.MetaCov.assoc.gz",
  "lib/R/library/seqminer/test-triallelic/bi.MetaCov.assoc.gz.tbi",
  "lib/R/library/seqminer/test-triallelic/bi.MetaScore.assoc.gz",
  "lib/R/library/seqminer/test-triallelic/bi.MetaScore.assoc.gz.tbi",
  "lib/R/library/seqminer/test-triallelic/test2.study1.MetaCov.assoc.gz",
  "lib/R/library/seqminer/test-triallelic/test2.study1.MetaCov.assoc.gz.tbi",
  "lib/R/library/seqminer/test-triallelic/test2.study1.MetaScore.assoc.gz",
  "lib/R/library/seqminer/test-triallelic/test2.study1.MetaScore.assoc.gz.tbi",
  "lib/R/library/seqminer/test-triallelic/test2.study2.MetaCov.assoc.gz",
  "lib/R/library/seqminer/test-triallelic/test2.study2.MetaCov.assoc.gz.tbi",
  "lib/R/library/seqminer/test-triallelic/test2.study2.MetaScore.assoc.gz",
  "lib/R/library/seqminer/test-triallelic/test2.study2.MetaScore.assoc.gz.tbi",
  "lib/R/library/seqminer/test-triallelic/test2.study3.MetaCov.assoc.gz",
  "lib/R/library/seqminer/test-triallelic/test2.study3.MetaCov.assoc.gz.tbi",
  "lib/R/library/seqminer/test-triallelic/test2.study3.MetaScore.assoc.gz",
  "lib/R/library/seqminer/test-triallelic/test2.study3.MetaScore.assoc.gz.tbi",
  "lib/R/library/seqminer/test-triallelic/tri.MetaCov.assoc.gz",
  "lib/R/library/seqminer/test-triallelic/tri.MetaCov.assoc.gz.tbi",
  "lib/R/library/seqminer/test-triallelic/tri.MetaScore.assoc.gz",
  "lib/R/library/seqminer/test-triallelic/tri.MetaScore.assoc.gz.tbi",
  "lib/R/library/seqminer/tests/correct.Rdata",
  "lib/R/library/seqminer/vcf/1000g.phase1.20110521.CFH.var.anno.vcf.gz",
  "lib/R/library/seqminer/vcf/1000g.phase1.20110521.CFH.var.anno.vcf.gz.tbi",
  "lib/R/library/seqminer/vcf/all.anno.filtered.extract.bcf.gz",
  "lib/R/library/seqminer/vcf/all.anno.filtered.extract.bcf.gz.bci",
  "lib/R/library/seqminer/vcf/all.anno.filtered.extract.vcf.gz",
  "lib/R/library/seqminer/vcf/all.anno.filtered.extract.vcf.gz.tbi",
  "lib/R/library/seqminer/vcf/refFlat_hg19_6col.txt.gz"
 ],
 "index": {
  "arch": "x86_64",
  "build": "r36h2d389ff_0",
  "build_number": 0,
  "depends": [
   "bzip2 >=1.0.8,<2.0a0",
   "libcxx >=4.0.1",
   "r-base >=3.6,<3.7.0a0",
   "zlib >=1.2.11,<1.3.0a0",
   "zstd >=1.4.0,<1.4.1.0a0"
  ],
  "license": "GPL",
  "license_family": "GPL",
  "name": "r-seqminer",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1569192970449,
  "version": "7.1"
 },
 "metadata_version": 1,
 "name": "r-seqminer",
 "raw_recipe": "{% set version = '7.1' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage: \n  name: r-seqminer\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  url:\n    - {{ cran_mirror }}/src/contrib/seqminer_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/seqminer/seqminer_{{ version }}.tar.gz\n  sha256: befa015f98096cc186fd3f9175935620e4adf78d73203950ba8e67c2e765cdcb\n  patches:\n    - patch\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 0\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{ compiler('c') }}              # [not win]\n    - {{ compiler('m2w64_c') }}        # [win]\n    - {{ compiler('cxx') }}            # [not win]\n    - {{ compiler('m2w64_cxx') }}      # [win]\n    - {{posix}}filesystem        # [win]\n    - {{posix}}sed               # [win]\n    - {{posix}}grep              # [win]\n    - {{posix}}autoconf\n    - {{posix}}automake          # [not win]\n    - {{posix}}automake-wrapper  # [win]\n    - {{posix}}pkg-config\n    - {{posix}}make\n    - {{posix}}coreutils         # [win]\n    - {{posix}}zip               # [win]\n  host:\n    - r-base\n    - zstd\n    - zlib\n    - bzip2\n  run:\n    - r-base\n    - {{native}}gcc-libs         # [win]\n    - zstd\n    - zlib\n    - bzip2\n\ntest:\n  commands:\n    - $R -e \"library('seqminer')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('seqminer')\\\"\"  # [win]\n\nabout:\n  home: http://seqminer.genomic.codes\n  license: GPL\n  license_file: LICENSE\n  summary: Integrate sequencing data (Variant call format, e.g. VCF or BCF) or meta-analysis\n    results in R. This package can help you (1) read VCF/BCF/BGEN files by chromosomal\n    ranges (e.g. 1:100-200); (2) read RareMETAL summary statistics files; (3) read tables\n    from a tabix-indexed files; (4) annotate VCF/BCF files; (5) create customized workflow\n    based on Makefile.\n  license_family: GPL\n\nextra:\n  recipe-maintainers:\n    - conda-forge/r\n\n# Package: seqminer\n# Type: Package\n# Title: Efficiently Read Sequence Data (VCF Format, BCF Format, METAL Format and BGEN Format) into R\n# Version: 7.1\n# Date: 2019-1-7\n# Authors@R: c(person(\"Xiaowei\", \"Zhan\", email = \"zhanxw@gmail.com\", role = c(\"aut\", \"cre\")), person(\"Dajiang\", \"Liu\", email = \"dajiang.liu@gmail.com\", role = \"aut\"), person(\"Attractive Chaos\", email = \"attractor@live.co.uk\", role = \"cph\", comment = \"We have used the following software and made minimal necessary changes: Tabix, Heng Li <lh3@live.co.uk> (MIT license). We removed standard IO related functions, e.g. printf, fprintf ; also changed its un-safe pointer arithmetics.\"),\t person(\"Broad Institute / Massachusetts Institute of Technology\", role = \"cph\"), person(\"Genome Research Ltd (GRL)\", role = \"cph\"), person(\"Facebook, Inc\", role = \"cph\"))\n# Maintainer: Xiaowei Zhan <zhanxw@gmail.com>\n# Description: Integrate sequencing data (Variant call format, e.g. VCF or BCF) or meta-analysis results in R. This package can help you (1) read VCF/BCF/BGEN files by chromosomal ranges (e.g. 1:100-200); (2) read RareMETAL summary statistics files; (3) read tables from a tabix-indexed files; (4) annotate VCF/BCF files; (5) create customized workflow based on Makefile.\n# Copyright: We have used the following software and made minimal necessary changes: tabix, Heng Li <lh3@live.co.uk> (MIT license), SQLite (Public Domain), Zstandard (MIT license). For tabix, we removed standard IO related functions, e.g. printf, fprintf ; also changed its un-safe pointer arithmetics. For zstandard, we removed compiler (clang, MSVC) specific preprocessing flags.\n# License: GPL | file LICENSE\n# URL: http://seqminer.genomic.codes\n# BugReports: https://github.com/zhanxw/seqminer/issues\n# Packaged: 2019-01-07 21:30:23 UTC; zhanxw\n# Repository: CRAN\n# Suggests: testthat, SKAT\n# SystemRequirements: C++11, zlib headers and libraries, GNU make, optionally also bzip2 and POSIX-compliant regex functions.\n# NeedsCompilation: yes\n# RoxygenNote: 6.1.1\n# Encoding: UTF-8\n# Author: Xiaowei Zhan [aut, cre], Dajiang Liu [aut], Attractive Chaos [cph] (We have used the following software and made minimal necessary changes: Tabix, Heng Li <lh3@live.co.uk> (MIT license). We removed standard IO related functions, e.g. printf, fprintf ; also changed its un-safe pointer arithmetics.), Broad Institute / Massachusetts Institute of Technology [cph], Genome Research Ltd (GRL) [cph], Facebook, Inc [cph]\n# Date/Publication: 2019-01-08 15:20:03 UTC\n",
 "rendered_recipe": {
  "about": {
   "home": "http://seqminer.genomic.codes",
   "license": "GPL",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Integrate sequencing data (Variant call format, e.g. VCF or BCF) or meta-analysis results in R. This package can help you (1) read VCF/BCF/BGEN files by chromosomal ranges (e.g. 1:100-200); (2) read RareMETAL summary statistics files; (3) read tables from a tabix-indexed files; (4) annotate VCF/BCF files; (5) create customized workflow based on Makefile."
  },
  "build": {
   "number": "0",
   "rpaths": [
    "lib/",
    "lib/R/lib/"
   ],
   "string": "r36h2d389ff_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "conda-forge/r"
   ]
  },
  "package": {
   "name": "r-seqminer",
   "version": "7.1"
  },
  "requirements": {
   "build": [
    "autoconf 2.69 pl526h1de35cc_9",
    "automake 1.16.1 pl526_1003",
    "cctools 895 h7512d6f_0",
    "clang 4.0.1 h662ec87_0",
    "clang_osx-64 4.0.1 h1ce6c1d_17",
    "clangxx 4.0.1 hc9b4283_0",
    "clangxx_osx-64 4.0.1 h22b1bf0_17",
    "compiler-rt 4.0.1 h5487866_0",
    "ld64 274.2 h7c2db76_0",
    "libcxx 4.0.1 h579ed51_0",
    "libcxxabi 4.0.1 hebd6815_0",
    "libiconv 1.15 h01d97ff_1005",
    "llvm 4.0.1 hc748206_0",
    "llvm-lto-tapi 4.0.1 h6701bc3_0",
    "m4 1.4.18 h1de35cc_1001",
    "make 4.2.1 h1de35cc_2004",
    "perl 5.26.2 haec8ef5_1006",
    "pkg-config 0.29.2 h112b980_1005"
   ],
   "host": [
    "_r-mutex 1.0.1 anacondar_1",
    "bwidget 1.9.11 0",
    "bzip2 1.0.8 h01d97ff_1",
    "ca-certificates 2019.9.11 hecc5488_0",
    "cairo 1.16.0 he1c11cd_1002",
    "cctools 895 1",
    "clang 4.0.1 1",
    "clang_osx-64 4.0.1 h1ce6c1d_17",
    "clangxx 4.0.1 1",
    "clangxx_osx-64 4.0.1 h22b1bf0_17",
    "compiler-rt 4.0.1 hcfea43d_1",
    "curl 7.65.3 h22ea746_0",
    "fontconfig 2.13.1 h6b1039f_1001",
    "freetype 2.10.0 h24853df_1",
    "fribidi 1.0.5 h01d97ff_1002",
    "gettext 0.19.8.1 h46ab8bc_1002",
    "gfortran_osx-64 4.8.5 h22b1bf0_8",
    "glib 2.58.3 h9d45998_1002",
    "graphite2 1.3.13 h2098e52_1000",
    "gsl 2.5 ha2d443c_1",
    "harfbuzz 2.4.0 hd8d2a14_3",
    "icu 64.2 h6de7cb9_1",
    "jpeg 9c h1de35cc_1001",
    "krb5 1.16.3 hcfa6398_1001",
    "ld64 274.2 1",
    "libblas 3.8.0 12_openblas",
    "libcblas 3.8.0 12_openblas",
    "libcurl 7.65.3 h16faf7d_0",
    "libcxx 4.0.1 hcfea43d_1",
    "libcxxabi 4.0.1 hcfea43d_1",
    "libedit 3.1.20170329 hcfe32e1_1001",
    "libffi 3.2.1 h6de7cb9_1006",
    "libgfortran 3.0.1 0",
    "libiconv 1.15 h01d97ff_1005",
    "liblapack 3.8.0 12_openblas",
    "libopenblas 0.3.7 hd44dcd8_1",
    "libpng 1.6.37 h2573ce8_0",
    "libssh2 1.8.2 hcdc9a53_2",
    "libtiff 4.0.10 hd08fb8f_1003",
    "libxml2 2.9.9 h12c6b28_5",
    "llvm 4.0.1 1",
    "llvm-lto-tapi 4.0.1 1",
    "llvm-openmp 8.0.1 h770b8ee_0",
    "lz4-c 1.8.3 h6de7cb9_1001",
    "make 4.2.1 h1de35cc_2004",
    "ncurses 6.1 h0a44026_1002",
    "openssl 1.1.1c h01d97ff_0",
    "pango 1.42.4 h6691c8e_1",
    "pcre 8.41 h0a44026_1003",
    "pixman 0.38.0 h01d97ff_1003",
    "r-base 3.6.1 h7df2c9e_4",
    "readline 8.0 hcfe32e1_0",
    "tk 8.6.9 h2573ce8_1003",
    "tktable 2.10 hfa822fa_2",
    "xz 5.2.4 h1de35cc_1001",
    "zlib 1.2.11 h01d97ff_1006",
    "zstd 1.4.0 ha9f0a20_0"
   ],
   "run": [
    "bzip2 >=1.0.8,<2.0a0",
    "bzip2 >=1.0.8,<2.0a0",
    "libcxx >=4.0.1",
    "r-base >=3.6,<3.7.0a0",
    "zlib >=1.2.11,<1.3.0a0",
    "zlib >=1.2.11,<1.3.0a0",
    "zstd >=1.4.0,<1.4.1.0a0",
    "zstd >=1.4.0,<1.4.1.0a0"
   ]
  },
  "source": {
   "patches": [
    "patch"
   ],
   "sha256": "befa015f98096cc186fd3f9175935620e4adf78d73203950ba8e67c2e765cdcb",
   "url": [
    "https://cran.r-project.org/src/contrib/Archive/seqminer/seqminer_7.1.tar.gz",
    "https://cran.r-project.org/src/contrib/seqminer_7.1.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "$R -e \"library('seqminer')\""
   ]
  }
 },
 "version": "7.1"
}