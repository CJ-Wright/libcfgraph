{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.15.1",
  "conda_private": false,
  "conda_version": "4.5.11",
  "description": "clcache.py is a little Python script which attempts to avoid unnecessary\nrecompilation by reusing previously cached object files if possible.\nIt is meant to be called instead of the original 'cl.exe' executable.\nThe script analyses the command line to decide whether source code is to be compiled.\nIf so, a cache will be queried for a previously stored object file.\n\nIf the script is called in an unsupported way (e.g. if the compiler is called for linking),\nthe script will simply relay the invocation to the real 'cl.exe' program.\n",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "edisongustavo",
    "tadeu",
    "nicoddemus"
   ]
  },
  "home": "https://github.com/frerich/clcache",
  "identifiers": [],
  "keywords": [],
  "license": "BSD 3-Clause",
  "license_file": "LICENSE",
  "root_pkgs": [
   "anaconda-client 1.7.1 py_0",
   "asn1crypto 0.24.0 py36_3",
   "beautifulsoup4 4.6.3 py36_0",
   "ca-certificates 2018.8.24 ha4d7672_0",
   "certifi 2018.8.24 py36_1001",
   "cffi 1.11.5 py36hfa6e2cd_1",
   "chardet 3.0.4 py36_3",
   "click 6.7 py_1",
   "clyent 1.2.2 py_1",
   "conda 4.5.11 py36_0",
   "conda-build 3.15.1 py36_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 2.0.6 py36_0",
   "console_shortcut 0.1.1 3",
   "cryptography 2.3.1 py36h74b6da3_0",
   "cryptography-vectors 2.3.1 py36_0",
   "decorator 4.3.0 py_0",
   "filelock 3.0.4 py_1",
   "glob2 0.6 py_0",
   "idna 2.7 py36_2",
   "ipython_genutils 0.2.0 py_1",
   "jinja2 2.10 py_1",
   "jsonschema 2.6.0 py36_2",
   "jupyter_core 4.4.0 py_0",
   "markupsafe 1.0 py36hfa6e2cd_1",
   "menuinst 1.4.14 py36_0",
   "nbformat 4.4.0 py_1",
   "openssl 1.0.2p hfa6e2cd_1000",
   "pip 18.0 py36_1",
   "pkginfo 1.4.2 py_1",
   "psutil 5.4.7 py36hfa6e2cd_1",
   "pycosat 0.6.3 py36hfa6e2cd_1",
   "pycparser 2.19 py_0",
   "pyopenssl 18.0.0 py36_0",
   "pysocks 1.6.8 py36_2",
   "python 3.6.6 he025d50_0",
   "python-dateutil 2.7.3 py_0",
   "pytz 2018.5 py_0",
   "pywin32 223 py36hfa6e2cd_0",
   "pyyaml 3.13 py36hfa6e2cd_1",
   "requests 2.19.1 py36_1",
   "ruamel_yaml 0.15.63 py36hfa6e2cd_0",
   "setuptools 40.4.0 py36_0",
   "six 1.11.0 py36_1",
   "tqdm 4.26.0 py_0",
   "traitlets 4.3.2 py36_0",
   "urllib3 1.23 py36_1",
   "vc 14 h0510ff6_3",
   "vs2008_express_vc_python_patch 1.0.0 0",
   "vs2015_runtime 14.0.25123 3",
   "wheel 0.31.1 py36_1",
   "wincertstore 0.2 py36_2",
   "win_inet_pton 1.0.1 py36_2",
   "yaml 0.1.7 vc14_0"
  ],
  "summary": "a compiler cache for Microsoft Visual Studio",
  "tags": []
 },
 "conda_build_config": {
  "c_compiler": "vs2015",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "vs2015",
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": "python",
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x.x",
    "min_pin": "x.x.x"
   }
  },
  "python": "3.6",
  "r_base": "3.4",
  "target_platform": "win-64",
  "vc": "14"
 },
 "files": [
  "Scripts/clcache-script.py",
  "Scripts/clcache.exe",
  "Scripts/clcache.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py36_1000",
  "build_number": 1000,
  "depends": [
   "python >=3.6,<3.7.0a0"
  ],
  "license": "BSD 3-Clause",
  "name": "clcache",
  "platform": "win",
  "subdir": "win-64",
  "timestamp": 1537667477281,
  "version": "4.1.0"
 },
 "metadata_version": 1,
 "name": "clcache",
 "raw_recipe": "{% set name = \"clcache\" %}\n{% set version = \"4.1.0\" %}\n{% set sha256 = \"b69097159103d7bfaad5526d844e91739ad53fa7d2998900c7060eab4162d03f\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: v{{ version }}.tar.gz\n  url: https://github.com/frerich/clcache/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1000\n  entry_points:\n    - clcache = clcache:main\n  skip: True  # [not win or py2k]\n\nrequirements:\n  build:\n    - python\n\n  run:\n    - python\n\ntest:\n  commands:\n    - clcache --help\n\nabout:\n  home: https://github.com/frerich/clcache\n  license: BSD 3-Clause\n  license_file: LICENSE\n  summary: 'a compiler cache for Microsoft Visual Studio'\n\n  description: |\n    clcache.py is a little Python script which attempts to avoid unnecessary\n    recompilation by reusing previously cached object files if possible.\n    It is meant to be called instead of the original 'cl.exe' executable.\n    The script analyses the command line to decide whether source code is to be compiled.\n    If so, a cache will be queried for a previously stored object file.\n\n    If the script is called in an unsupported way (e.g. if the compiler is called for linking),\n    the script will simply relay the invocation to the real 'cl.exe' program.\n\nextra:\n  recipe-maintainers:\n    - edisongustavo\n    - tadeu\n    - nicoddemus\n",
 "rendered_recipe": {
  "about": {
   "description": "clcache.py is a little Python script which attempts to avoid unnecessary\nrecompilation by reusing previously cached object files if possible.\nIt is meant to be called instead of the original 'cl.exe' executable.\nThe script analyses the command line to decide whether source code is to be compiled.\nIf so, a cache will be queried for a previously stored object file.\n\nIf the script is called in an unsupported way (e.g. if the compiler is called for linking),\nthe script will simply relay the invocation to the real 'cl.exe' program.\n",
   "home": "https://github.com/frerich/clcache",
   "license": "BSD 3-Clause",
   "license_file": "LICENSE",
   "summary": "a compiler cache for Microsoft Visual Studio"
  },
  "build": {
   "entry_points": [
    "clcache = clcache:main"
   ],
   "number": "1000",
   "string": "py36_1000"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "edisongustavo",
    "nicoddemus",
    "tadeu"
   ]
  },
  "package": {
   "name": "clcache",
   "version": "4.1.0"
  },
  "requirements": {
   "build": [
    "python 3.6.6 he025d50_0",
    "vc 14 0",
    "vs2015_runtime 14.0.25420 0"
   ],
   "run": [
    "python >=3.6,<3.7.0a0"
   ]
  },
  "source": {
   "fn": "v4.1.0.tar.gz",
   "sha256": "b69097159103d7bfaad5526d844e91739ad53fa7d2998900c7060eab4162d03f",
   "url": "https://github.com/frerich/clcache/archive/v4.1.0.tar.gz"
  },
  "test": {
   "commands": [
    "clcache --help"
   ]
  }
 },
 "version": "4.1.0"
}