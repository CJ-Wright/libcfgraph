{
 "about": {
  "channels": [
   "conda-forge",
   "defaults",
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.19.2",
  "conda_private": false,
  "conda_version": "4.8.4",
  "description": "genozip\n\n(also available on Conda and Docker Hub)\n\ngenozip is a compressor for genomic files - it compresses FASTQ, SAM/BAM/CRAM, VCF/BCF, FASTA, GVF and 23andMe files. If can even compress them if they are already compressed with .gz .bz2 .xz (for full list of supported file types see 'genozip --input --help').\n\nIt achieves x2 to x5 better compression ratios than gzip because it leverages some properties specific to genomic data to compress better. It is also a lot faster than gzip.\n\nThe compression is lossless - the decompressed file is 100% identical to the original file.\nNotes:\n1. Losslessness is relative to the underlying textual file - for example, when compressing a .bam or a .fq.gz file - the losslessness is relative to the underlying SAM or FASTQ file respectively\n2. The one exception is when using the --optimize option which is lossy (see --help for details)\n\nThe command line options are similar to gzip and samtools/bcftools, so if you are familiar with these, it works pretty much the same. To get started, try: genozip --help\n\nCommands:\ngenozip   - compress one or more files\ngenounzip - decompress one or more files\ngenols    - show metadata of one or more files or the entire directory\ngenocat   - view one or more files\n\nSome examples:\n\nCreating a reference file:\ngenozip --make-reference myfasta.fa\n\nCompressing a FASTQ, SAM/BAM or VCF file(s) with a reference:\ngenozip --reference myfasta.ref.genozip mysample1.fq mysample2.fq mysample3.fq\ngenozip --reference myfasta.ref.genozip mysample.bam\ngenozip --reference myfasta.ref.genozip mysamples.vcf.gz\ngenozip --reference myfasta.ref.genozip *    <--- compresses all files in the current directory\n\nNotes:\n1. genozip can compress with or without a reference - using a reference often achieves much better compression\n2. SAM/BAM - compression of aligned or unaligned SAM/BAM files is possible. Sorting makes no difference\n3. Long reads - compression of long reads (Pac Bio / Nanopore) achieves signficantly better results when compressing an aligned BAM vs an unaligned BAM or FASTQ\n4. Compression of BAM and CRAM (but not SAM) files requires samtools to be installed\n5. Use --REFERENCE instead of --reference to store the relevant parts of the reference file as part of the compressed file itself, which will then allow decompression with genounzip without need of the reference file.\n\nCompressing and uncompressing paired-end reads with --pair - better than compressing FASTQs individually\ngenozip --reference myfasta.ref.genozip --pair mysample-R1.fastq.gz mysample-R2.fastq.gz\ngenounzip --reference myfasta.ref.genozip --unbind mysample-R1+2.fastq.genozip\n\nUsing genozip in a pipline:\ngenocat mysample.sam.genozip | samtools - .....\nmy-sam-outputing-method | genozip - --input sam --output mysample.sam.genozip\n\nLookups:\ngenocat --regions ^Y,MT mysamples.vcf.genozip  <-- displays all chromosomes except Y and MT\ngenocat --regions -10000 mysample.sam.genozip  <-- displays positions up to 10000\ngenocat --samples SMPL1,SMPL2 mysamples.vcf.genozip  <-- displays 2 samples\ngenocat --grep August-10 myfasta.fa.genozip  <-- displays contigs/reads that have \"August-10\" in the header\nNotes:\n1. --regions works with VCF, SAM/BAM, FASTA ; --grep works with FASTQ, FASTA ; --samples works with VCF\n2. There is no need for a separate indexing step or index file\n3. Many more options (see --help for full list): --no-header ; --header-only ; --sequential ; --list-chroms ; --drop-genotypes ; --GT-only\n\nBinding mutiple files into a single genozip file & unbinding:\ngenozip *.fq.gz -o all-samples.fq.genozip <-- binds all .fq.gz files in the current directory\ngenounzip my-project.fq.genozip --unbind\n\nCompressing even better, with some minor modifications of the data (therefore not lossless, see --help for details):\ngenozip file.bam --optimize\n\nCompressing faster, sacrificing a bit of compression ratio:\ngenozip file.bam --fast\n\nEncrypting (256 bit AES):\ngenozip file.vcf --password abc\ngenounzip file.vcf.genozip --password abc\n\nCalculating the MD5 of the underlying textual file (also included in --test):\ngenozip file.vcf --md5\ngenounzip file.vcf.genozip --md5\n\nCompressing and then verifying that the compressed file decompresses correctly:\ngenozip file.vcf --test\n\nCiting\nDo you find genozip useful? Please support continued development by citing:\nLan, D., et al. (2020) Bioinformatics, 36, 4091\u20134092, https://doi.org/10.1093/bioinformatics/btaa290\n\nFeature requests and bug reports: bugs@genozip.com\n\ngenozip is free for non-commercial use. For a commercial license, please contact sales@genozip.com\n\nUsage is subject to terms and conditions. The non-commercial license can be viewed with genozip --license\n\nTHIS SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "dev_url": "https://github.com/divonlan/genozip",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "divonlan"
   ]
  },
  "home": "https://github.com/divonlan/genozip",
  "identifiers": [],
  "keywords": [],
  "license": "CUSTOM",
  "license_family": "OTHER",
  "license_file": [
   "LICENSE.non-commercial.txt",
   "LICENSE.commercial.txt"
  ],
  "root_pkgs": [
   "setuptools 49.2.0 py37hc8dfbb8_0",
   "bzip2 1.0.8 h0b31af3_2",
   "conda-env 2.6.0 1",
   "requests 2.24.0 pyh9f0ad1d_0",
   "conda-build 3.19.2 py37hc8dfbb8_4",
   "libarchive 3.3.3 hf12134e_1008",
   "idna 2.10 pyh9f0ad1d_0",
   "chardet 3.0.4 py37hc8dfbb8_1006",
   "jq 1.6 h1de35cc_1000",
   "libffi 3.2.1 h4a8c4bd_1007",
   "anaconda-client 1.7.2 py_0",
   "pip 20.2.2 py_0",
   "pycparser 2.20 pyh9f0ad1d_2",
   "soupsieve 2.0.1 py_1",
   "conda 4.8.4 py37hc8dfbb8_2",
   "libxml2 2.9.10 h2c6e4a5_2",
   "glob2 0.7 py_0",
   "libcurl 7.71.1 h9bf37e3_5",
   "shyaml 0.6.1 py_0",
   "ripgrep 12.1.1 h0b31af3_0",
   "py-lief 0.10.1 py37hd03d408_0",
   "yaml 0.2.5 h0b31af3_0",
   "libedit 3.1.20191231 h0678c8f_2",
   "jsonschema 3.2.0 py37hc8dfbb8_1",
   "decorator 4.4.2 py_0",
   "libiconv 1.16 haf1e3a3_0",
   "pysocks 1.7.1 py37hc8dfbb8_1",
   "urllib3 1.25.10 py_0",
   "expat 2.2.9 hb1e8313_2",
   "beautifulsoup4 4.9.1 py_1",
   "lz4-c 1.9.2 hb1e8313_3",
   "importlib_metadata 1.7.0 0",
   "brotlipy 0.7.0 py37h9bfed18_1000",
   "curl 7.71.1 hcb81553_5",
   "openssl 1.1.1g haf1e3a3_1",
   "importlib-metadata 1.7.0 py37hc8dfbb8_0",
   "tqdm 4.48.0 pyh9f0ad1d_0",
   "psutil 5.7.2 py37h60d8a13_0",
   "c-ares 1.16.1 haf1e3a3_0",
   "sqlite 3.32.3 h93121df_1",
   "click 7.1.2 pyh9f0ad1d_0",
   "zstd 1.4.5 h289c70a_2",
   "tk 8.6.10 hbbe82c9_0",
   "nbformat 5.0.7 py_0",
   "conda-forge-ci-setup 3.2.1 py37hc8dfbb8_0",
   "perl 5.26.2 haec8ef5_1006",
   "libssh2 1.9.0 h8a08a2b_5",
   "krb5 1.17.1 h75d18d8_2",
   "markupsafe 1.1.1 py37h9bfed18_1",
   "readline 8.0 h0678c8f_2",
   "pyopenssl 19.1.0 py_1",
   "pyrsistent 0.16.0 py37h9bfed18_0",
   "icu 67.1 hb1e8313_0",
   "zlib 1.2.11 h0b31af3_1006",
   "jupyter_core 4.6.3 py37hc8dfbb8_1",
   "pytz 2020.1 pyh9f0ad1d_0",
   "attrs 19.3.0 py_0",
   "pycosat 0.6.3 py37h9bfed18_1004",
   "cffi 1.14.1 py37hf5b7abd_0",
   "python_abi 3.7 1_cp37m",
   "liblief 0.10.1 hb1e8313_0",
   "certifi 2020.6.20 py37hc8dfbb8_0",
   "pyyaml 5.3.1 py37h9bfed18_0",
   "wheel 0.34.2 py_1",
   "jinja2 2.11.2 pyh9f0ad1d_0",
   "ncurses 6.2 hb1e8313_1",
   "libev 4.33 haf1e3a3_0",
   "clyent 1.2.2 py_1",
   "pcre 8.44 h4a8c4bd_0",
   "pkginfo 1.5.0.1 py_0",
   "xz 5.2.5 h0b31af3_1",
   "ruamel_yaml 0.15.80 py37h9bfed18_1001",
   "zipp 3.1.0 py_0",
   "gettext 0.19.8.1 h46ab8bc_1002",
   "libnghttp2 1.41.0 h8a08a2b_1",
   "ipython_genutils 0.2.0 py_1",
   "git 2.28.0 pl526hde3ca24_1",
   "ca-certificates 2020.6.20 hecda079_0",
   "lzo 2.10 haf1e3a3_1000",
   "python 3.7.8 ha0cf8a8_0_cpython",
   "oniguruma 6.9.3 h01d97ff_0",
   "libcxx 10.0.1 h5f48129_0",
   "python-libarchive-c 2.9 py37_0",
   "python-dateutil 2.8.1 py_0",
   "six 1.15.0 pyh9f0ad1d_0",
   "traitlets 4.3.3 py37hc8dfbb8_1",
   "conda-package-handling 1.6.0 py37h9bfed18_2",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "cryptography 3.0 py37h94e4008_0"
  ],
  "summary": "Compressor for genomic files (VCF/BCF, SAM/BAM, fastq, fasta, GVF, 23andMe), up to 5x better than gzip and faster too",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_11.6.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.9",
  "bzip2": "1",
  "c_compiler": "clang",
  "c_compiler_version": "10",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "extend_keys": [
   "ignore_version",
   "extend_keys",
   "ignore_build_only_deps",
   "pin_run_as_build"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "macos_min_version": "10.9",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "bzip2": {
    "max_pin": "x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7",
  "r_base": "3.5",
  "target_platform": "osx-64"
 },
 "files": [
  "bin/genocat",
  "bin/genols",
  "bin/genounzip",
  "bin/genozip"
 ],
 "index": {
  "arch": "x86_64",
  "build": "hcb20ba8_0",
  "build_number": 0,
  "depends": [
   "bzip2 >=1.0.8,<2.0a0"
  ],
  "license": "CUSTOM",
  "license_family": "OTHER",
  "name": "genozip",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1597925666864,
  "version": "6.0.9"
 },
 "metadata_version": 1,
 "name": "genozip",
 "raw_recipe": "{% set version = \"6.0.9\" %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: genozip\n  version: {{ version }}\n\nsource:\n  url: https://github.com/divonlan/genozip/archive/genozip-{{ version }}.tar.gz\n  sha256: 08902281ceaf39ebb09ba58f86eb6b6003b045840800915eb1f5d52b861c86dd\n \nbuild:\n  skip: True  # [win]\n  number: 0\n\nrequirements:\n  build:    \n    - {{ compiler('c') }}        # [not win]\n    - {{ compiler('m2w64_c') }}  # [win]\n    - {{posix}}make\n    - {{posix}}sed               # [win]\n    - {{posix}}coreutils         # [win]\n    - bzip2\n  host:\n    - {{native}}gcc-libs         # [win]\n    - bzip2\n  run:\n    - {{native}}gcc-libs         # [win]\n    - bzip2\n\ntest:\n\n  commands:\n    {% set genozip_executables = [\n      \"genozip\",\n      \"genounzip\",\n      \"genocat\",\n      \"genols\"\n    ] %}\n    - genozip --help\n\nabout:\n  home: https://github.com/divonlan/genozip\n  dev_url: https://github.com/divonlan/genozip\n  license: CUSTOM\n  license_family: OTHER\n  license_file: \n    - LICENSE.non-commercial.txt\n    - LICENSE.commercial.txt\n  summary: Compressor for genomic files (VCF/BCF, SAM/BAM, fastq, fasta, GVF, 23andMe), up to 5x better than gzip and faster too\n  description: |\n    genozip\n    \n    (also available on Conda and Docker Hub)\n    \n    genozip is a compressor for genomic files - it compresses FASTQ, SAM/BAM/CRAM, VCF/BCF, FASTA, GVF and 23andMe files. If can even compress them if they are already compressed with .gz .bz2 .xz (for full list of supported file types see 'genozip --input --help').\n    \n    It achieves x2 to x5 better compression ratios than gzip because it leverages some properties specific to genomic data to compress better. It is also a lot faster than gzip.\n    \n    The compression is lossless - the decompressed file is 100% identical to the original file.\n    Notes: \n    1. Losslessness is relative to the underlying textual file - for example, when compressing a .bam or a .fq.gz file - the losslessness is relative to the underlying SAM or FASTQ file respectively\n    2. The one exception is when using the --optimize option which is lossy (see --help for details)\n    \n    The command line options are similar to gzip and samtools/bcftools, so if you are familiar with these, it works pretty much the same. To get started, try: genozip --help\n    \n    Commands: \n    genozip   - compress one or more files \n    genounzip - decompress one or more files \n    genols    - show metadata of one or more files or the entire directory \n    genocat   - view one or more files \n    \n    Some examples:\n    \n    Creating a reference file:\n    genozip --make-reference myfasta.fa\n    \n    Compressing a FASTQ, SAM/BAM or VCF file(s) with a reference:\n    genozip --reference myfasta.ref.genozip mysample1.fq mysample2.fq mysample3.fq\n    genozip --reference myfasta.ref.genozip mysample.bam\n    genozip --reference myfasta.ref.genozip mysamples.vcf.gz\n    genozip --reference myfasta.ref.genozip *    <--- compresses all files in the current directory\n    \n    Notes:\n    1. genozip can compress with or without a reference - using a reference often achieves much better compression\n    2. SAM/BAM - compression of aligned or unaligned SAM/BAM files is possible. Sorting makes no difference\n    3. Long reads - compression of long reads (Pac Bio / Nanopore) achieves signficantly better results when compressing an aligned BAM vs an unaligned BAM or FASTQ\n    4. Compression of BAM and CRAM (but not SAM) files requires samtools to be installed\n    5. Use --REFERENCE instead of --reference to store the relevant parts of the reference file as part of the compressed file itself, which will then allow decompression with genounzip without need of the reference file.\n    \n    Compressing and uncompressing paired-end reads with --pair - better than compressing FASTQs individually\n    genozip --reference myfasta.ref.genozip --pair mysample-R1.fastq.gz mysample-R2.fastq.gz\n    genounzip --reference myfasta.ref.genozip --unbind mysample-R1+2.fastq.genozip\n    \n    Using genozip in a pipline:\n    genocat mysample.sam.genozip | samtools - .....\n    my-sam-outputing-method | genozip - --input sam --output mysample.sam.genozip\n    \n    Lookups:\n    genocat --regions ^Y,MT mysamples.vcf.genozip  <-- displays all chromosomes except Y and MT\n    genocat --regions -10000 mysample.sam.genozip  <-- displays positions up to 10000\n    genocat --samples SMPL1,SMPL2 mysamples.vcf.genozip  <-- displays 2 samples\n    genocat --grep August-10 myfasta.fa.genozip  <-- displays contigs/reads that have \"August-10\" in the header\n    Notes:\n    1. --regions works with VCF, SAM/BAM, FASTA ; --grep works with FASTQ, FASTA ; --samples works with VCF\n    2. There is no need for a separate indexing step or index file\n    3. Many more options (see --help for full list): --no-header ; --header-only ; --sequential ; --list-chroms ; --drop-genotypes ; --GT-only\n    \n    Binding mutiple files into a single genozip file & unbinding:\n    genozip *.fq.gz -o all-samples.fq.genozip <-- binds all .fq.gz files in the current directory\n    genounzip my-project.fq.genozip --unbind \n    \n    Compressing even better, with some minor modifications of the data (therefore not lossless, see --help for details):\n    genozip file.bam --optimize \n    \n    Compressing faster, sacrificing a bit of compression ratio:\n    genozip file.bam --fast \n    \n    Encrypting (256 bit AES):\n    genozip file.vcf --password abc \n    genounzip file.vcf.genozip --password abc \n    \n    Calculating the MD5 of the underlying textual file (also included in --test):\n    genozip file.vcf --md5 \n    genounzip file.vcf.genozip --md5 \n    \n    Compressing and then verifying that the compressed file decompresses correctly:\n    genozip file.vcf --test \n    \n    Citing\n    Do you find genozip useful? Please support continued development by citing:\n    Lan, D., et al. (2020) Bioinformatics, 36, 4091\u20134092, https://doi.org/10.1093/bioinformatics/btaa290\n    \n    Feature requests and bug reports: bugs@genozip.com \n    \n    genozip is free for non-commercial use. For a commercial license, please contact sales@genozip.com \n    \n    Usage is subject to terms and conditions. The non-commercial license can be viewed with genozip --license\n    \n    THIS SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nextra:\n  recipe-maintainers:\n    - divonlan\n",
 "rendered_recipe": {
  "about": {
   "description": "genozip\n\n(also available on Conda and Docker Hub)\n\ngenozip is a compressor for genomic files - it compresses FASTQ, SAM/BAM/CRAM, VCF/BCF, FASTA, GVF and 23andMe files. If can even compress them if they are already compressed with .gz .bz2 .xz (for full list of supported file types see 'genozip --input --help').\n\nIt achieves x2 to x5 better compression ratios than gzip because it leverages some properties specific to genomic data to compress better. It is also a lot faster than gzip.\n\nThe compression is lossless - the decompressed file is 100% identical to the original file.\nNotes:\n1. Losslessness is relative to the underlying textual file - for example, when compressing a .bam or a .fq.gz file - the losslessness is relative to the underlying SAM or FASTQ file respectively\n2. The one exception is when using the --optimize option which is lossy (see --help for details)\n\nThe command line options are similar to gzip and samtools/bcftools, so if you are familiar with these, it works pretty much the same. To get started, try: genozip --help\n\nCommands:\ngenozip   - compress one or more files\ngenounzip - decompress one or more files\ngenols    - show metadata of one or more files or the entire directory\ngenocat   - view one or more files\n\nSome examples:\n\nCreating a reference file:\ngenozip --make-reference myfasta.fa\n\nCompressing a FASTQ, SAM/BAM or VCF file(s) with a reference:\ngenozip --reference myfasta.ref.genozip mysample1.fq mysample2.fq mysample3.fq\ngenozip --reference myfasta.ref.genozip mysample.bam\ngenozip --reference myfasta.ref.genozip mysamples.vcf.gz\ngenozip --reference myfasta.ref.genozip *    <--- compresses all files in the current directory\n\nNotes:\n1. genozip can compress with or without a reference - using a reference often achieves much better compression\n2. SAM/BAM - compression of aligned or unaligned SAM/BAM files is possible. Sorting makes no difference\n3. Long reads - compression of long reads (Pac Bio / Nanopore) achieves signficantly better results when compressing an aligned BAM vs an unaligned BAM or FASTQ\n4. Compression of BAM and CRAM (but not SAM) files requires samtools to be installed\n5. Use --REFERENCE instead of --reference to store the relevant parts of the reference file as part of the compressed file itself, which will then allow decompression with genounzip without need of the reference file.\n\nCompressing and uncompressing paired-end reads with --pair - better than compressing FASTQs individually\ngenozip --reference myfasta.ref.genozip --pair mysample-R1.fastq.gz mysample-R2.fastq.gz\ngenounzip --reference myfasta.ref.genozip --unbind mysample-R1+2.fastq.genozip\n\nUsing genozip in a pipline:\ngenocat mysample.sam.genozip | samtools - .....\nmy-sam-outputing-method | genozip - --input sam --output mysample.sam.genozip\n\nLookups:\ngenocat --regions ^Y,MT mysamples.vcf.genozip  <-- displays all chromosomes except Y and MT\ngenocat --regions -10000 mysample.sam.genozip  <-- displays positions up to 10000\ngenocat --samples SMPL1,SMPL2 mysamples.vcf.genozip  <-- displays 2 samples\ngenocat --grep August-10 myfasta.fa.genozip  <-- displays contigs/reads that have \"August-10\" in the header\nNotes:\n1. --regions works with VCF, SAM/BAM, FASTA ; --grep works with FASTQ, FASTA ; --samples works with VCF\n2. There is no need for a separate indexing step or index file\n3. Many more options (see --help for full list): --no-header ; --header-only ; --sequential ; --list-chroms ; --drop-genotypes ; --GT-only\n\nBinding mutiple files into a single genozip file & unbinding:\ngenozip *.fq.gz -o all-samples.fq.genozip <-- binds all .fq.gz files in the current directory\ngenounzip my-project.fq.genozip --unbind\n\nCompressing even better, with some minor modifications of the data (therefore not lossless, see --help for details):\ngenozip file.bam --optimize\n\nCompressing faster, sacrificing a bit of compression ratio:\ngenozip file.bam --fast\n\nEncrypting (256 bit AES):\ngenozip file.vcf --password abc\ngenounzip file.vcf.genozip --password abc\n\nCalculating the MD5 of the underlying textual file (also included in --test):\ngenozip file.vcf --md5\ngenounzip file.vcf.genozip --md5\n\nCompressing and then verifying that the compressed file decompresses correctly:\ngenozip file.vcf --test\n\nCiting\nDo you find genozip useful? Please support continued development by citing:\nLan, D., et al. (2020) Bioinformatics, 36, 4091\u20134092, https://doi.org/10.1093/bioinformatics/btaa290\n\nFeature requests and bug reports: bugs@genozip.com\n\ngenozip is free for non-commercial use. For a commercial license, please contact sales@genozip.com\n\nUsage is subject to terms and conditions. The non-commercial license can be viewed with genozip --license\n\nTHIS SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
   "dev_url": "https://github.com/divonlan/genozip",
   "home": "https://github.com/divonlan/genozip",
   "license": "CUSTOM",
   "license_family": "OTHER",
   "license_file": [
    "LICENSE.commercial.txt",
    "LICENSE.non-commercial.txt"
   ],
   "summary": "Compressor for genomic files (VCF/BCF, SAM/BAM, fastq, fasta, GVF, 23andMe), up to 5x better than gzip and faster too"
  },
  "build": {
   "number": "0",
   "string": "hcb20ba8_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "divonlan"
   ]
  },
  "package": {
   "name": "genozip",
   "version": "6.0.9"
  },
  "requirements": {
   "build": [
    "bzip2 1.0.8 haf1e3a3_2",
    "cctools_osx-64 949.0.1 h5ba7a2e_7",
    "clang 10.0.1 default_hf57f61e_1",
    "clang_osx-64 10.0.1 h05bbb7f_8",
    "clangxx 10.0.1 default_hf57f61e_1",
    "compiler-rt 10.0.1 he6db49b_0",
    "compiler-rt_osx-64 10.0.1 h033240e_0",
    "ld64_osx-64 530 h3c32e8a_7",
    "libclang-cpp10 10.0.1 default_hf57f61e_1",
    "libcxx 10.0.1 h5f48129_0",
    "libllvm10 10.0.1 h009f743_1",
    "llvm-tools 10.0.1 h1341992_1",
    "make 4.3 h0b31af3_0",
    "tapi 1000.10.8 h879752b_4",
    "zlib 1.2.11 1007"
   ],
   "host": [
    "bzip2 1.0.8 haf1e3a3_2"
   ],
   "run": [
    "bzip2 >=1.0.8,<2.0a0",
    "bzip2 >=1.0.8,<2.0a0"
   ]
  },
  "source": {
   "sha256": "08902281ceaf39ebb09ba58f86eb6b6003b045840800915eb1f5d52b861c86dd",
   "url": "https://github.com/divonlan/genozip/archive/genozip-6.0.9.tar.gz"
  },
  "test": {
   "commands": [
    "genozip --help"
   ]
  }
 },
 "version": "6.0.9"
}