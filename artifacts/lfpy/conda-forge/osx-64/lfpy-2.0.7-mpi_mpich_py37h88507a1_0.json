{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.19.1",
  "conda_private": false,
  "conda_version": "4.8.3",
  "description": "LFPy provides a set of easy-to-use Python classes for setting up your\nmodel, running your simulations and calculating the extracellular\npotentials arising from activity in your model neuron. If you have a model\nworking in NEURON or NeuroML2 already, it is likely that it can be adapted\nto work with LFPy.\n",
  "dev_url": "https://github.com/LFPy/LFPy",
  "doc_url": "https://lfpy.readthedocs.io",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "espenhgn",
    "minrk"
   ]
  },
  "home": "https://github.com/LFPy/LFPy",
  "identifiers": [],
  "keywords": [],
  "license": "GPL-3.0-only",
  "license_family": "GPL",
  "license_file": "LICENSE",
  "root_pkgs": [
   "bzip2 1.0.8 h0b31af3_2",
   "libcxx 9.0.1 1",
   "conda-env 2.6.0 1",
   "openssl 1.1.1e h0b31af3_0",
   "icu 64.2 h6de7cb9_1",
   "certifi 2019.11.28 py37hc8dfbb8_1",
   "chardet 3.0.4 py37hc8dfbb8_1006",
   "jq 1.6 h1de35cc_1000",
   "libffi 3.2.1 h4a8c4bd_1007",
   "ripgrep 12.0.1 h0b31af3_0",
   "libxml2 2.9.10 h53d96d6_0",
   "anaconda-client 1.7.2 py_0",
   "py-lief 0.9.0 py37h0ceac7d_1",
   "readline 8.0 hcfe32e1_0",
   "click 7.1.1 pyh8c360ce_0",
   "glob2 0.7 py_0",
   "tqdm 4.44.1 pyh9f0ad1d_0",
   "shyaml 0.6.1 py_0",
   "beautifulsoup4 4.8.2 py37hc8dfbb8_1",
   "yaml 0.2.2 h0b31af3_1",
   "jsonschema 3.2.0 py37hc8dfbb8_1",
   "decorator 4.4.2 py_0",
   "nbformat 5.0.4 py_0",
   "pysocks 1.7.1 py37hc8dfbb8_1",
   "cffi 1.14.0 py37h356ff06_0",
   "importlib_metadata 1.6.0 0",
   "libiconv 1.15 h0b31af3_1006",
   "conda-forge-ci-setup 2.6.0 py37hc8dfbb8_0",
   "python.app 1.3 py37h9bfed18_1",
   "libarchive 3.3.3 h8912c15_1007",
   "filelock 3.0.10 py_0",
   "pycparser 2.20 py_0",
   "tk 8.6.10 hbbe82c9_0",
   "conda-build 3.19.1 py37hc8dfbb8_0",
   "markupsafe 1.1.1 py37h9bfed18_1",
   "pyopenssl 19.1.0 py_1",
   "pyrsistent 0.16.0 py37h9bfed18_0",
   "zlib 1.2.11 h0b31af3_1006",
   "jupyter_core 4.6.3 py37hc8dfbb8_1",
   "attrs 19.3.0 py_0",
   "zstd 1.4.4 hed8d7c8_2",
   "cryptography 2.8 py37he655712_2",
   "pycosat 0.6.3 py37h9bfed18_1004",
   "lz4-c 1.8.3 h6de7cb9_1001",
   "jinja2 2.11.1 py_0",
   "python_abi 3.7 1_cp37m",
   "psutil 5.7.0 py37h9bfed18_1",
   "setuptools 46.1.3 py37hc8dfbb8_0",
   "idna 2.9 py_1",
   "soupsieve 1.9.4 py37hc8dfbb8_1",
   "pyyaml 5.3.1 py37h9bfed18_0",
   "xz 5.2.4 h0b31af3_1002",
   "liblief 0.9.0 h3e78482_1",
   "clyent 1.2.2 py_1",
   "pkginfo 1.5.0.1 py_0",
   "ruamel_yaml 0.15.80 py37h9bfed18_1001",
   "pytz 2019.3 py_0",
   "requests 2.23.0 pyh8c360ce_2",
   "zipp 3.1.0 py_0",
   "ncurses 6.1 h0a44026_1002",
   "sqlite 3.30.1 h93121df_0",
   "urllib3 1.25.7 py37hc8dfbb8_1",
   "conda 4.8.3 py37hc8dfbb8_1",
   "ipython_genutils 0.2.0 py_1",
   "lzo 2.10 h1de35cc_1000",
   "ca-certificates 2019.11.28 hecc5488_0",
   "oniguruma 6.9.3 h01d97ff_0",
   "six 1.14.0 py_1",
   "python-libarchive-c 2.9 py37_0",
   "python-dateutil 2.8.1 py_0",
   "importlib-metadata 1.6.0 py37hc8dfbb8_0",
   "traitlets 4.3.3 py37hc8dfbb8_1",
   "conda-package-handling 1.6.0 py37h9bfed18_2",
   "python 3.7.6 h90870a6_5_cpython"
  ],
  "summary": "LFPy is a Python-module for calculation of extracellular potentials from multicompartment neuron models",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_11.3.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.9",
  "c_compiler": "clang",
  "c_compiler_version": "9",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "extend_keys": [
   "pin_run_as_build",
   "extend_keys",
   "ignore_build_only_deps",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "macos_min_version": "10.9",
  "mpi": "mpich",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7.* *_cpython",
  "r_base": "3.5",
  "target_platform": "osx-64"
 },
 "files": [
  "lib/python3.7/site-packages/LFPy-2.0.7.dist-info/INSTALLER",
  "lib/python3.7/site-packages/LFPy-2.0.7.dist-info/LICENSE",
  "lib/python3.7/site-packages/LFPy-2.0.7.dist-info/METADATA",
  "lib/python3.7/site-packages/LFPy-2.0.7.dist-info/RECORD",
  "lib/python3.7/site-packages/LFPy-2.0.7.dist-info/WHEEL",
  "lib/python3.7/site-packages/LFPy/__init__.py",
  "lib/python3.7/site-packages/LFPy/alias_method.cpython-37m-darwin.so",
  "lib/python3.7/site-packages/LFPy/alias_method.py",
  "lib/python3.7/site-packages/LFPy/alias_method.pyx",
  "lib/python3.7/site-packages/LFPy/cell.py",
  "lib/python3.7/site-packages/LFPy/eegmegcalc.py",
  "lib/python3.7/site-packages/LFPy/inputgenerators.py",
  "lib/python3.7/site-packages/LFPy/lfpcalc.py",
  "lib/python3.7/site-packages/LFPy/network.py",
  "lib/python3.7/site-packages/LFPy/pointprocess.py",
  "lib/python3.7/site-packages/LFPy/recextelectrode.py",
  "lib/python3.7/site-packages/LFPy/run_simulation.cpython-37m-darwin.so",
  "lib/python3.7/site-packages/LFPy/run_simulation.py",
  "lib/python3.7/site-packages/LFPy/run_simulation.pyx",
  "lib/python3.7/site-packages/LFPy/templatecell.py",
  "lib/python3.7/site-packages/LFPy/test/__init__.py",
  "lib/python3.7/site-packages/LFPy/test/ball_and_stick_template.hoc",
  "lib/python3.7/site-packages/LFPy/test/ball_and_sticks.hoc",
  "lib/python3.7/site-packages/LFPy/test/ball_and_sticks_w_lists.hoc",
  "lib/python3.7/site-packages/LFPy/test/common.py",
  "lib/python3.7/site-packages/LFPy/test/expsyni.mod",
  "lib/python3.7/site-packages/LFPy/test/fem_mix_dip.npz",
  "lib/python3.7/site-packages/LFPy/test/sinsyn.mod",
  "lib/python3.7/site-packages/LFPy/test/stick.hoc",
  "lib/python3.7/site-packages/LFPy/test/stick_template.hoc",
  "lib/python3.7/site-packages/LFPy/test/sticks_not_connected_head_to_toe.hoc",
  "lib/python3.7/site-packages/LFPy/test/test_alias_method.py",
  "lib/python3.7/site-packages/LFPy/test/test_cell.py",
  "lib/python3.7/site-packages/LFPy/test/test_eegmegcalc.py",
  "lib/python3.7/site-packages/LFPy/test/test_inputgenerators.py",
  "lib/python3.7/site-packages/LFPy/test/test_lfpcalc.py",
  "lib/python3.7/site-packages/LFPy/test/test_misc.py",
  "lib/python3.7/site-packages/LFPy/test/test_network.py",
  "lib/python3.7/site-packages/LFPy/test/test_networkcell.py",
  "lib/python3.7/site-packages/LFPy/test/test_pointprocess.py",
  "lib/python3.7/site-packages/LFPy/test/test_recextelectrode.py",
  "lib/python3.7/site-packages/LFPy/test/test_templatecell.py",
  "lib/python3.7/site-packages/LFPy/test/test_tools.py",
  "lib/python3.7/site-packages/LFPy/test/x86_64/.libs/expsyni.o",
  "lib/python3.7/site-packages/LFPy/test/x86_64/.libs/libnrnmech.0.so",
  "lib/python3.7/site-packages/LFPy/test/x86_64/.libs/libnrnmech.lai",
  "lib/python3.7/site-packages/LFPy/test/x86_64/.libs/libnrnmech.so",
  "lib/python3.7/site-packages/LFPy/test/x86_64/.libs/mod_func.o",
  "lib/python3.7/site-packages/LFPy/test/x86_64/.libs/sinsyn.o",
  "lib/python3.7/site-packages/LFPy/test/x86_64/expsyni.c",
  "lib/python3.7/site-packages/LFPy/test/x86_64/expsyni.lo",
  "lib/python3.7/site-packages/LFPy/test/x86_64/expsyni.mod",
  "lib/python3.7/site-packages/LFPy/test/x86_64/mod_func.c",
  "lib/python3.7/site-packages/LFPy/test/x86_64/mod_func.lo",
  "lib/python3.7/site-packages/LFPy/test/x86_64/sinsyn.c",
  "lib/python3.7/site-packages/LFPy/test/x86_64/sinsyn.lo",
  "lib/python3.7/site-packages/LFPy/test/x86_64/sinsyn.mod",
  "lib/python3.7/site-packages/LFPy/test/x86_64/special",
  "lib/python3.7/site-packages/LFPy/tools.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "mpi_mpich_py37h88507a1_0",
  "build_number": 0,
  "depends": [
   "cython >=0.20",
   "h5py >=2.5",
   "mpi4py >=1.2",
   "mpich >=3.3.2,<3.4.0a0",
   "neuron >=7.6.7 mpi_mpich_*",
   "numpy >=1.18.1,<2.0a0",
   "python >=3.7,<3.8.0a0",
   "python_abi 3.7.* *_cp37m",
   "scipy >=0.14",
   "setuptools"
  ],
  "license": "GPL-3.0-only",
  "license_family": "GPL",
  "name": "lfpy",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1585569522743,
  "version": "2.0.7"
 },
 "metadata_version": 1,
 "name": "lfpy",
 "raw_recipe": "{% set name = \"LFPy\" %}\n{% set version = \"2.0.7\" %}\n{% set build = 0 %}\n\npackage:\n  name: {{ name | lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/l/lfpy/{{ name }}-{{ version }}.tar.gz\n  sha256: 6d09a34740dc24237d6fc93d145d90914fd422f83da37503093cc25382d9f006\n\nbuild:\n  number: {{ build }}\n  {% set mpi_prefix = \"mpi_\" + mpi %} # use mpi_*` neuron variant\n  string: {{ mpi_prefix }}_py{{ py }}h{{ PKG_HASH }}_{{ build }}\n  script: {{PYTHON}} -m pip install . --no-deps -vv\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n    - cython >=0.20\n    - numpy >=1.8\n    - neuron\n    - {{ mpi }}\n  run:\n    - python\n    - setuptools\n    - cython >=0.20\n    - {{ pin_compatible('numpy') }}\n    - scipy >=0.14\n    - h5py >=2.5\n    - mpi4py >=1.2\n    - {{ mpi }}\n    - neuron >=7.6.7 {{ mpi_prefix }}_*\n\ntest:\n  requires:\n    # test with mpich instead of openmpi\n    # mpi4py with openmpi doesn't import on CI\n    # without extra environment variables set\n    # - mpich\n    - pytest\n  imports:\n    - LFPy\n  commands:\n    - py.test -vsx --pyargs LFPy\n\nabout:\n  home: https://github.com/LFPy/LFPy\n  license: GPL-3.0-only\n  license_family: GPL\n  license_file: LICENSE\n  summary: LFPy is a Python-module for calculation of extracellular potentials from multicompartment neuron models\n\n  description: |\n    LFPy provides a set of easy-to-use Python classes for setting up your\n    model, running your simulations and calculating the extracellular\n    potentials arising from activity in your model neuron. If you have a model\n    working in NEURON or NeuroML2 already, it is likely that it can be adapted\n    to work with LFPy.\n\n  doc_url: https://lfpy.readthedocs.io\n  dev_url: https://github.com/LFPy/LFPy\n\nextra:\n  recipe-maintainers:\n    - espenhgn\n    - minrk\n",
 "rendered_recipe": {
  "about": {
   "description": "LFPy provides a set of easy-to-use Python classes for setting up your\nmodel, running your simulations and calculating the extracellular\npotentials arising from activity in your model neuron. If you have a model\nworking in NEURON or NeuroML2 already, it is likely that it can be adapted\nto work with LFPy.\n",
   "dev_url": "https://github.com/LFPy/LFPy",
   "doc_url": "https://lfpy.readthedocs.io",
   "home": "https://github.com/LFPy/LFPy",
   "license": "GPL-3.0-only",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "LFPy is a Python-module for calculation of extracellular potentials from multicompartment neuron models"
  },
  "build": {
   "number": "0",
   "script": "/usr/local/miniconda/conda-bld/lfpy_1585569276990/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehol/bin/python -m pip install . --no-deps -vv",
   "string": "mpi_mpich_py37h88507a1_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "espenhgn",
    "minrk"
   ]
  },
  "package": {
   "name": "lfpy",
   "version": "2.0.7"
  },
  "requirements": {
   "build": [
    "cctools 927.0.2 h5ba7a2e_4",
    "clang 9.0.1 default_hf57f61e_0",
    "clang_osx-64 9.0.1 h05bbb7f_0",
    "clangxx 9.0.1 default_hf57f61e_0",
    "compiler-rt 9.0.1 h6a512c6_3",
    "compiler-rt_osx-64 9.0.1 h99342c6_3",
    "ld64 450.3 h3c32e8a_4",
    "libcxx 9.0.1 1",
    "libllvm9 9.0.1 ha1b3eb9_0",
    "tapi 1000.10.8 ha1b3eb9_4"
   ],
   "host": [
    "ca-certificates 2019.11.28 hecc5488_0",
    "certifi 2019.11.28 py37hc8dfbb8_1",
    "cython 0.29.16 py37h570ac47_0",
    "libblas 3.8.0 16_openblas",
    "libcblas 3.8.0 16_openblas",
    "libcxx 9.0.1 1",
    "libffi 3.2.1 h4a8c4bd_1007",
    "libgfortran 4.0.0 2",
    "liblapack 3.8.0 16_openblas",
    "libopenblas 0.3.9 h3d69b6c_0",
    "llvm-openmp 9.0.1 h28b9765_2",
    "mpi 1.0 mpich",
    "mpich 3.3.2 hc856adb_0",
    "ncurses 6.1 h0a44026_1002",
    "neuron 7.7.2 nompi_py37h449b016_100",
    "numpy 1.18.1 py37h7687784_1",
    "openssl 1.1.1e h0b31af3_0",
    "pip 20.0.2 py_2",
    "python 3.7.6 h90870a6_5_cpython",
    "python_abi 3.7 1_cp37m",
    "readline 8.0 hcfe32e1_0",
    "setuptools 46.1.3 py37hc8dfbb8_0",
    "sqlite 3.30.1 h93121df_0",
    "tk 8.6.10 hbbe82c9_0",
    "wheel 0.34.2 py_1",
    "xz 5.2.4 h0b31af3_1002",
    "zlib 1.2.11 h0b31af3_1006"
   ],
   "run": [
    "cython >=0.20",
    "h5py >=2.5",
    "mpi4py >=1.2",
    "mpich >=3.3.2,<3.4.0a0",
    "neuron >=7.6.7 mpi_mpich_*",
    "numpy >=1.18.1,<2.0a0",
    "python >=3.7,<3.8.0a0",
    "python_abi 3.7.* *_cp37m",
    "scipy >=0.14",
    "setuptools"
   ]
  },
  "source": {
   "sha256": "6d09a34740dc24237d6fc93d145d90914fd422f83da37503093cc25382d9f006",
   "url": "https://pypi.io/packages/source/l/lfpy/LFPy-2.0.7.tar.gz"
  },
  "test": {
   "commands": [
    "py.test -vsx --pyargs LFPy"
   ],
   "imports": [
    "LFPy"
   ],
   "requires": [
    "pytest"
   ]
  }
 },
 "version": "2.0.7"
}