{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.18.2",
  "conda_private": false,
  "conda_version": "4.6.14",
  "description": "LFPy provides a set of easy-to-use Python classes for setting up your\nmodel, running your simulations and calculating the extracellular\npotentials arising from activity in your model neuron. If you have a model\nworking in NEURON or NeuroML2 already, it is likely that it can be adapted\nto work with LFPy.\n",
  "dev_url": "https://github.com/LFPy/LFPy",
  "doc_url": "https://lfpy.readthedocs.io",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "espenhgn",
    "minrk"
   ]
  },
  "home": "https://github.com/LFPy/LFPy",
  "identifiers": [],
  "keywords": [],
  "license": "GPL-3.0",
  "license_family": "GPL",
  "license_file": "LICENSE",
  "root_pkgs": [
   "ncurses 6.1 hf484d3e_1002",
   "conda-package-handling 1.3.9 py37_0",
   "tqdm 4.32.1 py_0",
   "perl 5.26.2 h516909a_1006",
   "sqlite 3.28.0 h8b20d00_0",
   "zstd 1.4.0 h3b9ef0a_0",
   "idna 2.8 py37_1000",
   "ipython_genutils 0.2.0 py_1",
   "filelock 3.0.10 py_0",
   "pysocks 1.7.0 py37_0",
   "conda 4.6.14 py37_0",
   "liblief 0.9.0 hf8a498c_1",
   "readline 7.0 hf8c457e_1001",
   "beautifulsoup4 4.7.1 py37_1001",
   "attrs 19.1.0 py_0",
   "libxml2 2.9.9 h13577e0_0",
   "libiconv 1.15 h516909a_1005",
   "krb5 1.16.3 h05b26f9_1001",
   "git 2.22.0 pl526hce37bd2_0",
   "bzip2 1.0.6 h14c3975_1002",
   "zlib 1.2.11 h14c3975_1004",
   "anaconda-client 1.7.2 py_0",
   "pyopenssl 19.0.0 py37_0",
   "clyent 1.2.2 py_1",
   "setuptools 41.0.1 py37_0",
   "openssl 1.1.1b h14c3975_1",
   "cffi 1.12.3 py37h8022711_0",
   "pytz 2019.1 py_0",
   "six 1.12.0 py37_1000",
   "chardet 3.0.4 py37_1003",
   "psutil 5.6.3 py37h516909a_0",
   "jinja2 2.10.1 py_0",
   "glob2 0.7 py_0",
   "python 3.7.3 h5b0a415_0",
   "python-libarchive-c 2.8 py37_1004",
   "gosu 1.10 h81701ea_1001",
   "certifi 2019.3.9 py37_0",
   "asn1crypto 0.24.0 py37_1003",
   "python-dateutil 2.8.0 py_0",
   "conda-build 3.18.2 py37_0",
   "decorator 4.4.0 py_0",
   "lzo 2.10 h14c3975_1000",
   "lz4-c 1.8.3 he1b5a44_1001",
   "libssh2 1.8.2 h22169c7_2",
   "jsonschema 3.0.1 py37_0",
   "tini 0.18.0 h14c3975_1001",
   "expat 2.2.5 hf484d3e_1002",
   "jupyter_core 4.4.0 py_0",
   "libgcc-ng 9.1.0 hdf63c60_0",
   "pycosat 0.6.3 py37h14c3975_1001",
   "requests 2.22.0 py37_0",
   "patchelf 0.10 he1b5a44_0",
   "py-lief 0.9.0 py37he1b5a44_1",
   "libedit 3.1.20170329 hf8c457e_1001",
   "yaml 0.1.7 h14c3975_1001",
   "traitlets 4.3.2 py37_1000",
   "tk 8.6.9 hed695b0_1002",
   "wheel 0.33.4 py37_0",
   "icu 58.2 hf484d3e_1000",
   "libffi 3.2.1 he1b5a44_1006",
   "ruamel_yaml 0.15.71 py37h14c3975_1000",
   "soupsieve 1.9.1 py37_0",
   "pyyaml 5.1.1 py37h516909a_0",
   "libcurl 7.64.1 hda55be3_0",
   "curl 7.64.1 hf8cf82a_0",
   "gettext 0.19.8.1 hc5be6a0_1002",
   "nbformat 4.4.0 py_1",
   "ca-certificates 2019.6.16 hecc5488_0",
   "libarchive 3.3.3 hb44662c_1005",
   "pycparser 2.19 py37_1",
   "xz 5.2.4 h14c3975_1001",
   "pyrsistent 0.15.2 py37h516909a_0",
   "urllib3 1.24.3 py37_0",
   "cryptography 2.7 py37h72c5cf5_0",
   "pip 19.1.1 py37_0",
   "conda-env 2.6.0 1",
   "pkginfo 1.5.0.1 py_0",
   "libstdcxx-ng 9.1.0 hdf63c60_0",
   "markupsafe 1.1.1 py37h14c3975_0",
   "conda-forge-ci-setup 2.3.1 py37_0",
   "click 7.0 py_0"
  ],
  "summary": "LFPy is a Python-module for calculation of extracellular potentials from multicompartment neuron models",
  "tags": []
 },
 "conda_build_config": {
  "CONDA_BUILD_SYSROOT": "/opt/MacOSX10.10.sdk",
  "c_compiler": "gcc",
  "c_compiler_version": "7",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "condaforge/linux-anvil-comp7",
  "extend_keys": [
   "pin_run_as_build",
   "ignore_version",
   "extend_keys",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "mpi": "mpich",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.6",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "files": [
  "lib/python3.6/site-packages/LFPy-2.0.2.dist-info/INSTALLER",
  "lib/python3.6/site-packages/LFPy-2.0.2.dist-info/LICENSE",
  "lib/python3.6/site-packages/LFPy-2.0.2.dist-info/METADATA",
  "lib/python3.6/site-packages/LFPy-2.0.2.dist-info/RECORD",
  "lib/python3.6/site-packages/LFPy-2.0.2.dist-info/WHEEL",
  "lib/python3.6/site-packages/LFPy/__init__.py",
  "lib/python3.6/site-packages/LFPy/alias_method.cpython-36m-x86_64-linux-gnu.so",
  "lib/python3.6/site-packages/LFPy/alias_method.py",
  "lib/python3.6/site-packages/LFPy/alias_method.pyx",
  "lib/python3.6/site-packages/LFPy/cell.py",
  "lib/python3.6/site-packages/LFPy/eegmegcalc.py",
  "lib/python3.6/site-packages/LFPy/inputgenerators.py",
  "lib/python3.6/site-packages/LFPy/lfpcalc.py",
  "lib/python3.6/site-packages/LFPy/network.py",
  "lib/python3.6/site-packages/LFPy/pointprocess.py",
  "lib/python3.6/site-packages/LFPy/recextelectrode.py",
  "lib/python3.6/site-packages/LFPy/run_simulation.cpython-36m-x86_64-linux-gnu.so",
  "lib/python3.6/site-packages/LFPy/run_simulation.py",
  "lib/python3.6/site-packages/LFPy/run_simulation.pyx",
  "lib/python3.6/site-packages/LFPy/templatecell.py",
  "lib/python3.6/site-packages/LFPy/test/__init__.py",
  "lib/python3.6/site-packages/LFPy/test/ball_and_stick_template.hoc",
  "lib/python3.6/site-packages/LFPy/test/ball_and_sticks.hoc",
  "lib/python3.6/site-packages/LFPy/test/ball_and_sticks_w_lists.hoc",
  "lib/python3.6/site-packages/LFPy/test/common.py",
  "lib/python3.6/site-packages/LFPy/test/expsyni.mod",
  "lib/python3.6/site-packages/LFPy/test/sinsyn.mod",
  "lib/python3.6/site-packages/LFPy/test/stick.hoc",
  "lib/python3.6/site-packages/LFPy/test/stick_template.hoc",
  "lib/python3.6/site-packages/LFPy/test/sticks_not_connected_head_to_toe.hoc",
  "lib/python3.6/site-packages/LFPy/test/test_alias_method.py",
  "lib/python3.6/site-packages/LFPy/test/test_cell.py",
  "lib/python3.6/site-packages/LFPy/test/test_eegmegcalc.py",
  "lib/python3.6/site-packages/LFPy/test/test_inputgenerators.py",
  "lib/python3.6/site-packages/LFPy/test/test_lfpcalc.py",
  "lib/python3.6/site-packages/LFPy/test/test_misc.py",
  "lib/python3.6/site-packages/LFPy/test/test_network.py",
  "lib/python3.6/site-packages/LFPy/test/test_networkcell.py",
  "lib/python3.6/site-packages/LFPy/test/test_pointprocess.py",
  "lib/python3.6/site-packages/LFPy/test/test_recextelectrode.py",
  "lib/python3.6/site-packages/LFPy/test/test_templatecell.py",
  "lib/python3.6/site-packages/LFPy/test/test_tools.py",
  "lib/python3.6/site-packages/LFPy/test/x86_64/.libs/expsyni.o",
  "lib/python3.6/site-packages/LFPy/test/x86_64/.libs/libnrnmech.lai",
  "lib/python3.6/site-packages/LFPy/test/x86_64/.libs/libnrnmech.so",
  "lib/python3.6/site-packages/LFPy/test/x86_64/.libs/libnrnmech.so.0",
  "lib/python3.6/site-packages/LFPy/test/x86_64/.libs/libnrnmech.so.0.0.0",
  "lib/python3.6/site-packages/LFPy/test/x86_64/.libs/mod_func.o",
  "lib/python3.6/site-packages/LFPy/test/x86_64/.libs/sinsyn.o",
  "lib/python3.6/site-packages/LFPy/test/x86_64/expsyni.c",
  "lib/python3.6/site-packages/LFPy/test/x86_64/expsyni.lo",
  "lib/python3.6/site-packages/LFPy/test/x86_64/expsyni.mod",
  "lib/python3.6/site-packages/LFPy/test/x86_64/mod_func.c",
  "lib/python3.6/site-packages/LFPy/test/x86_64/mod_func.lo",
  "lib/python3.6/site-packages/LFPy/test/x86_64/sinsyn.c",
  "lib/python3.6/site-packages/LFPy/test/x86_64/sinsyn.lo",
  "lib/python3.6/site-packages/LFPy/test/x86_64/sinsyn.mod",
  "lib/python3.6/site-packages/LFPy/test/x86_64/special",
  "lib/python3.6/site-packages/LFPy/tools.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "mpi_mpich_py36hcf07815_1",
  "build_number": 1,
  "depends": [
   "cython >=0.20",
   "h5py >=2.5",
   "libgcc-ng >=7.3.0",
   "mpi4py >=1.2",
   "mpich",
   "neuron >=7.6.7 mpi_mpich_*",
   "numpy >=1.16.4,<2.0a0",
   "python >=3.6,<3.7.0a0",
   "scipy >=0.14",
   "setuptools"
  ],
  "license": "GPL-3.0",
  "license_family": "GPL",
  "name": "lfpy",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1560928646779,
  "version": "2.0.2"
 },
 "metadata_version": 1,
 "name": "lfpy",
 "raw_recipe": "{% set name = 'LFPy' %}\n{% set version = \"2.0.2\" %}\n{% set build = 1 %}\n\n# mpi must be defined for conda-smithy lint\n{% if not mpi %}\n# conda-smithy misbehaves if mpi is unset\n{% set mpi = 'mpich' %}\n{% endif %}\n\npackage:\n  name: {{ name | lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/l/lfpy/{{name}}-{{ version }}.tar.gz\n  sha256: ab5103f6fd5fc9fb4005e65033a98d9d67f9ace4bc4b9be6c3462eab65539698\n\nbuild:\n  number: {{ build }}\n  {% set mpi_prefix = \"mpi_\" + mpi %} # use mpi_mpich_*` neuron variant\n  string: \"{{ mpi_prefix }}_py{{ py }}h{{ PKG_HASH }}_{{ build }}\"\n  script: \"{{PYTHON}} -m pip install . --no-deps -vv\"\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n    - cython >=0.20\n    - numpy >=1.8\n    - neuron\n  run:\n    - python\n    - setuptools\n    - cython >=0.20\n    - {{ pin_compatible('numpy') }}\n    - scipy >=0.14\n    - h5py >=2.5\n    - mpi4py >=1.2\n    - {{ mpi }}\n    - neuron >=7.6.7 {{ mpi_prefix }}_*\n\ntest:\n  requires:\n    # test with mpich instead of openmpi\n    # mpi4py with openmpi doesn't import on CI\n    # without extra environment variables set\n    - mpich\n    - pytest\n  imports:\n    - LFPy\n  commands:\n    - py.test -vsx --pyargs LFPy\n\nabout:\n  home: https://github.com/LFPy/LFPy\n  license: GPL-3.0\n  license_family: GPL\n  license_file: LICENSE\n  summary: 'LFPy is a Python-module for calculation of extracellular potentials from multicompartment neuron models'\n\n  description: |\n    LFPy provides a set of easy-to-use Python classes for setting up your\n    model, running your simulations and calculating the extracellular\n    potentials arising from activity in your model neuron. If you have a model\n    working in NEURON or NeuroML2 already, it is likely that it can be adapted\n    to work with LFPy.\n\n  doc_url: https://lfpy.readthedocs.io\n  dev_url: https://github.com/LFPy/LFPy\n\nextra:\n  recipe-maintainers:\n    - espenhgn\n    - minrk\n",
 "rendered_recipe": {
  "about": {
   "description": "LFPy provides a set of easy-to-use Python classes for setting up your\nmodel, running your simulations and calculating the extracellular\npotentials arising from activity in your model neuron. If you have a model\nworking in NEURON or NeuroML2 already, it is likely that it can be adapted\nto work with LFPy.\n",
   "dev_url": "https://github.com/LFPy/LFPy",
   "doc_url": "https://lfpy.readthedocs.io",
   "home": "https://github.com/LFPy/LFPy",
   "license": "GPL-3.0",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "LFPy is a Python-module for calculation of extracellular potentials from multicompartment neuron models"
  },
  "build": {
   "number": "1",
   "script": "/home/conda/feedstock_root/build_artifacts/lfpy_1560928504448/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/bin/python -m pip install . --no-deps -vv",
   "string": "mpi_mpich_py36hcf07815_1"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "espenhgn",
    "minrk"
   ]
  },
  "package": {
   "name": "lfpy",
   "version": "2.0.2"
  },
  "requirements": {
   "build": [
    "binutils_impl_linux-64 2.31.1 h6176602_1",
    "binutils_linux-64 2.31.1 h6176602_7",
    "gcc_impl_linux-64 7.3.0 habb00fd_1",
    "gcc_linux-64 7.3.0 h553295d_7",
    "libgcc-ng 9.1.0 hdf63c60_0",
    "libstdcxx-ng 9.1.0 hdf63c60_0"
   ],
   "host": [
    "ca-certificates 2019.6.16 hecc5488_0",
    "certifi 2019.3.9 py36_0",
    "cython 0.29.10 py36he1b5a44_0",
    "libblas 3.8.0 7_openblas",
    "libcblas 3.8.0 7_openblas",
    "libffi 3.2.1 he1b5a44_1006",
    "libgcc-ng 9.1.0 hdf63c60_0",
    "libgfortran 3.0.0 1",
    "liblapack 3.8.0 7_openblas",
    "libstdcxx-ng 9.1.0 hdf63c60_0",
    "ncurses 6.1 hf484d3e_1002",
    "neuron 7.6.7 nompi_py36h5bb8e5f_102",
    "numpy 1.16.4 py36h95a1406_0",
    "openblas 0.3.5 ha44fe06_0",
    "openssl 1.1.1b h14c3975_1",
    "pip 19.1.1 py36_0",
    "python 3.6.7 h381d211_1004",
    "readline 7.0 hf8c457e_1001",
    "setuptools 41.0.1 py36_0",
    "sqlite 3.28.0 h8b20d00_0",
    "tk 8.6.9 hed695b0_1002",
    "wheel 0.33.4 py36_0",
    "xz 5.2.4 h14c3975_1001",
    "zlib 1.2.11 h14c3975_1004"
   ],
   "run": [
    "cython >=0.20",
    "h5py >=2.5",
    "libgcc-ng >=7.3.0",
    "mpi4py >=1.2",
    "mpich",
    "neuron >=7.6.7 mpi_mpich_*",
    "numpy >=1.16.4,<2.0a0",
    "python >=3.6,<3.7.0a0",
    "scipy >=0.14",
    "setuptools"
   ]
  },
  "source": {
   "sha256": "ab5103f6fd5fc9fb4005e65033a98d9d67f9ace4bc4b9be6c3462eab65539698",
   "url": "https://pypi.io/packages/source/l/lfpy/LFPy-2.0.2.tar.gz"
  },
  "test": {
   "commands": [
    "py.test -vsx --pyargs LFPy"
   ],
   "imports": [
    "LFPy"
   ],
   "requires": [
    "mpich",
    "pytest"
   ]
  }
 },
 "version": "2.0.2"
}