{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.16.1",
  "conda_private": false,
  "conda_version": "4.5.11",
  "description": "MUMPS (MUltifrontal Massively Parallel Solver) is a package for solving\nsystems of linear equations of the form Ax = b, where A is a square sparse\nmatrix that can be either unsymmetric, symmetric positive definite, or\ngeneral symmetric, on distributed memory computers. MUMPS implements a\ndirect method based on a multifrontal approach which performs a Gaussian\nfactorization.\n",
  "doc_url": "http://mumps.enseeiht.fr/index.php?page=doc",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "basnijholt",
    "minrk",
    "jbweston"
   ]
  },
  "home": "http://mumps.enseeiht.fr/",
  "identifiers": [],
  "keywords": [],
  "license": "CeCILL-C",
  "license_file": "LICENSE",
  "root_pkgs": [
   "anaconda-client 1.7.2 py36_0",
   "asn1crypto 0.24.0 py36_0",
   "beautifulsoup4 4.6.3 py36_0",
   "bzip2 1.0.6 h1de35cc_5",
   "ca-certificates 2018.03.07 0",
   "certifi 2018.8.24 py36_1",
   "cffi 1.11.5 py36h6174b99_1",
   "chardet 3.0.4 py36_1",
   "click 7.0 py36_0",
   "clyent 1.2.2 py36_1",
   "conda 4.5.11 py36_0",
   "conda-build 3.16.1 py36_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 2.0.8 py36_0",
   "cryptography 2.3.1 py36hdbc3d79_0",
   "decorator 4.3.0 py36_0",
   "filelock 3.0.9 py36_0",
   "glob2 0.6 py36_1",
   "icu 58.2 h4b95b61_1",
   "idna 2.7 py36_0",
   "ipython_genutils 0.2.0 py36h241746c_0",
   "jinja2 2.10 py36_0",
   "jsonschema 2.6.0 py36hb385e00_0",
   "jupyter_core 4.4.0 py36_0",
   "libarchive 3.3.3 hc2e69e3_1",
   "libcxx 4.0.1 h579ed51_0",
   "libcxxabi 4.0.1 hebd6815_0",
   "libedit 3.1.20170329 hb402a30_2",
   "libffi 3.2.1 h475c297_4",
   "libiconv 1.15 hdd342a3_7",
   "libxml2 2.9.8 hab757c2_1",
   "lz4-c 1.8.1.2 h1de35cc_0",
   "lzo 2.10 h362108e_2",
   "markupsafe 1.0 py36h1de35cc_1",
   "nbformat 4.4.0 py36h827af21_0",
   "ncurses 6.1 h0a44026_0",
   "openssl 1.0.2p h1de35cc_0",
   "pip 10.0.1 py36_0",
   "pkginfo 1.4.2 py36_1",
   "psutil 5.4.7 py36h1de35cc_0",
   "pycosat 0.6.3 py36h1de35cc_0",
   "pycparser 2.19 py36_0",
   "pyopenssl 18.0.0 py36_0",
   "pysocks 1.6.8 py36_0",
   "python 3.6.6 hc167b69_0",
   "python-dateutil 2.7.3 py36_0",
   "python-libarchive-c 2.8 py36_6",
   "python.app 2 py36_9",
   "pytz 2018.5 py36_0",
   "pyyaml 3.13 py36h1de35cc_0",
   "readline 7.0 h1de35cc_5",
   "requests 2.19.1 py36_0",
   "ruamel_yaml 0.15.46 py36h1de35cc_0",
   "setuptools 40.4.3 py36_0",
   "six 1.11.0 py36_1",
   "sqlite 3.24.0 ha441bb4_0",
   "tk 8.6.8 ha441bb4_0",
   "tqdm 4.26.0 py36h28b3542_0",
   "traitlets 4.3.2 py36h65bd3ce_0",
   "urllib3 1.23 py36_0",
   "wheel 0.32.1 py36_0",
   "xz 5.2.4 h1de35cc_4",
   "yaml 0.1.7 hc338f04_2",
   "zlib 1.2.11 hf3cbc9b_2",
   "zstd 1.3.3 h2a6be3a_0"
  ],
  "summary": "MUMPS: a parallel sparse direct solver",
  "tags": []
 },
 "conda_build_config": {
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.9",
  "c_compiler": "toolchain_c",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "fortran_compiler": "toolchain_fort",
  "ignore_build_only_deps": "python",
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "macos_min_version": "10.9",
  "metis": "5.1",
  "numpy": "1.11",
  "openblas": "0.2.20",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "metis": {
    "max_pin": "x.x"
   },
   "openblas": {
    "max_pin": "x.x.x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x.x",
    "min_pin": "x.x.x"
   }
  },
  "python": "3.6",
  "r_base": "3.5",
  "target_platform": "osx-64"
 },
 "files": [
  "include/cmumps_c.h",
  "include/cmumps_root.h",
  "include/cmumps_struc.h",
  "include/dmumps_c.h",
  "include/dmumps_root.h",
  "include/dmumps_struc.h",
  "include/elapse.h",
  "include/mpif.h",
  "include/mumps_c_types.h",
  "include/mumps_compat.h",
  "include/mumps_mpi.h",
  "include/smumps_c.h",
  "include/smumps_root.h",
  "include/smumps_struc.h",
  "include/zmumps_c.h",
  "include/zmumps_root.h",
  "include/zmumps_struc.h",
  "lib/libcmumps.a",
  "lib/libdmumps.a",
  "lib/libmpiseq.a",
  "lib/libmumps_common.a",
  "lib/libpord.a",
  "lib/libsmumps.a",
  "lib/libzmumps.a"
 ],
 "index": {
  "arch": "x86_64",
  "build": "blas_openblash613969f_212",
  "build_number": 212,
  "depends": [
   "blas 1.1 openblas",
   "libgfortran >=3.0",
   "metis >=5.1.0,<5.2.0a0",
   "openblas >=0.2.20,<0.2.21.0a0",
   "scotch"
  ],
  "features": "blas_openblas",
  "license": "CeCILL-C",
  "name": "mumps",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1539390950567,
  "version": "5.0.2"
 },
 "metadata_version": 1,
 "name": "mumps",
 "raw_recipe": "{% set name = \"mumps\" %}\n{% set version = \"5.0.2\" %}\n{% set sha256 = \"77292b204942640256097a3da482c2abcd1e0d5a74ecd1d4bab0f5ef6e60fe45\" %}\n{% set variant = \"openblas\" %}\n\npackage:\n  name: mumps\n  version: {{ version }}\n\nsource:\n  fn: MUMPS_{{ version }}.tar.gz\n  url: http://mumps.enseeiht.fr/MUMPS_{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n    - mumps_mpi.patch\nbuild:\n  number: 212\n  features:\n    - blas_{{ variant }}  # [not win]\n\nrequirements:\n  build:\n    - cmake  # [win]\n    - patch  # [win]\n    - {{ compiler('fortran') }}        # [unix]\n    - {{ compiler('m2w64_fortran') }}  # [win]\n    - {{ compiler('c') }}        # [unix]\n    - {{ compiler('m2w64_c') }}  # [win]\n  host:\n    - blas 1.1 {{ variant }}  # [not win]\n    - openblas                  # [not win]\n    - metis        # [not win]\n    - scotch  # [not win]\n    - m2w64-openblas  # [win]\n  run:\n    - blas 1.1 {{ variant }}  # [not win]\n    - openblas                  # [not win]\n    - metis  # [not win]\n    - scotch  # [not win]\n    - m2w64-openblas  # [win]\n\ntest:\n  commands:\n    - test -f \"${PREFIX}/lib/libsmumps.a\"  # [not win]\n    - test -f \"${PREFIX}/lib/libdmumps.a\"  # [not win]\n    - test -f \"${PREFIX}/lib/libcmumps.a\"  # [not win]\n    - test -f \"${PREFIX}/lib/libzmumps.a\"  # [not win]\n    - test -f \"${PREFIX}/lib/libmumps_common.a\"  # [not win]\n    - test -f \"${PREFIX}/lib/libpord.a\"  # [not win]\n    - test -f \"${PREFIX}/include/dmumps_struc.h\"  # [not win]\n    - if not exist \"%LIBRARY_PREFIX%\\mingw-w64\\bin\\libsmumps.dll\" exit 1  # [win]\n    - if not exist \"%LIBRARY_PREFIX%\\mingw-w64\\bin\\libdmumps.dll\" exit 1  # [win]\n    - if not exist \"%LIBRARY_PREFIX%\\mingw-w64\\bin\\libcmumps.dll\" exit 1  # [win]\n    - if not exist \"%LIBRARY_PREFIX%\\mingw-w64\\bin\\libzmumps.dll\" exit 1  # [win]\n    - if not exist \"%LIBRARY_PREFIX%\\mingw-w64\\lib\\libmumps_common.a\" exit 1  # [win]\n    - if not exist \"%LIBRARY_PREFIX%\\mingw-w64\\lib\\libpord.a\" exit 1  # [win]\n    - if not exist \"%LIBRARY_PREFIX%\\mingw-w64\\include\\dmumps_struc.h\" exit 1  # [win]\n    - if not exist \"%LIBRARY_PREFIX%\\mingw-w64\\include\\mumps_mpi.h\" exit 1  # [win]\n\nabout:\n  home: http://mumps.enseeiht.fr/\n  license: CeCILL-C\n  license_file: LICENSE\n  summary: 'MUMPS: a parallel sparse direct solver'\n  description: |\n    MUMPS (MUltifrontal Massively Parallel Solver) is a package for solving\n    systems of linear equations of the form Ax = b, where A is a square sparse\n    matrix that can be either unsymmetric, symmetric positive definite, or\n    general symmetric, on distributed memory computers. MUMPS implements a\n    direct method based on a multifrontal approach which performs a Gaussian\n    factorization.\n  doc_url: http://mumps.enseeiht.fr/index.php?page=doc\n\nextra:\n  recipe-maintainers:\n    - basnijholt\n    - minrk\n    - jbweston\n",
 "rendered_recipe": {
  "about": {
   "description": "MUMPS (MUltifrontal Massively Parallel Solver) is a package for solving\nsystems of linear equations of the form Ax = b, where A is a square sparse\nmatrix that can be either unsymmetric, symmetric positive definite, or\ngeneral symmetric, on distributed memory computers. MUMPS implements a\ndirect method based on a multifrontal approach which performs a Gaussian\nfactorization.\n",
   "doc_url": "http://mumps.enseeiht.fr/index.php?page=doc",
   "home": "http://mumps.enseeiht.fr/",
   "license": "CeCILL-C",
   "license_file": "LICENSE",
   "summary": "MUMPS: a parallel sparse direct solver"
  },
  "build": {
   "features": [
    "blas_openblas"
   ],
   "number": "212",
   "string": "blas_openblash613969f_212"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "basnijholt",
    "jbweston",
    "minrk"
   ]
  },
  "package": {
   "name": "mumps",
   "version": "5.0.2"
  },
  "requirements": {
   "build": [
    "cloog 0.18.0 10",
    "gcc 4.8.5 8",
    "gmp 5.1.2 6",
    "isl 0.12.2 1",
    "mpc 1.1.0 5",
    "mpfr 4.0.1 0",
    "toolchain 2.2.1 0",
    "toolchain_c_osx-64 2.2.1 0",
    "toolchain_fort_osx-64 2.2.1 0"
   ],
   "host": [
    "blas 1.1 openblas",
    "libgfortran 3.0.0 1",
    "metis 5.1.0 3",
    "openblas 0.2.20 8",
    "scotch 6.0.6 hc058ab9_0",
    "zlib 1.2.11 h470a237_3"
   ],
   "run": [
    "blas 1.1 openblas",
    "libgfortran >=3.0",
    "metis >=5.1.0,<5.2.0a0",
    "openblas >=0.2.20,<0.2.21.0a0",
    "scotch"
   ]
  },
  "source": {
   "fn": "MUMPS_5.0.2.tar.gz",
   "patches": [
    "mumps_mpi.patch"
   ],
   "sha256": "77292b204942640256097a3da482c2abcd1e0d5a74ecd1d4bab0f5ef6e60fe45",
   "url": "http://mumps.enseeiht.fr/MUMPS_5.0.2.tar.gz"
  },
  "test": {
   "commands": [
    "test -f \"${PREFIX}/lib/libsmumps.a\"",
    "test -f \"${PREFIX}/lib/libdmumps.a\"",
    "test -f \"${PREFIX}/lib/libcmumps.a\"",
    "test -f \"${PREFIX}/lib/libzmumps.a\"",
    "test -f \"${PREFIX}/lib/libmumps_common.a\"",
    "test -f \"${PREFIX}/lib/libpord.a\"",
    "test -f \"${PREFIX}/include/dmumps_struc.h\""
   ]
  }
 },
 "version": "5.0.2"
}