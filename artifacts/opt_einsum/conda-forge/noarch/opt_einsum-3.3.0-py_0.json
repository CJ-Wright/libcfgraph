{
 "about": {
  "channels": [
   "conda-forge",
   "defaults",
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.19.2",
  "conda_private": false,
  "conda_version": "4.8.3",
  "description": "Einsum is a very powerful function for contracting tensors of arbitrary dimension and index. However, it is typically only optimized to contract two terms at a time resulting in non-optimal scaling. This package optimizes the contraction order for arbitrarily large speedups.\nSee the docs for more information: http://optimized-einsum.readthedocs.io\n",
  "dev_url": "https://github.com/dgasmith/opt_einsum",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "dgasmith",
    "loriab"
   ]
  },
  "home": "http://github.com/dgasmith/opt_einsum",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "LICENSE",
  "root_pkgs": [
   "libffi 3.2.1 he1b5a44_1007",
   "python 3.7.6 cpython_h8356626_6",
   "jinja2 2.11.2 pyh9f0ad1d_0",
   "requests 2.24.0 pyh9f0ad1d_0",
   "pyyaml 5.3.1 py37h8f50634_0",
   "sqlite 3.32.3 hcee41ef_1",
   "beautifulsoup4 4.9.1 py37hc8dfbb8_0",
   "perl 5.26.2 h516909a_1006",
   "pycparser 2.20 pyh9f0ad1d_2",
   "libedit 3.1.20191231 h46ee950_1",
   "zlib 1.2.11 h516909a_1006",
   "bzip2 1.0.8 h516909a_2",
   "pip 20.1.1 py_1",
   "psutil 5.7.2 py37h8f50634_0",
   "pyopenssl 19.1.0 py_1",
   "_libgcc_mutex 0.1 conda_forge",
   "lz4-c 1.9.2 he1b5a44_1",
   "zipp 3.1.0 py_0",
   "libxml2 2.9.10 h72b56ed_1",
   "libgomp 9.2.0 h24d8f2e_2",
   "ncurses 6.2 he1b5a44_1",
   "pcre 8.44 he1b5a44_0",
   "pytz 2020.1 pyh9f0ad1d_0",
   "cryptography 2.9.2 py37hb09aad4_0",
   "six 1.15.0 pyh9f0ad1d_0",
   "krb5 1.17.1 hfafb76e_1",
   "conda 4.8.3 py37hc8dfbb8_1",
   "libssh2 1.9.0 hab1572f_4",
   "ruamel_yaml 0.15.80 py37h8f50634_1001",
   "jupyter_core 4.6.3 py37hc8dfbb8_1",
   "decorator 4.4.2 py_0",
   "lzo 2.10 h14c3975_1000",
   "pyrsistent 0.16.0 py37h8f50634_0",
   "jsonschema 3.2.0 py37hc8dfbb8_1",
   "liblief 0.10.1 he1b5a44_0",
   "importlib-metadata 1.7.0 py37hc8dfbb8_0",
   "openssl 1.1.1g h516909a_0",
   "nbformat 5.0.7 py_0",
   "cffi 1.14.0 py37hd463f26_0",
   "libcurl 7.71.1 hcdd3856_3",
   "importlib_metadata 1.7.0 0",
   "ripgrep 12.1.1 h516909a_0",
   "gettext 0.19.8.1 hc5be6a0_1002",
   "wheel 0.34.2 py_1",
   "expat 2.2.9 he1b5a44_2",
   "libiconv 1.15 h516909a_1006",
   "xz 5.2.5 h516909a_1",
   "pysocks 1.7.1 py37hc8dfbb8_1",
   "brotlipy 0.7.0 py37h8f50634_1000",
   "_openmp_mutex 4.5 0_gnu",
   "traitlets 4.3.3 py37hc8dfbb8_1",
   "libstdcxx-ng 9.2.0 hdf63c60_2",
   "python-dateutil 2.8.1 py_0",
   "su-exec 0.2 h516909a_1002",
   "soupsieve 2.0.1 py37hc8dfbb8_0",
   "conda-build 3.19.2 py37hc8dfbb8_2",
   "curl 7.71.1 he644dc0_3",
   "setuptools 49.2.0 py37hc8dfbb8_0",
   "patch 2.7.6 h14c3975_1001",
   "python-libarchive-c 2.9 py37_0",
   "readline 8.0 he28a2e2_2",
   "pycosat 0.6.3 py37h8f50634_1004",
   "ca-certificates 2020.6.20 hecda079_0",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "git 2.27.0 pl526h5e3e691_0",
   "conda-package-handling 1.6.0 py37h8f50634_2",
   "pkginfo 1.5.0.1 py_0",
   "tqdm 4.48.0 pyh9f0ad1d_0",
   "zstd 1.4.5 h6597ccf_1",
   "certifi 2020.6.20 py37hc8dfbb8_0",
   "py-lief 0.10.1 py37h3340039_0",
   "ld_impl_linux-64 2.34 h53a641e_7",
   "attrs 19.3.0 py_0",
   "ipython_genutils 0.2.0 py_1",
   "icu 67.1 he1b5a44_0",
   "libarchive 3.3.3 h3a8160c_1008",
   "yaml 0.2.5 h516909a_0",
   "markupsafe 1.1.1 py37h8f50634_1",
   "idna 2.10 pyh9f0ad1d_0",
   "anaconda-client 1.7.2 py_0",
   "clyent 1.2.2 py_1",
   "chardet 3.0.4 py37hc8dfbb8_1006",
   "tk 8.6.10 hed695b0_0",
   "tini 0.18.0 h14c3975_1001",
   "python_abi 3.7 1_cp37m",
   "glob2 0.7 py_0",
   "libgcc-ng 9.2.0 h24d8f2e_2",
   "patchelf 0.11 he1b5a44_0",
   "urllib3 1.25.9 py_0",
   "conda-env 2.6.0 1",
   "click 7.1.2 pyh9f0ad1d_0",
   "conda-forge-ci-setup 3.0.14 py37h71091ce_0"
  ],
  "summary": "Optimizing einsum functions in NumPy, Tensorflow, Dask, and more with contraction order optimization.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "condaforge/linux-anvil-comp7",
  "extend_keys": [
   "pin_run_as_build",
   "ignore_version",
   "extend_keys",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "files": [
  "site-packages/opt_einsum-0+untagged.61.gd905544.dirty-py3.8.egg-info/PKG-INFO",
  "site-packages/opt_einsum-0+untagged.61.gd905544.dirty-py3.8.egg-info/zip-safe",
  "site-packages/opt_einsum/__init__.py",
  "site-packages/opt_einsum/_version.py",
  "site-packages/opt_einsum/backends/__init__.py",
  "site-packages/opt_einsum/backends/cupy.py",
  "site-packages/opt_einsum/backends/dispatch.py",
  "site-packages/opt_einsum/backends/jax.py",
  "site-packages/opt_einsum/backends/object_arrays.py",
  "site-packages/opt_einsum/backends/tensorflow.py",
  "site-packages/opt_einsum/backends/theano.py",
  "site-packages/opt_einsum/backends/torch.py",
  "site-packages/opt_einsum/blas.py",
  "site-packages/opt_einsum/contract.py",
  "site-packages/opt_einsum/helpers.py",
  "site-packages/opt_einsum/parser.py",
  "site-packages/opt_einsum/path_random.py",
  "site-packages/opt_einsum/paths.py",
  "site-packages/opt_einsum/sharing.py",
  "site-packages/opt_einsum/tests/__init__.py",
  "site-packages/opt_einsum/tests/test_backends.py",
  "site-packages/opt_einsum/tests/test_blas.py",
  "site-packages/opt_einsum/tests/test_contract.py",
  "site-packages/opt_einsum/tests/test_edge_cases.py",
  "site-packages/opt_einsum/tests/test_input.py",
  "site-packages/opt_einsum/tests/test_paths.py",
  "site-packages/opt_einsum/tests/test_sharing.py"
 ],
 "index": {
  "arch": null,
  "build": "py_0",
  "build_number": 0,
  "depends": [
   "numpy",
   "python >=3.5"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "opt_einsum",
  "noarch": "python",
  "platform": null,
  "subdir": "noarch",
  "timestamp": 1595421592351,
  "version": "3.3.0"
 },
 "metadata_version": 1,
 "name": "opt_einsum",
 "raw_recipe": "{% set name = \"opt_einsum\" %}\n{% set version = \"3.3.0\" %}\n{% set sha256 = \"a748fdbccfce5af420ea56f8e2c51a6dc9e8774afd9179cb8addfab159b7b33c\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://github.com/dgasmith/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: python setup.py install --single-version-externally-managed --record record.txt\n\nrequirements:\n  build:\n    - python >=3.5\n    - setuptools\n  run:\n    - python >=3.5\n    - numpy\n\ntest:\n  requires:\n    - python >=3.5\n    - pytest\n  commands:\n    - pytest --pyargs opt_einsum\n\nabout:\n  home: http://github.com/dgasmith/opt_einsum\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Optimizing einsum functions in NumPy, Tensorflow, Dask, and more with contraction order optimization.\n\n  description: >\n    Einsum is a very powerful function for contracting tensors of arbitrary dimension and index. However, it is typically only optimized to contract two terms at a time resulting in non-optimal scaling. This package optimizes the contraction order for arbitrarily large speedups.\n\n    See the docs for more information: http://optimized-einsum.readthedocs.io\n\n  dev_url: https://github.com/dgasmith/opt_einsum\n\nextra:\n  recipe-maintainers:\n    - dgasmith\n    - loriab\n",
 "rendered_recipe": {
  "about": {
   "description": "Einsum is a very powerful function for contracting tensors of arbitrary dimension and index. However, it is typically only optimized to contract two terms at a time resulting in non-optimal scaling. This package optimizes the contraction order for arbitrarily large speedups.\nSee the docs for more information: http://optimized-einsum.readthedocs.io\n",
   "dev_url": "https://github.com/dgasmith/opt_einsum",
   "home": "http://github.com/dgasmith/opt_einsum",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Optimizing einsum functions in NumPy, Tensorflow, Dask, and more with contraction order optimization."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "python setup.py install --single-version-externally-managed --record record.txt",
   "string": "py_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "dgasmith",
    "loriab"
   ]
  },
  "package": {
   "name": "opt_einsum",
   "version": "3.3.0"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 0_gnu",
    "ca-certificates 2020.6.20 hecda079_0",
    "certifi 2020.6.20 py38h32f6830_0",
    "ld_impl_linux-64 2.34 h53a641e_7",
    "libffi 3.2.1 he1b5a44_1007",
    "libgcc-ng 9.2.0 h24d8f2e_2",
    "libgomp 9.2.0 h24d8f2e_2",
    "libstdcxx-ng 9.2.0 hdf63c60_2",
    "ncurses 6.2 he1b5a44_1",
    "openssl 1.1.1g h516909a_0",
    "python 3.8.4 cpython_h425cb1d_0",
    "python_abi 3.8 1_cp38",
    "readline 8.0 he28a2e2_2",
    "setuptools 49.2.0 py38h32f6830_0",
    "sqlite 3.32.3 hcee41ef_1",
    "tk 8.6.10 hed695b0_0",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.11 h516909a_1006"
   ],
   "run": [
    "numpy",
    "python >=3.5"
   ]
  },
  "source": {
   "fn": "opt_einsum-3.3.0.tar.gz",
   "sha256": "a748fdbccfce5af420ea56f8e2c51a6dc9e8774afd9179cb8addfab159b7b33c",
   "url": "https://github.com/dgasmith/opt_einsum/archive/v3.3.0.tar.gz"
  },
  "test": {
   "commands": [
    "pytest --pyargs opt_einsum"
   ],
   "requires": [
    "pytest",
    "python >=3.5"
   ]
  }
 },
 "version": "3.3.0"
}