{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.18.10",
  "conda_private": false,
  "conda_version": "4.7.12",
  "description": "Catch2 stands for C++ Automated Test Cases in a Header and is a multi-paradigm test framework\nfor C++. which also supports Objective-C (and maybe C). It is primarily distributed as a single\nheader file, although certain extensions may require additional headers.\n",
  "dev_url": "https://github.com/catchorg/Catch2",
  "doc_url": "https://github.com/catchorg/Catch2/blob/master/docs/Readme.md",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "mjscosta"
   ]
  },
  "home": "https://github.com/catchorg/Catch2/",
  "identifiers": [],
  "keywords": [],
  "license": "BSL-1.0",
  "license_file": "LICENSE.txt",
  "root_pkgs": [
   "anaconda-client 1.7.2 py_0",
   "asn1crypto 1.2.0 py36_0",
   "attrs 19.3.0 py_0",
   "beautifulsoup4 4.8.1 py36_0",
   "bzip2 1.0.8 hfa6e2cd_1",
   "ca-certificates 2019.9.11 hecc5488_0",
   "certifi 2019.9.11 py36_0",
   "cffi 1.13.1 py36hb32ad35_0",
   "chardet 3.0.4 py36_1003",
   "click 7.0 py_0",
   "clyent 1.2.2 py_1",
   "conda 4.7.12 py36_0",
   "conda-build 3.18.10 py36_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 2.5.3 py36_0",
   "conda-package-handling 1.6.0 py36h2fa13f4_0",
   "console_shortcut 0.1.1 3",
   "cryptography 2.7 py36hb32ad35_0",
   "decorator 4.4.0 py_0",
   "filelock 3.0.10 py_0",
   "glob2 0.7 py_0",
   "idna 2.8 py36_1000",
   "importlib_metadata 0.23 py36_0",
   "ipython_genutils 0.2.0 py_1",
   "jinja2 2.10.3 py_0",
   "jsonschema 3.1.1 py36_0",
   "jupyter_core 4.5.0 py_0",
   "libarchive 3.4.0 h8ecf108_1",
   "libiconv 1.15 hfa6e2cd_1005",
   "liblief 0.9.0 ha925a31_2",
   "libxml2 2.9.9 h9ce36c8_5",
   "lz4-c 1.8.3 he025d50_1001",
   "lzo 2.10 hfa6e2cd_1000",
   "m2w64-gcc-libgfortran 5.3.0 6",
   "m2w64-gcc-libs 5.3.0 7",
   "m2w64-gcc-libs-core 5.3.0 7",
   "m2w64-gmp 6.1.0 2",
   "m2w64-libwinpthread-git 5.0.0.4634.697f757 2",
   "markupsafe 1.1.1 py36hfa6e2cd_0",
   "menuinst 1.4.16 py36_0",
   "more-itertools 7.2.0 py_0",
   "msys2-conda-epoch 20160418 1",
   "nbformat 4.4.0 py_1",
   "openssl 1.1.1c hfa6e2cd_0",
   "pip 19.3.1 py36_0",
   "pkginfo 1.5.0.1 py_0",
   "powershell_shortcut 0.0.1 2",
   "psutil 5.6.3 py36hfa6e2cd_0",
   "py-lief 0.9.0 py36ha925a31_2",
   "pycosat 0.6.3 py36hfa6e2cd_1001",
   "pycparser 2.19 py36_1",
   "pyopenssl 19.0.0 py36_0",
   "pyrsistent 0.15.4 py36hfa6e2cd_0",
   "pysocks 1.7.1 py36_0",
   "python 3.6.7 he025d50_1005",
   "python-dateutil 2.8.0 py_0",
   "python-libarchive-c 2.8 py36_1004",
   "pytz 2019.3 py_0",
   "pywin32 224 py36hfa6e2cd_1000",
   "pyyaml 5.1.2 py36hfa6e2cd_0",
   "requests 2.22.0 py36_1",
   "ripgrep 11.0.2 h301d43c_3",
   "ruamel_yaml 0.15.71 py36hfa6e2cd_1000",
   "setuptools 41.4.0 py36_0",
   "six 1.12.0 py36_1000",
   "soupsieve 1.9.4 py36_0",
   "sqlite 3.27.2 he774522_0",
   "tqdm 4.36.1 py_0",
   "traitlets 4.3.3 py36_0",
   "urllib3 1.25.6 py36_0",
   "vc 14.1 h0510ff6_4",
   "vs2008_express_vc_python_patch 1.0.0 0",
   "vs2015_runtime 14.15.26706 h3a45250_0",
   "wheel 0.33.6 py36_0",
   "wincertstore 0.2 py36_1002",
   "win_inet_pton 1.1.0 py36_0",
   "xz 5.2.4 h2fa13f4_1001",
   "yaml 0.1.7 hc54c509_2",
   "zipp 0.6.0 py_0",
   "zlib 1.2.11 h2fa13f4_1006",
   "zstd 1.4.3 hd8a0e53_0"
  ],
  "summary": "A modern, C++-native, header-only, test framework for unit-tests, TDD and BDD - using\nC++11, C++14, C++17 and later (or C++03 on the Catch1.x branch).\n",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "vs2017",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "vs2015",
  "extend_keys": [
   "ignore_version",
   "pin_run_as_build",
   "extend_keys",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "vc": {
    "max_pin": "x"
   }
  },
  "python": "3.6",
  "r_base": "3.4",
  "target_platform": "win-64",
  "vc": "14",
  "zip_keys": [
   [
    "vc",
    "cxx_compiler"
   ]
  ]
 },
 "files": [
  "Library/include/catch2/catch.hpp",
  "Library/include/catch2/catch_reporter_automake.hpp",
  "Library/include/catch2/catch_reporter_tap.hpp",
  "Library/include/catch2/catch_reporter_teamcity.hpp",
  "Library/lib/cmake/Catch2/Catch.cmake",
  "Library/lib/cmake/Catch2/Catch2Config.cmake",
  "Library/lib/cmake/Catch2/Catch2ConfigVersion.cmake",
  "Library/lib/cmake/Catch2/Catch2Targets.cmake",
  "Library/lib/cmake/Catch2/CatchAddTests.cmake",
  "Library/lib/cmake/Catch2/ParseAndAddCatchTests.cmake",
  "Library/share/Catch2/gdbinit",
  "Library/share/Catch2/lldbinit",
  "Library/share/doc/Catch2/Readme.md",
  "Library/share/doc/Catch2/assertions.md",
  "Library/share/doc/Catch2/benchmarks.md",
  "Library/share/doc/Catch2/ci-and-misc.md",
  "Library/share/doc/Catch2/cmake-integration.md",
  "Library/share/doc/Catch2/command-line.md",
  "Library/share/doc/Catch2/commercial-users.md",
  "Library/share/doc/Catch2/configuration.md",
  "Library/share/doc/Catch2/contributing.md",
  "Library/share/doc/Catch2/deprecations.md",
  "Library/share/doc/Catch2/event-listeners.md",
  "Library/share/doc/Catch2/generators.md",
  "Library/share/doc/Catch2/limitations.md",
  "Library/share/doc/Catch2/list-of-examples.md",
  "Library/share/doc/Catch2/logging.md",
  "Library/share/doc/Catch2/matchers.md",
  "Library/share/doc/Catch2/opensource-users.md",
  "Library/share/doc/Catch2/other-macros.md",
  "Library/share/doc/Catch2/own-main.md",
  "Library/share/doc/Catch2/release-notes.md",
  "Library/share/doc/Catch2/release-process.md",
  "Library/share/doc/Catch2/reporters.md",
  "Library/share/doc/Catch2/slow-compiles.md",
  "Library/share/doc/Catch2/test-cases-and-sections.md",
  "Library/share/doc/Catch2/test-fixtures.md",
  "Library/share/doc/Catch2/tostring.md",
  "Library/share/doc/Catch2/tutorial.md",
  "Library/share/doc/Catch2/why-catch.md",
  "Library/share/pkgconfig/catch2.pc"
 ],
 "index": {
  "arch": "x86_64",
  "build": "h1ad3211_0",
  "build_number": 0,
  "depends": [],
  "license": "BSL-1.0",
  "name": "catch2",
  "platform": "win",
  "subdir": "win-64",
  "timestamp": 1571944489124,
  "version": "2.10.2"
 },
 "metadata_version": 1,
 "name": "catch2",
 "raw_recipe": "{% set version = \"2.10.2\" %}\n{% set name = \"catch2\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tgz\n  url: https://github.com/catchorg/Catch2/archive/v{{ version }}.tar.gz\n  sha256: 79aa46ee6c5a87bc5306bfffc6ecde6a1ad6327715b208ee2e846873f282a494\n\nbuild:\n  skip: true  # [win and vc<14]\n  number: 0\n\n  ignore_run_exports:\n    - {{ compiler('cxx') }}\n    - libstdcxx-ng  # [linux]\n    - libcxx  # [osx]\n    - vc  # [win]\n\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n\ntest:\n  requires:\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n\nabout:\n  home: https://github.com/catchorg/Catch2/\n  license: BSL-1.0\n  license_file: LICENSE.txt\n  summary: |\n    A modern, C++-native, header-only, test framework for unit-tests, TDD and BDD - using\n    C++11, C++14, C++17 and later (or C++03 on the Catch1.x branch).\n  description: |\n    Catch2 stands for C++ Automated Test Cases in a Header and is a multi-paradigm test framework\n    for C++. which also supports Objective-C (and maybe C). It is primarily distributed as a single\n    header file, although certain extensions may require additional headers.\n  doc_url: https://github.com/catchorg/Catch2/blob/master/docs/Readme.md\n  dev_url: https://github.com/catchorg/Catch2\n\nextra:\n  recipe-maintainers:\n    - mjscosta\n",
 "rendered_recipe": {
  "about": {
   "description": "Catch2 stands for C++ Automated Test Cases in a Header and is a multi-paradigm test framework\nfor C++. which also supports Objective-C (and maybe C). It is primarily distributed as a single\nheader file, although certain extensions may require additional headers.\n",
   "dev_url": "https://github.com/catchorg/Catch2",
   "doc_url": "https://github.com/catchorg/Catch2/blob/master/docs/Readme.md",
   "home": "https://github.com/catchorg/Catch2/",
   "license": "BSL-1.0",
   "license_file": "LICENSE.txt",
   "summary": "A modern, C++-native, header-only, test framework for unit-tests, TDD and BDD - using\nC++11, C++14, C++17 and later (or C++03 on the Catch1.x branch).\n"
  },
  "build": {
   "ignore_run_exports": [
    "vc",
    "vs2015_win-64"
   ],
   "number": "0",
   "string": "h1ad3211_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "mjscosta"
   ]
  },
  "package": {
   "name": "catch2",
   "version": "2.10.2"
  },
  "requirements": {
   "build": [
    "cmake 3.15.4 he025d50_0",
    "ninja 1.9.0 h1ad3211_0",
    "vs2015_runtime 14.16.27012 hf0eaf9b_0",
    "vs2015_win-64 14.0.25420 h55c1224_11"
   ]
  },
  "source": {
   "fn": "catch2-2.10.2.tgz",
   "sha256": "79aa46ee6c5a87bc5306bfffc6ecde6a1ad6327715b208ee2e846873f282a494",
   "url": "https://github.com/catchorg/Catch2/archive/v2.10.2.tar.gz"
  },
  "test": {
   "requires": [
    "cmake",
    "ninja",
    "vs2015_win-64"
   ]
  }
 },
 "version": "2.10.2"
}