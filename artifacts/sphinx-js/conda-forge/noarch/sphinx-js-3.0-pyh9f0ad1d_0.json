{
 "about": {
  "channels": [
   "conda-forge",
   "defaults",
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.19.2",
  "conda_private": false,
  "conda_version": "4.8.3",
  "description": "When you write a JavaScript library, how do you explain it to people? If\nit's a small project in a domain your users are familiar with, JSDoc's\nalphabetical list of routines might suffice. But in a larger project, it is\nuseful to intersperse prose with your API docs without having to copy and\npaste things.\n\nsphinx-js lets you use the industry-leading Sphinx documentation tool with\nJS projects. It provides a handful of directives, patterned after the\nPython-centric autodoc ones, for pulling JSDoc-formatted documentation into\nreStructuredText pages. And, because you can keep using JSDoc in your code,\nyou remain compatible with the rest of your JS tooling, like Google's\nClosure Compiler.\n",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "bollwyvl"
   ]
  },
  "home": "https://github.com/mozilla/sphinx-js",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "src/LICENSE",
  "root_pkgs": [
   "yaml 0.2.5 h516909a_0",
   "python-libarchive-c 2.9 py37_0",
   "openssl 1.1.1g h516909a_0",
   "lzo 2.10 h14c3975_1000",
   "pkginfo 1.5.0.1 py_0",
   "git 2.27.0 pl526h5e3e691_0",
   "libgcc-ng 9.2.0 h24d8f2e_2",
   "perl 5.26.2 h516909a_1006",
   "gettext 0.19.8.1 hc5be6a0_1002",
   "libarchive 3.3.3 h3a8160c_1008",
   "libedit 3.1.20191231 h46ee950_1",
   "libiconv 1.15 h516909a_1006",
   "wheel 0.34.2 py_1",
   "libstdcxx-ng 9.2.0 hdf63c60_2",
   "attrs 19.3.0 py_0",
   "libgomp 9.2.0 h24d8f2e_2",
   "bzip2 1.0.8 h516909a_2",
   "jsonschema 3.2.0 py37hc8dfbb8_1",
   "tk 8.6.10 hed695b0_0",
   "icu 67.1 he1b5a44_0",
   "cffi 1.14.0 py37hd463f26_0",
   "readline 8.0 h46ee950_1",
   "psutil 5.7.0 py37h8f50634_1",
   "_libgcc_mutex 0.1 conda_forge",
   "pycosat 0.6.3 py37h8f50634_1004",
   "python_abi 3.7 1_cp37m",
   "tini 0.18.0 h14c3975_1001",
   "xz 5.2.5 h516909a_1",
   "ruamel_yaml 0.15.80 py37h8f50634_1001",
   "jinja2 2.11.2 pyh9f0ad1d_0",
   "idna 2.10 pyh9f0ad1d_0",
   "soupsieve 2.0.1 py37hc8dfbb8_0",
   "expat 2.2.9 he1b5a44_2",
   "six 1.15.0 pyh9f0ad1d_0",
   "clyent 1.2.2 py_1",
   "pcre 8.44 he1b5a44_0",
   "setuptools 49.1.0 py37hc8dfbb8_0",
   "pysocks 1.7.1 py37hc8dfbb8_1",
   "sqlite 3.32.3 hcee41ef_1",
   "pyopenssl 19.1.0 py_1",
   "nbformat 5.0.7 py_0",
   "certifi 2020.6.20 py37hc8dfbb8_0",
   "libssh2 1.9.0 hab1572f_3",
   "zipp 3.1.0 py_0",
   "ipython_genutils 0.2.0 py_1",
   "pyrsistent 0.16.0 py37h8f50634_0",
   "importlib-metadata 1.7.0 py37hc8dfbb8_0",
   "brotlipy 0.7.0 py37h8f50634_1000",
   "markupsafe 1.1.1 py37h8f50634_1",
   "chardet 3.0.4 py37hc8dfbb8_1006",
   "importlib_metadata 1.7.0 0",
   "ld_impl_linux-64 2.34 h53a641e_5",
   "ncurses 6.1 hf484d3e_1002",
   "_openmp_mutex 4.5 0_gnu",
   "libcurl 7.71.1 hcdd3856_0",
   "ca-certificates 2020.6.20 hecda079_0",
   "pyyaml 5.3.1 py37h8f50634_0",
   "lz4-c 1.9.2 he1b5a44_1",
   "su-exec 0.2 h516909a_1002",
   "libffi 3.2.1 he1b5a44_1007",
   "patchelf 0.11 he1b5a44_0",
   "python 3.7.6 cpython_h8356626_6",
   "conda 4.8.3 py37hc8dfbb8_1",
   "tqdm 4.47.0 pyh9f0ad1d_0",
   "cryptography 2.9.2 py37hb09aad4_0",
   "pycparser 2.20 pyh9f0ad1d_2",
   "glob2 0.7 py_0",
   "zlib 1.2.11 h516909a_1006",
   "jupyter_core 4.6.3 py37hc8dfbb8_1",
   "liblief 0.9.0 hf8a498c_1",
   "py-lief 0.9.0 py37he1b5a44_1",
   "traitlets 4.3.3 py37hc8dfbb8_1",
   "conda-package-handling 1.6.0 py37h8f50634_2",
   "patch 2.7.6 h14c3975_1001",
   "anaconda-client 1.7.2 py_0",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "decorator 4.4.2 py_0",
   "curl 7.71.1 he644dc0_0",
   "requests 2.24.0 pyh9f0ad1d_0",
   "libxml2 2.9.10 h72b56ed_1",
   "python-dateutil 2.8.1 py_0",
   "urllib3 1.25.9 py_0",
   "zstd 1.4.4 h6597ccf_3",
   "ripgrep 12.1.1 h516909a_0",
   "beautifulsoup4 4.9.1 py37hc8dfbb8_0",
   "pytz 2020.1 pyh9f0ad1d_0",
   "krb5 1.17.1 hfafb76e_1",
   "conda-build 3.19.2 py37hc8dfbb8_2",
   "pip 20.1.1 py_1",
   "conda-forge-ci-setup 3.0.14 py37h71091ce_0",
   "conda-env 2.6.0 1",
   "click 7.1.2 pyh9f0ad1d_0"
  ],
  "summary": "Autodoc-style extraction into Sphinx for your JS project",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "condaforge/linux-anvil-comp7",
  "extend_keys": [
   "ignore_build_only_deps",
   "pin_run_as_build",
   "extend_keys",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.6.* *_cpython",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "files": [
  "site-packages/sphinx_js-3.0.dist-info/INSTALLER",
  "site-packages/sphinx_js-3.0.dist-info/LICENSE",
  "site-packages/sphinx_js-3.0.dist-info/METADATA",
  "site-packages/sphinx_js-3.0.dist-info/RECORD",
  "site-packages/sphinx_js-3.0.dist-info/WHEEL",
  "site-packages/sphinx_js-3.0.dist-info/direct_url.json",
  "site-packages/sphinx_js/__init__.py",
  "site-packages/sphinx_js/directives.py",
  "site-packages/sphinx_js/doclets.py",
  "site-packages/sphinx_js/parsers.py",
  "site-packages/sphinx_js/renderers.py",
  "site-packages/sphinx_js/suffix_tree.py",
  "site-packages/sphinx_js/templates/attribute.rst",
  "site-packages/sphinx_js/templates/class.rst",
  "site-packages/sphinx_js/templates/common.rst",
  "site-packages/sphinx_js/templates/function.rst",
  "site-packages/sphinx_js/typedoc.py",
  "site-packages/tests/__init__.py",
  "site-packages/tests/test_doclets.py",
  "site-packages/tests/test_parsers.py",
  "site-packages/tests/test_suffix_tree.py",
  "site-packages/tests/test_typedoc.py",
  "site-packages/tests/testing.py"
 ],
 "index": {
  "arch": null,
  "build": "pyh9f0ad1d_0",
  "build_number": 0,
  "depends": [
   "docutils",
   "jinja2 >=2.0,<3.0",
   "nodejs",
   "parsimonious",
   "python >=3.6",
   "six >=1.9.0,<2.0",
   "sphinx >=3.0.0"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "sphinx-js",
  "noarch": "python",
  "platform": null,
  "subdir": "noarch",
  "timestamp": 1594814924604,
  "version": "3.0"
 },
 "metadata_version": 1,
 "name": "sphinx-js",
 "raw_recipe": "{% set name = \"sphinx-js\" %}\n{% set version = \"3.0\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  - folder: dist\n    url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n    sha256: 1523398c87feb2e68f030109f1600ba580ae012a865b626eebd435bb86a7cab9\n  - folder: src\n    url: https://github.com/mozilla/{{ name }}/archive/{{ version }}.tar.gz\n    sha256: cebb0c2478f07b08e4f1ab6457ae4256ddfbac1a3df23c985c9ef5a392fe88c4\n\nbuild:\n  noarch: python\n  number: 0\n  script: cd dist && {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - docutils\n    - jinja2 >=2.0,<3.0\n    # TODO: should be pinned\n    # - parsimonious >=0.7.0,<0.8.0\n    - parsimonious\n    - python >=3.6\n    - six >=1.9.0,<2.0\n    - sphinx >=3.0.0\n    - nodejs\n\ntest:\n  requires:\n    - pytest\n    - python >=3.6\n    - recommonmark\n    - sphinx\n  source_files:\n    - src/tests\n  imports:\n    - sphinx_js\n\nabout:\n  home: https://github.com/mozilla/sphinx-js\n  license: MIT\n  license_family: MIT\n  license_file: src/LICENSE\n  summary: Autodoc-style extraction into Sphinx for your JS project\n\n  description: |\n    When you write a JavaScript library, how do you explain it to people? If\n    it's a small project in a domain your users are familiar with, JSDoc's\n    alphabetical list of routines might suffice. But in a larger project, it is\n    useful to intersperse prose with your API docs without having to copy and\n    paste things.\n\n    sphinx-js lets you use the industry-leading Sphinx documentation tool with\n    JS projects. It provides a handful of directives, patterned after the\n    Python-centric autodoc ones, for pulling JSDoc-formatted documentation into\n    reStructuredText pages. And, because you can keep using JSDoc in your code,\n    you remain compatible with the rest of your JS tooling, like Google's\n    Closure Compiler.\n\nextra:\n  recipe-maintainers:\n    - bollwyvl\n",
 "rendered_recipe": {
  "about": {
   "description": "When you write a JavaScript library, how do you explain it to people? If\nit's a small project in a domain your users are familiar with, JSDoc's\nalphabetical list of routines might suffice. But in a larger project, it is\nuseful to intersperse prose with your API docs without having to copy and\npaste things.\n\nsphinx-js lets you use the industry-leading Sphinx documentation tool with\nJS projects. It provides a handful of directives, patterned after the\nPython-centric autodoc ones, for pulling JSDoc-formatted documentation into\nreStructuredText pages. And, because you can keep using JSDoc in your code,\nyou remain compatible with the rest of your JS tooling, like Google's\nClosure Compiler.\n",
   "home": "https://github.com/mozilla/sphinx-js",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "src/LICENSE",
   "summary": "Autodoc-style extraction into Sphinx for your JS project"
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "cd dist && /home/conda/feedstock_root/build_artifacts/sphinx-js_1594814812743/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p/bin/python -m pip install . -vv",
   "string": "pyh9f0ad1d_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "bollwyvl"
   ]
  },
  "package": {
   "name": "sphinx-js",
   "version": "3.0"
  },
  "requirements": {
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 0_gnu",
    "ca-certificates 2020.6.20 hecda079_0",
    "certifi 2020.6.20 py36h9f0ad1d_0",
    "ld_impl_linux-64 2.34 h53a641e_7",
    "libffi 3.2.1 he1b5a44_1007",
    "libgcc-ng 9.2.0 h24d8f2e_2",
    "libgomp 9.2.0 h24d8f2e_2",
    "libstdcxx-ng 9.2.0 hdf63c60_2",
    "ncurses 6.1 hf484d3e_1002",
    "openssl 1.1.1g h516909a_0",
    "pip 20.1.1 py_1",
    "python 3.6.10 h8356626_1011_cpython",
    "python_abi 3.6 1_cp36m",
    "readline 8.0 h46ee950_1",
    "setuptools 49.2.0 py36h9f0ad1d_0",
    "sqlite 3.32.3 hcee41ef_1",
    "tk 8.6.10 hed695b0_0",
    "wheel 0.34.2 py_1",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.11 h516909a_1006"
   ],
   "run": [
    "docutils",
    "jinja2 >=2.0,<3.0",
    "nodejs",
    "parsimonious",
    "python >=3.6",
    "six >=1.9.0,<2.0",
    "sphinx >=3.0.0"
   ]
  },
  "source": [
   {
    "folder": "dist",
    "sha256": "1523398c87feb2e68f030109f1600ba580ae012a865b626eebd435bb86a7cab9",
    "url": "https://pypi.io/packages/source/s/sphinx-js/sphinx-js-3.0.tar.gz"
   },
   {
    "folder": "src",
    "sha256": "cebb0c2478f07b08e4f1ab6457ae4256ddfbac1a3df23c985c9ef5a392fe88c4",
    "url": "https://github.com/mozilla/sphinx-js/archive/3.0.tar.gz"
   }
  ],
  "test": {
   "imports": [
    "sphinx_js"
   ],
   "requires": [
    "pytest",
    "python >=3.6",
    "recommonmark",
    "sphinx"
   ],
   "source_files": [
    "src/tests"
   ]
  }
 },
 "version": "3.0"
}