{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.18.10",
  "conda_private": false,
  "conda_version": "4.7.12",
  "description": "builtins - low-level target-specific hooks required by code generation and other\n  runtime components\nsanitizer runtimes - AddressSanitizer, ThreadSanitizer, UndefinedBehaviorSanitizer,\n  MemorySanitizer, LeakSanitizer, DataFlowSanitizer\nprofile - library which is used to collect coverage information\nBlocksRuntime - target-independent implementation of Apple \"Blocks\" runtime\n  interfaces\n",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "SylvainCorlay",
    "inducer",
    "jakirkham",
    "isuruf"
   ]
  },
  "home": "http://llvm.org/",
  "identifiers": [],
  "keywords": [],
  "license": "NCSA",
  "license_file": "LICENSE.TXT",
  "root_pkgs": [
   "python-libarchive-c 2.9 py37_0",
   "libxml2 2.9.9 hee79883_5",
   "pycparser 2.19 py37_1",
   "tini 0.18.0 h14c3975_1001",
   "_libgcc_mutex 0.1 main",
   "xz 5.2.4 h14c3975_1001",
   "decorator 4.4.0 py_0",
   "ripgrep 11.0.2 h516909a_3",
   "zipp 0.6.0 py_0",
   "markupsafe 1.1.1 py37h14c3975_0",
   "urllib3 1.25.6 py37_0",
   "conda 4.7.12 py37_0",
   "pytz 2019.3 py_0",
   "soupsieve 1.9.4 py37_0",
   "gosu 1.10 h81701ea_1001",
   "importlib_metadata 0.23 py37_0",
   "glob2 0.7 py_0",
   "zlib 1.2.11 h516909a_1006",
   "cryptography 2.7 py37h72c5cf5_0",
   "patch 2.7.6 h14c3975_1001",
   "git 2.23.0 pl526hce37bd2_2",
   "clyent 1.2.2 py_1",
   "nbformat 4.4.0 py_1",
   "sqlite 3.30.1 hcee41ef_0",
   "ncurses 6.1 hf484d3e_1002",
   "tqdm 4.36.1 py_0",
   "traitlets 4.3.3 py37_0",
   "liblief 0.9.0 hf8a498c_1",
   "libedit 3.1.20170329 hf8c457e_1001",
   "pyopenssl 19.0.0 py37_0",
   "jinja2 2.10.3 py_0",
   "openssl 1.1.1c h516909a_0",
   "certifi 2019.9.11 py37_0",
   "filelock 3.0.10 py_0",
   "zstd 1.4.3 h3b9ef0a_0",
   "lz4-c 1.8.3 he1b5a44_1001",
   "conda-package-handling 1.6.0 py37h516909a_0",
   "chardet 3.0.4 py37_1003",
   "jsonschema 3.1.1 py37_0",
   "ipython_genutils 0.2.0 py_1",
   "libcurl 7.65.3 hda55be3_0",
   "psutil 5.6.3 py37h516909a_0",
   "asn1crypto 1.2.0 py37_0",
   "krb5 1.16.3 h05b26f9_1001",
   "beautifulsoup4 4.8.1 py37_0",
   "icu 64.2 he1b5a44_1",
   "pysocks 1.7.1 py37_0",
   "cffi 1.13.1 py37h8022711_0",
   "ruamel_yaml 0.15.71 py37h14c3975_1000",
   "attrs 19.3.0 py_0",
   "conda-build 3.18.10 py37_0",
   "yaml 0.1.7 h14c3975_1001",
   "setuptools 41.4.0 py37_0",
   "requests 2.22.0 py37_1",
   "libiconv 1.15 h516909a_1005",
   "jupyter_core 4.5.0 py_0",
   "patchelf 0.10 he1b5a44_0",
   "libgcc-ng 9.1.0 hdf63c60_0",
   "pkginfo 1.5.0.1 py_0",
   "libstdcxx-ng 9.1.0 hdf63c60_0",
   "gettext 0.19.8.1 hc5be6a0_1002",
   "idna 2.8 py37_1000",
   "perl 5.26.2 h516909a_1006",
   "py-lief 0.9.0 py37he1b5a44_1",
   "ca-certificates 2019.9.11 hecc5488_0",
   "expat 2.2.5 he1b5a44_1004",
   "pycosat 0.6.3 py37h14c3975_1001",
   "tk 8.6.9 hed695b0_1003",
   "readline 8.0 hf8c457e_0",
   "bzip2 1.0.8 h516909a_1",
   "six 1.12.0 py37_1000",
   "libssh2 1.8.2 h22169c7_2",
   "anaconda-client 1.7.2 py_0",
   "lzo 2.10 h14c3975_1000",
   "pcre 8.43 he1b5a44_0",
   "wheel 0.33.6 py37_0",
   "pyyaml 5.1.2 py37h516909a_0",
   "python 3.7.3 h33d41f4_1",
   "pyrsistent 0.15.4 py37h516909a_0",
   "libffi 3.2.1 he1b5a44_1006",
   "pip 19.3.1 py37_0",
   "more-itertools 7.2.0 py_0",
   "libarchive 3.4.0 hb0c0d93_1",
   "python-dateutil 2.8.0 py_0",
   "curl 7.65.3 hf8cf82a_0",
   "click 7.0 py_0",
   "conda-forge-ci-setup 2.5.3 py37_0",
   "conda-env 2.6.0 1"
  ],
  "summary": "compiler-rt runtime libraries",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "7",
  "docker_image": "condaforge/linux-anvil-comp7",
  "extend_keys": [
   "ignore_build_only_deps",
   "pin_run_as_build",
   "extend_keys",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7",
  "r_base": "3.5",
  "target_platform": "linux-64",
  "vc": "14"
 },
 "files": [
  "lib/clang/9.0.0/include/sanitizer/allocator_interface.h",
  "lib/clang/9.0.0/include/sanitizer/asan_interface.h",
  "lib/clang/9.0.0/include/sanitizer/common_interface_defs.h",
  "lib/clang/9.0.0/include/sanitizer/coverage_interface.h",
  "lib/clang/9.0.0/include/sanitizer/dfsan_interface.h",
  "lib/clang/9.0.0/include/sanitizer/hwasan_interface.h",
  "lib/clang/9.0.0/include/sanitizer/linux_syscall_hooks.h",
  "lib/clang/9.0.0/include/sanitizer/lsan_interface.h",
  "lib/clang/9.0.0/include/sanitizer/msan_interface.h",
  "lib/clang/9.0.0/include/sanitizer/netbsd_syscall_hooks.h",
  "lib/clang/9.0.0/include/sanitizer/scudo_interface.h",
  "lib/clang/9.0.0/include/sanitizer/tsan_interface.h",
  "lib/clang/9.0.0/include/sanitizer/tsan_interface_atomic.h",
  "lib/clang/9.0.0/include/xray/xray_interface.h",
  "lib/clang/9.0.0/include/xray/xray_log_interface.h",
  "lib/clang/9.0.0/include/xray/xray_records.h",
  "lib/clang/9.0.0/lib/linux/clang_rt.crtbegin-x86_64.o",
  "lib/clang/9.0.0/lib/linux/clang_rt.crtend-x86_64.o",
  "lib/clang/9.0.0/lib/linux/libclang_rt.asan-preinit-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.asan-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.asan-x86_64.a.syms",
  "lib/clang/9.0.0/lib/linux/libclang_rt.asan-x86_64.so",
  "lib/clang/9.0.0/lib/linux/libclang_rt.asan_cxx-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.asan_cxx-x86_64.a.syms",
  "lib/clang/9.0.0/lib/linux/libclang_rt.builtins-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.cfi-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.cfi_diag-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.dd-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.dfsan-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.dfsan-x86_64.a.syms",
  "lib/clang/9.0.0/lib/linux/libclang_rt.dyndd-x86_64.so",
  "lib/clang/9.0.0/lib/linux/libclang_rt.fuzzer-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.fuzzer_no_main-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.gwp_asan-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.hwasan-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.hwasan-x86_64.a.syms",
  "lib/clang/9.0.0/lib/linux/libclang_rt.hwasan-x86_64.so",
  "lib/clang/9.0.0/lib/linux/libclang_rt.hwasan_cxx-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.hwasan_cxx-x86_64.a.syms",
  "lib/clang/9.0.0/lib/linux/libclang_rt.lsan-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.msan-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.msan-x86_64.a.syms",
  "lib/clang/9.0.0/lib/linux/libclang_rt.msan_cxx-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.msan_cxx-x86_64.a.syms",
  "lib/clang/9.0.0/lib/linux/libclang_rt.profile-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.safestack-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.scudo-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.scudo-x86_64.so",
  "lib/clang/9.0.0/lib/linux/libclang_rt.scudo_cxx-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.scudo_cxx_minimal-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.scudo_minimal-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.scudo_minimal-x86_64.so",
  "lib/clang/9.0.0/lib/linux/libclang_rt.scudo_standalone-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.scudo_standalone_cxx-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.stats-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.stats_client-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.tsan-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.tsan-x86_64.a.syms",
  "lib/clang/9.0.0/lib/linux/libclang_rt.tsan_cxx-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.tsan_cxx-x86_64.a.syms",
  "lib/clang/9.0.0/lib/linux/libclang_rt.ubsan_minimal-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.ubsan_minimal-x86_64.a.syms",
  "lib/clang/9.0.0/lib/linux/libclang_rt.ubsan_minimal-x86_64.so",
  "lib/clang/9.0.0/lib/linux/libclang_rt.ubsan_standalone-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.ubsan_standalone-x86_64.a.syms",
  "lib/clang/9.0.0/lib/linux/libclang_rt.ubsan_standalone-x86_64.so",
  "lib/clang/9.0.0/lib/linux/libclang_rt.ubsan_standalone_cxx-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.ubsan_standalone_cxx-x86_64.a.syms",
  "lib/clang/9.0.0/lib/linux/libclang_rt.xray-basic-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.xray-fdr-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.xray-profiling-x86_64.a",
  "lib/clang/9.0.0/lib/linux/libclang_rt.xray-x86_64.a"
 ],
 "index": {
  "arch": "x86_64",
  "build": "hc9558a2_1",
  "build_number": 1,
  "depends": [
   "clang 9.0.0.*",
   "clangxx 9.0.0.*",
   "libgcc-ng >=7.3.0",
   "libstdcxx-ng >=7.3.0"
  ],
  "license": "NCSA",
  "name": "compiler-rt",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1572233190442,
  "version": "9.0.0"
 },
 "metadata_version": 1,
 "name": "compiler-rt",
 "raw_recipe": "{% set name = \"compiler-rt\" %}\n{% set version = \"9.0.0\" %}\n{% set build_number = 1 %}\n{% set sha256 = \"56e4cd96dd1d8c346b07b4d6b255f976570c6f2389697347a6c3dcb9e820d10e\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: http://releases.llvm.org/{{ version }}/compiler-rt-{{ version }}.src.tar.xz\n  sha256: {{ sha256 }}\n  patches:\n    - no_codesign.diff\n    - macosx_10_9.patch\n\nbuild:\n  number: {{ build_number }}\n  # https://groups.google.com/forum/#!msg/llvm-dev/cQogF7NZcSw/gOVQDXWmCgAJ\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - cmake >=3.4.3\n    - {{ compiler('cxx') }}\n    - python\n  host:\n    - clangdev {{ version }}\n    - llvmdev {{ version }}\n    - libcxx {{ cxx_compiler_version }}  # [osx]\n  run:\n    - libcxx >={{ cxx_compiler_version }}  # [osx]\n    - clang {{ version }}\n    - clangxx {{ version }}\n\ntest:\n  files:\n    - test.c.in\n  commands:\n  {% set NEW_TARGET=\"10.\" ~ (((MACOSX_DEPLOYMENT_TARGET|default(\"10.13\")).split(\".\")[1])|int + 1) %}\n    - sed \"s/@MACOSX_DEPLOYMENT_TARGET@/{{ NEW_TARGET }}/g\" test.c.in > test.c\n    - clang -mmacosx-version-min={{ MACOSX_DEPLOYMENT_TARGET }} test.c  # [osx]\n    - test -f $PREFIX/lib/clang/{{ version }}/include/sanitizer/asan_interface.h  # [unix]\n\nabout:\n  home: http://llvm.org/\n  license: NCSA\n  license_file: LICENSE.TXT\n  summary: compiler-rt runtime libraries\n  description: |\n    builtins - low-level target-specific hooks required by code generation and other\n      runtime components\n    sanitizer runtimes - AddressSanitizer, ThreadSanitizer, UndefinedBehaviorSanitizer,\n      MemorySanitizer, LeakSanitizer, DataFlowSanitizer\n    profile - library which is used to collect coverage information\n    BlocksRuntime - target-independent implementation of Apple \"Blocks\" runtime\n      interfaces\n\nextra:\n  recipe-maintainers:\n    - SylvainCorlay\n    - inducer\n    - jakirkham\n    - isuruf\n",
 "rendered_recipe": {
  "about": {
   "description": "builtins - low-level target-specific hooks required by code generation and other\n  runtime components\nsanitizer runtimes - AddressSanitizer, ThreadSanitizer, UndefinedBehaviorSanitizer,\n  MemorySanitizer, LeakSanitizer, DataFlowSanitizer\nprofile - library which is used to collect coverage information\nBlocksRuntime - target-independent implementation of Apple \"Blocks\" runtime\n  interfaces\n",
   "home": "http://llvm.org/",
   "license": "NCSA",
   "license_file": "LICENSE.TXT",
   "summary": "compiler-rt runtime libraries"
  },
  "build": {
   "number": "1",
   "string": "hc9558a2_1"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "SylvainCorlay",
    "inducer",
    "isuruf",
    "jakirkham"
   ]
  },
  "package": {
   "name": "compiler-rt",
   "version": "9.0.0"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 main",
    "binutils_impl_linux-64 2.31.1 h7fc9f1b_2",
    "binutils_linux-64 2.31.1 h6176602_12",
    "bzip2 1.0.8 h516909a_1",
    "ca-certificates 2019.9.11 hecc5488_0",
    "cmake 3.15.4 hf94ab9c_0",
    "curl 7.65.3 hf8cf82a_0",
    "expat 2.2.5 he1b5a44_1004",
    "gcc_impl_linux-64 7.3.0 habb00fd_2",
    "gcc_linux-64 7.3.0 h553295d_12",
    "gxx_impl_linux-64 7.3.0 hdf63c60_2",
    "gxx_linux-64 7.3.0 h553295d_12",
    "krb5 1.16.3 h05b26f9_1001",
    "libcurl 7.65.3 hda55be3_0",
    "libedit 3.1.20170329 hf8c457e_1001",
    "libffi 3.2.1 he1b5a44_1006",
    "libgcc-ng 9.1.0 hdf63c60_0",
    "libssh2 1.8.2 h22169c7_2",
    "libstdcxx-ng 9.1.0 hdf63c60_0",
    "libuv 1.33.1 h516909a_0",
    "ncurses 6.1 hf484d3e_1002",
    "openssl 1.1.1c h516909a_0",
    "python 3.7.3 h33d41f4_1",
    "readline 8.0 hf8c457e_0",
    "rhash 1.3.6 h14c3975_1001",
    "sqlite 3.30.1 hcee41ef_0",
    "tk 8.6.9 hed695b0_1003",
    "xz 5.2.4 h14c3975_1001",
    "zlib 1.2.11 h516909a_1006"
   ],
   "host": [
    "_libgcc_mutex 0.1 main",
    "clang 9.0.0 hc9558a2_1",
    "clang-tools 9.0.0 hc9558a2_1",
    "clangdev 9.0.0 hc9558a2_1",
    "clangxx 9.0.0 1",
    "libclang 9.0.0 hc9558a2_1",
    "libgcc-ng 9.1.0 hdf63c60_0",
    "libllvm9 9.0.0 hc9558a2_2",
    "libstdcxx-ng 9.1.0 hdf63c60_0",
    "llvm-tools 9.0.0 hc9558a2_2",
    "llvmdev 9.0.0 hc9558a2_2"
   ],
   "run": [
    "clang 9.0.0.*",
    "clangxx 9.0.0.*",
    "libgcc-ng >=7.3.0",
    "libstdcxx-ng >=7.3.0"
   ]
  },
  "source": {
   "patches": [
    "macosx_10_9.patch",
    "no_codesign.diff"
   ],
   "sha256": "56e4cd96dd1d8c346b07b4d6b255f976570c6f2389697347a6c3dcb9e820d10e",
   "url": "http://releases.llvm.org/9.0.0/compiler-rt-9.0.0.src.tar.xz"
  },
  "test": {
   "commands": [
    "sed \"s/@MACOSX_DEPLOYMENT_TARGET@/10.14/g\" test.c.in > test.c",
    "test -f $PREFIX/lib/clang/9.0.0/include/sanitizer/asan_interface.h"
   ],
   "files": [
    "test.c.in"
   ]
  }
 },
 "version": "9.0.0"
}