{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.19.2",
  "conda_private": false,
  "conda_version": "4.8.3",
  "description": "SHAP (SHapley Additive exPlanations) is a unified approach to explain the output of any machine learning model. SHAP connects game theory with local explanations, uniting several previous methods and representing the only possible consistent and locally accurate additive feature attribution method based on expectations.\n",
  "dev_url": "https://github.com/slundberg/shap",
  "doc_url": "https://shap.readthedocs.io/en/latest/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "mrandrewandrade",
    "slundberg"
   ]
  },
  "home": "https://github.com/slundberg/shap",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "LICENSE",
  "root_pkgs": [
   "anaconda-client 1.7.2 py_0",
   "attrs 19.3.0 py_0",
   "beautifulsoup4 4.9.0 py36h9f0ad1d_0",
   "bzip2 1.0.8 hfa6e2cd_2",
   "ca-certificates 2020.4.5.1 hecc5488_0",
   "certifi 2020.4.5.1 py36h9f0ad1d_0",
   "cffi 1.14.0 py36ha419a9e_0",
   "chardet 3.0.4 py36h9f0ad1d_1006",
   "click 7.1.1 pyh8c360ce_0",
   "clyent 1.2.2 py_1",
   "conda 4.8.3 py36h9f0ad1d_1",
   "conda-build 3.19.2 py36h9f0ad1d_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 2.7.0 py36h9f0ad1d_0",
   "conda-package-handling 1.6.0 py36h70ac491_2",
   "console_shortcut 0.1.1 3",
   "cryptography 2.8 py36hb32ad35_1",
   "decorator 4.4.2 py_0",
   "filelock 3.0.10 py_0",
   "glob2 0.7 py_0",
   "idna 2.9 py_1",
   "importlib-metadata 1.6.0 py36h9f0ad1d_0",
   "importlib_metadata 1.6.0 0",
   "ipython_genutils 0.2.0 py_1",
   "jinja2 2.11.1 py_0",
   "jsonschema 3.2.0 py36h9f0ad1d_1",
   "jupyter_core 4.6.3 py36h9f0ad1d_1",
   "libarchive 3.3.3 hd0049e4_1007",
   "libiconv 1.15 hfa6e2cd_1006",
   "liblief 0.9.0 ha925a31_3",
   "libxml2 2.9.10 h9ce36c8_0",
   "lz4-c 1.8.3 he025d50_1001",
   "lzo 2.10 hfa6e2cd_1000",
   "m2w64-gcc-libgfortran 5.3.0 6",
   "m2w64-gcc-libs 5.3.0 7",
   "m2w64-gcc-libs-core 5.3.0 7",
   "m2w64-gmp 6.1.0 2",
   "m2w64-libwinpthread-git 5.0.0.4634.697f757 2",
   "markupsafe 1.1.1 py36h68a101e_1",
   "menuinst 1.4.16 py36_0",
   "msys2-conda-epoch 20160418 1",
   "nbformat 5.0.4 py_0",
   "openssl 1.1.1f hfa6e2cd_0",
   "pip 20.0.2 py_2",
   "pkginfo 1.5.0.1 py_0",
   "powershell_shortcut 0.0.1 2",
   "psutil 5.7.0 py36h68a101e_1",
   "py-lief 0.9.0 py36ha925a31_3",
   "pycosat 0.6.3 py36h68a101e_1004",
   "pycparser 2.20 py_0",
   "pyopenssl 19.1.0 py_1",
   "pyrsistent 0.16.0 py36h68a101e_0",
   "pysocks 1.7.1 py36h9f0ad1d_1",
   "python 3.6.10 he025d50_1009_cpython",
   "python-dateutil 2.8.1 py_0",
   "python-libarchive-c 2.9 py36_0",
   "python_abi 3.6 1_cp36m",
   "pytz 2019.3 py_0",
   "pywin32 227 py36hfa6e2cd_0",
   "pyyaml 5.1.2 py36hfa6e2cd_0",
   "requests 2.23.0 pyh8c360ce_2",
   "ripgrep 12.0.1 h301d43c_1",
   "ruamel_yaml 0.15.87 py36he774522_0",
   "setuptools 46.1.3 py36h9f0ad1d_0",
   "six 1.14.0 py_1",
   "soupsieve 1.9.4 py36h9f0ad1d_1",
   "sqlite 3.27.2 he774522_0",
   "tqdm 4.44.1 py_0",
   "traitlets 4.3.3 py36h9f0ad1d_1",
   "urllib3 1.25.7 py36h9f0ad1d_1",
   "vc 14.1 h0510ff6_4",
   "vs2008_express_vc_python_patch 1.0.0 0",
   "vs2015_runtime 14.16.27012 hf0eaf9b_1",
   "wheel 0.34.2 py_1",
   "wincertstore 0.2 py36_1003",
   "win_inet_pton 1.1.0 py36_0",
   "xz 5.2.5 h2fa13f4_0",
   "yaml 0.1.7 hc54c509_2",
   "zipp 3.1.0 py_0",
   "zlib 1.2.11 h2fa13f4_1006",
   "zstd 1.4.4 hd8a0e53_2"
  ],
  "summary": "A unified approach to explain the output of any machine learning model.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "vs2017",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "vs2017",
  "extend_keys": [
   "extend_keys",
   "ignore_version",
   "pin_run_as_build",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.14",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.6.* *_cpython",
  "r_base": "3.4",
  "target_platform": "win-64",
  "vc": "14"
 },
 "files": [
  "Lib/site-packages/shap-0.35.0.dist-info/INSTALLER",
  "Lib/site-packages/shap-0.35.0.dist-info/LICENSE",
  "Lib/site-packages/shap-0.35.0.dist-info/METADATA",
  "Lib/site-packages/shap-0.35.0.dist-info/RECORD",
  "Lib/site-packages/shap-0.35.0.dist-info/WHEEL",
  "Lib/site-packages/shap/__init__.py",
  "Lib/site-packages/shap/_cext.cp36-win_amd64.pyd",
  "Lib/site-packages/shap/benchmark/__init__.py",
  "Lib/site-packages/shap/benchmark/experiments.py",
  "Lib/site-packages/shap/benchmark/measures.py",
  "Lib/site-packages/shap/benchmark/methods.py",
  "Lib/site-packages/shap/benchmark/metrics.py",
  "Lib/site-packages/shap/benchmark/models.py",
  "Lib/site-packages/shap/benchmark/plots.py",
  "Lib/site-packages/shap/common.py",
  "Lib/site-packages/shap/datasets.py",
  "Lib/site-packages/shap/explainers/__init__.py",
  "Lib/site-packages/shap/explainers/additive.py",
  "Lib/site-packages/shap/explainers/bruteforce.py",
  "Lib/site-packages/shap/explainers/deep/__init__.py",
  "Lib/site-packages/shap/explainers/deep/deep_pytorch.py",
  "Lib/site-packages/shap/explainers/deep/deep_tf.py",
  "Lib/site-packages/shap/explainers/explainer.py",
  "Lib/site-packages/shap/explainers/gradient.py",
  "Lib/site-packages/shap/explainers/kernel.py",
  "Lib/site-packages/shap/explainers/linear.py",
  "Lib/site-packages/shap/explainers/mimic.py",
  "Lib/site-packages/shap/explainers/other/__init__.py",
  "Lib/site-packages/shap/explainers/other/coefficent.py",
  "Lib/site-packages/shap/explainers/other/lime.py",
  "Lib/site-packages/shap/explainers/other/maple.py",
  "Lib/site-packages/shap/explainers/other/random.py",
  "Lib/site-packages/shap/explainers/other/treegain.py",
  "Lib/site-packages/shap/explainers/partition.py",
  "Lib/site-packages/shap/explainers/permutation.py",
  "Lib/site-packages/shap/explainers/pytree.py",
  "Lib/site-packages/shap/explainers/sampling.py",
  "Lib/site-packages/shap/explainers/tf_utils.py",
  "Lib/site-packages/shap/explainers/tree.py",
  "Lib/site-packages/shap/plots/__init__.py",
  "Lib/site-packages/shap/plots/bar.py",
  "Lib/site-packages/shap/plots/colorconv.py",
  "Lib/site-packages/shap/plots/colors.py",
  "Lib/site-packages/shap/plots/decision.py",
  "Lib/site-packages/shap/plots/dependence.py",
  "Lib/site-packages/shap/plots/embedding.py",
  "Lib/site-packages/shap/plots/force.py",
  "Lib/site-packages/shap/plots/force_matplotlib.py",
  "Lib/site-packages/shap/plots/image.py",
  "Lib/site-packages/shap/plots/monitoring.py",
  "Lib/site-packages/shap/plots/partial_dependence.py",
  "Lib/site-packages/shap/plots/resources/bundle.js",
  "Lib/site-packages/shap/plots/resources/logoSmallGray.png",
  "Lib/site-packages/shap/plots/summary.py",
  "Lib/site-packages/shap/plots/text.py",
  "Lib/site-packages/shap/plots/waterfall.py",
  "Lib/site-packages/shap/tree_shap.h"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py36hcc50265_0",
  "build_number": 0,
  "depends": [
   "ipython",
   "matplotlib-base",
   "numpy",
   "pandas",
   "python >=3.6,<3.7.0a0",
   "python_abi 3.6.* *_cp36m",
   "scikit-image",
   "scikit-learn",
   "scipy",
   "tqdm",
   "vc >=14.1,<15.0a0",
   "vs2015_runtime >=14.16.27012"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "shap",
  "platform": "win",
  "subdir": "win-64",
  "timestamp": 1586450852993,
  "version": "0.35.0"
 },
 "metadata_version": 1,
 "name": "shap",
 "raw_recipe": "{% set name = \"shap\" %}\n{% set version = \"0.35.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/slundberg/{{ name }}/archive/{{ version }}.tar.gz\n  sha256: 66035a91660a859791fbb538a0700f27bbd8aaebad026a3175c4ec840945232d\n\nbuild:\n  number: 0\n  skip: true  # [py27]\n  script: {{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - make  # [unix]\n  host:\n    - python\n    - pip\n    - setuptools\n    - numpy\n  run:\n    - python\n    - pandas\n    - numpy\n    - scikit-learn\n    - scikit-image\n    - scipy\n    - matplotlib-base\n    - tqdm\n    - ipython\ntest:\n  imports:\n    - shap\n\nabout:\n  home: https://github.com/slundberg/shap\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: A unified approach to explain the output of any machine learning model.\n  description: |\n    SHAP (SHapley Additive exPlanations) is a unified approach to explain the output of any machine learning model. SHAP connects game theory with local explanations, uniting several previous methods and representing the only possible consistent and locally accurate additive feature attribution method based on expectations.\n  doc_url: https://shap.readthedocs.io/en/latest/\n  dev_url: https://github.com/slundberg/shap\n\nextra:\n  recipe-maintainers:\n    - mrandrewandrade\n    - slundberg\n",
 "rendered_recipe": {
  "about": {
   "description": "SHAP (SHapley Additive exPlanations) is a unified approach to explain the output of any machine learning model. SHAP connects game theory with local explanations, uniting several previous methods and representing the only possible consistent and locally accurate additive feature attribution method based on expectations.\n",
   "dev_url": "https://github.com/slundberg/shap",
   "doc_url": "https://shap.readthedocs.io/en/latest/",
   "home": "https://github.com/slundberg/shap",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A unified approach to explain the output of any machine learning model."
  },
  "build": {
   "number": "0",
   "script": "D:\\\\bld\\\\shap_1586450465063\\\\_h_env\\\\python.exe -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
   "string": "py36hcc50265_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "mrandrewandrade",
    "slundberg"
   ]
  },
  "package": {
   "name": "shap",
   "version": "0.35.0"
  },
  "requirements": {
   "build": [
    "vs2017_win-64 19.16.27038 h2e3bad8_1",
    "vswhere 2.7.1 h21ff451_0"
   ],
   "host": [
    "certifi 2020.4.5.1 py36h9f0ad1d_0",
    "intel-openmp 2020.0 166",
    "libblas 3.8.0 15_mkl",
    "libcblas 3.8.0 15_mkl",
    "liblapack 3.8.0 15_mkl",
    "mkl 2020.0 166",
    "numpy 1.14.6 py36hc71023c_1201",
    "pip 20.0.2 py_2",
    "python 3.6.10 he025d50_1009_cpython",
    "python_abi 3.6 1_cp36m",
    "setuptools 46.1.3 py36h9f0ad1d_0",
    "vc 14.1 h869be7e_1",
    "vs2015_runtime 14.16.27012 h30e32a0_1",
    "wheel 0.34.2 py_1",
    "wincertstore 0.2 py36_1003"
   ],
   "run": [
    "ipython",
    "matplotlib-base",
    "numpy",
    "pandas",
    "python >=3.6,<3.7.0a0",
    "python_abi 3.6.* *_cp36m",
    "scikit-image",
    "scikit-learn",
    "scipy",
    "tqdm",
    "vc >=14.1,<15.0a0",
    "vs2015_runtime >=14.16.27012"
   ]
  },
  "source": {
   "sha256": "66035a91660a859791fbb538a0700f27bbd8aaebad026a3175c4ec840945232d",
   "url": "https://github.com/slundberg/shap/archive/0.35.0.tar.gz"
  },
  "test": {
   "imports": [
    "shap"
   ]
  }
 },
 "version": "0.35.0"
}