{
 "about": {
  "channels": [
   "conda-forge",
   "defaults",
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.19.2",
  "conda_private": false,
  "conda_version": "4.8.3",
  "description": "Faunus is a framework for molecular simulations using Metropolis\nMonte Carlo techniques. It is written in C++17 and has experimental\nsupport for python bindings.\n",
  "dev_url": "https://github.com/mlund/faunus",
  "doc_url": "https://faunus.readthedocs.io",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "mlund"
   ]
  },
  "home": "https://github.com/mlund/faunus",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "LICENSE",
  "root_pkgs": [
   "bzip2 1.0.8 h0b31af3_2",
   "tqdm 4.46.0 pyh9f0ad1d_0",
   "zstd 1.4.4 h4b3e974_3",
   "conda-env 2.6.0 1",
   "chardet 3.0.4 py37hc8dfbb8_1006",
   "jq 1.6 h1de35cc_1000",
   "krb5 1.17.1 h1752a42_0",
   "libffi 3.2.1 h4a8c4bd_1007",
   "anaconda-client 1.7.2 py_0",
   "py-lief 0.9.0 py37h0ceac7d_1",
   "readline 8.0 hcfe32e1_0",
   "libcxx 10.0.0 h1af66ff_2",
   "glob2 0.7 py_0",
   "shyaml 0.6.1 py_0",
   "lz4-c 1.9.2 h4a8c4bd_1",
   "icu 67.1 h4a8c4bd_0",
   "ripgrep 12.1.1 h0b31af3_0",
   "jsonschema 3.2.0 py37hc8dfbb8_1",
   "decorator 4.4.2 py_0",
   "curl 7.69.1 h2d98d24_0",
   "pysocks 1.7.1 py37hc8dfbb8_1",
   "cffi 1.14.0 py37h356ff06_0",
   "libxml2 2.9.10 hc06c4ae_1",
   "libiconv 1.15 h0b31af3_1006",
   "soupsieve 2.0.1 py37hc8dfbb8_0",
   "yaml 0.2.4 h0b31af3_0",
   "brotlipy 0.7.0 py37h9bfed18_1000",
   "conda-build 3.19.2 py37hc8dfbb8_2",
   "libssh2 1.9.0 h39bdce6_2",
   "click 7.1.2 pyh9f0ad1d_0",
   "setuptools 46.4.0 py37hc8dfbb8_0",
   "pycparser 2.20 py_0",
   "conda-forge-ci-setup 3.0.14 py37hc8dfbb8_0",
   "tk 8.6.10 hbbe82c9_0",
   "git 2.27.0 pl526hcc376a2_0",
   "beautifulsoup4 4.9.1 py37hc8dfbb8_0",
   "perl 5.26.2 haec8ef5_1006",
   "urllib3 1.25.9 py_0",
   "libedit 3.1.20191231 hed1e85f_0",
   "markupsafe 1.1.1 py37h9bfed18_1",
   "pyopenssl 19.1.0 py_1",
   "pyrsistent 0.16.0 py37h9bfed18_0",
   "zlib 1.2.11 h0b31af3_1006",
   "jupyter_core 4.6.3 py37hc8dfbb8_1",
   "pytz 2020.1 pyh9f0ad1d_0",
   "attrs 19.3.0 py_0",
   "pycosat 0.6.3 py37h9bfed18_1004",
   "libarchive 3.3.3 h02796b4_1008",
   "pip 20.1.1 py_1",
   "python_abi 3.7 1_cp37m",
   "ca-certificates 2020.4.5.1 hecc5488_0",
   "psutil 5.7.0 py37h9bfed18_1",
   "idna 2.9 py_1",
   "pyyaml 5.3.1 py37h9bfed18_0",
   "libcurl 7.69.1 hc0b9707_0",
   "wheel 0.34.2 py_1",
   "jinja2 2.11.2 pyh9f0ad1d_0",
   "openssl 1.1.1g h0b31af3_0",
   "liblief 0.9.0 h3e78482_1",
   "clyent 1.2.2 py_1",
   "nbformat 5.0.6 py_0",
   "pcre 8.44 h4a8c4bd_0",
   "pkginfo 1.5.0.1 py_0",
   "importlib_metadata 1.6.1 0",
   "ruamel_yaml 0.15.80 py37h9bfed18_1001",
   "requests 2.23.0 pyh8c360ce_2",
   "certifi 2020.4.5.1 py37hc8dfbb8_0",
   "zipp 3.1.0 py_0",
   "ncurses 6.1 h0a44026_1002",
   "cryptography 2.9.2 py37he655712_0",
   "gettext 0.19.8.1 h46ab8bc_1002",
   "sqlite 3.30.1 h93121df_0",
   "conda 4.8.3 py37hc8dfbb8_1",
   "ipython_genutils 0.2.0 py_1",
   "lzo 2.10 h1de35cc_1000",
   "oniguruma 6.9.3 h01d97ff_0",
   "python-libarchive-c 2.9 py37_0",
   "xz 5.2.5 h0b31af3_0",
   "python-dateutil 2.8.1 py_0",
   "six 1.15.0 pyh9f0ad1d_0",
   "traitlets 4.3.3 py37hc8dfbb8_1",
   "conda-package-handling 1.6.0 py37h9bfed18_2",
   "python 3.7.6 h90870a6_5_cpython",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "importlib-metadata 1.6.1 py37hc8dfbb8_0",
   "expat 2.2.9 h4a8c4bd_2"
  ],
  "summary": "A Framework for Molecular Monte Carlo Simulations",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_11.3.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.12",
  "c_compiler": "clang",
  "c_compiler_version": "9",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "cxx_compiler_version": "9",
  "extend_keys": [
   "ignore_build_only_deps",
   "ignore_version",
   "pin_run_as_build",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "macos_min_version": "10.9",
  "mpi": "nompi",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7.* *_cpython",
  "r_base": "3.5",
  "target_platform": "osx-64"
 },
 "files": [
  "bin/faunus",
  "bin/faunus-manual",
  "bin/ob2aam.py",
  "bin/yason.py",
  "lib/python3.7/site-packages/pyfaunus.cpython-37m-darwin.so",
  "share/faunus/LICENSE",
  "share/faunus/examples/README.md",
  "share/faunus/examples/bulk.yml",
  "share/faunus/examples/calciumhydroxide.out.json",
  "share/faunus/examples/calciumhydroxide.state.json",
  "share/faunus/examples/calciumhydroxide.yml",
  "share/faunus/examples/calciumhydroxide_molecular.out.json",
  "share/faunus/examples/calciumhydroxide_molecular.state.json",
  "share/faunus/examples/calciumhydroxide_molecular.yml",
  "share/faunus/examples/chain.out.json",
  "share/faunus/examples/chain.state.json",
  "share/faunus/examples/chain.xyz",
  "share/faunus/examples/chain.yml",
  "share/faunus/examples/cluster.agr",
  "share/faunus/examples/cluster.out.json",
  "share/faunus/examples/cluster.state.json",
  "share/faunus/examples/cluster.yml",
  "share/faunus/examples/doublelayer.agr",
  "share/faunus/examples/doublelayer.mfcorr.dat",
  "share/faunus/examples/doublelayer.out.json",
  "share/faunus/examples/doublelayer.state.json",
  "share/faunus/examples/doublelayer.yml",
  "share/faunus/examples/ewald.yml",
  "share/faunus/examples/gouychapman.out.json",
  "share/faunus/examples/gouychapman.state.json",
  "share/faunus/examples/gouychapman.yml",
  "share/faunus/examples/isochoric.xyz",
  "share/faunus/examples/isochoric.yml",
  "share/faunus/examples/lipid.xyz",
  "share/faunus/examples/membrane.out.json",
  "share/faunus/examples/membrane.state.json",
  "share/faunus/examples/membrane.yml",
  "share/faunus/examples/minimal.out.json",
  "share/faunus/examples/minimal.state.json",
  "share/faunus/examples/minimal.yml",
  "share/faunus/examples/multipole.ipynb",
  "share/faunus/examples/multipole.state.ubj",
  "share/faunus/examples/multipole.yml",
  "share/faunus/examples/penalty.ipynb",
  "share/faunus/examples/penalty.yml",
  "share/faunus/examples/polymers.out.json",
  "share/faunus/examples/polymers.pdf",
  "share/faunus/examples/polymers.readme",
  "share/faunus/examples/polymers.state.json",
  "share/faunus/examples/polymers.yml",
  "share/faunus/examples/pythontest.py",
  "share/faunus/examples/seawater.yml",
  "share/faunus/examples/speciation.out.json",
  "share/faunus/examples/speciation.state.json",
  "share/faunus/examples/speciation.yml",
  "share/faunus/examples/speciation_group.out.json",
  "share/faunus/examples/speciation_group.state.json",
  "share/faunus/examples/speciation_group.yml",
  "share/faunus/examples/speciation_swapconf.out.json",
  "share/faunus/examples/speciation_swapconf.state.json",
  "share/faunus/examples/speciation_swapconf.yml",
  "share/faunus/examples/stockmayer.out.json",
  "share/faunus/examples/stockmayer.state.json",
  "share/faunus/examples/stockmayer.yml",
  "share/faunus/examples/swapconf.conformations.pqr",
  "share/faunus/examples/swapconf.out.json",
  "share/faunus/examples/swapconf.state.json",
  "share/faunus/examples/swapconf.weights.dat",
  "share/faunus/examples/swapconf.yml",
  "share/faunus/examples/titration.out.json",
  "share/faunus/examples/titration.state.json",
  "share/faunus/examples/titration.yml",
  "share/faunus/examples/virial.ipynb",
  "share/faunus/examples/virial.yml",
  "share/faunus/examples/water.xyz",
  "share/faunus/manual.html",
  "share/faunus/schema.yml",
  "share/faunus/tips.json"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py37h6eb8642_0",
  "build_number": 0,
  "constrains": [
   "__osx >=10.12"
  ],
  "depends": [
   "jinja2",
   "jsonschema >=3",
   "libcxx >=9.0.1",
   "pygments >=2.2",
   "python >=3.7,<3.8.0a0",
   "python_abi 3.7.* *_cp37m",
   "ruamel_yaml >=0.15"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "faunus",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1591474930053,
  "version": "2.4.0"
 },
 "metadata_version": 1,
 "name": "faunus",
 "raw_recipe": "{% set name = \"faunus\" %}\n{% set version = \"2.4.0\" %}\n{% set sha256 = \"14b5628a6a05857a809d9ef56b97d0c67db9923e26683a69e65384fa7eaaa07a\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ version }}.tar.gz\n  url: https://github.com/mlund/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n      - azurefix.patch\n\nbuild:\n  number: 0\n  skip: True  # [win or py<36]\n  script:\n    - unset _CONDA_PYTHON_SYSCONFIGDATA_NAME  # [linux]\n    - cmake -DVERSION_STRING=v{{ version }} -DCMAKE_INSTALL_PREFIX:PATH=$PREFIX  # [mpi == 'nompi']\n    - cmake -DENABLE_MPI=on -DVERSION_STRING=v{{ version }} -DCMAKE_INSTALL_PREFIX:PATH=$PREFIX  # [mpi != 'nompi']\n    - make faunus pyfaunus manual_html\n    - make install\n\nrequirements:\n  run_constrained:\n    - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default(\"10.9\") }}  # [osx]\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake >=3.11.4\n  host:\n    - {{ mpi }}  # [mpi != 'nompi']\n    - python\n    - pandoc 2.2.1\n    - pypandoc 1.4\n    - beautifulsoup4 4.8.*\n    - ruamel_yaml 0.15.*\n    - jinja2\n    - sdl2\n  run:\n    - {{ mpi }}  # [mpi != 'nompi']\n    - python\n    - ruamel_yaml >=0.15\n    - pygments >=2.2\n    - jinja2\n    - jsonschema >=3\n\ntest:\n  commands:\n    - test -x $PREFIX/bin/faunus\n    - $PREFIX/bin/faunus --version\n  imports:\n    - pyfaunus\n\nabout:\n  home: https://github.com/mlund/faunus\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'A Framework for Molecular Monte Carlo Simulations'\n  description: |\n      Faunus is a framework for molecular simulations using Metropolis\n      Monte Carlo techniques. It is written in C++17 and has experimental\n      support for python bindings.\n  doc_url: https://faunus.readthedocs.io\n  dev_url: https://github.com/mlund/faunus\n\nextra:\n  recipe-maintainers:\n    - mlund\n",
 "rendered_recipe": {
  "about": {
   "description": "Faunus is a framework for molecular simulations using Metropolis\nMonte Carlo techniques. It is written in C++17 and has experimental\nsupport for python bindings.\n",
   "dev_url": "https://github.com/mlund/faunus",
   "doc_url": "https://faunus.readthedocs.io",
   "home": "https://github.com/mlund/faunus",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A Framework for Molecular Monte Carlo Simulations"
  },
  "build": {
   "number": "0",
   "script": [
    "cmake -DVERSION_STRING=v2.4.0 -DCMAKE_INSTALL_PREFIX:PATH=$PREFIX",
    "make faunus pyfaunus manual_html",
    "make install"
   ],
   "string": "py37h6eb8642_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "mlund"
   ]
  },
  "package": {
   "name": "faunus",
   "version": "2.4.0"
  },
  "requirements": {
   "build": [
    "bzip2 1.0.8 h0b31af3_2",
    "ca-certificates 2020.4.5.1 hecc5488_0",
    "cctools 927.0.2 h5ba7a2e_4",
    "clang 9.0.1 default_hf57f61e_0",
    "clang-tools 9.0.1 default_hf57f61e_0",
    "clang_osx-64 9.0.1 h05bbb7f_2",
    "clangxx 9.0.1 default_hf57f61e_0",
    "clangxx_osx-64 9.0.1 h05bbb7f_2",
    "cmake 3.17.0 hd28f656_0",
    "compiler-rt 9.0.1 h6a512c6_3",
    "compiler-rt_osx-64 9.0.1 h99342c6_3",
    "expat 2.2.9 h4a8c4bd_2",
    "krb5 1.17.1 h1752a42_0",
    "ld64 450.3 h3c32e8a_4",
    "libcurl 7.69.1 hc0b9707_0",
    "libcxx 10.0.0 h1af66ff_2",
    "libedit 3.1.20191231 hed1e85f_0",
    "libllvm9 9.0.1 h7475705_1",
    "libssh2 1.9.0 h39bdce6_2",
    "libuv 1.38.0 h0b31af3_0",
    "llvm-tools 9.0.1 h1341992_1",
    "llvmdev 9.0.1 h7475705_1",
    "ncurses 6.1 h0a44026_1002",
    "openssl 1.1.1g h0b31af3_0",
    "rhash 1.3.6 h1de35cc_1001",
    "tapi 1000.10.8 ha1b3eb9_4",
    "tk 8.6.10 hbbe82c9_0",
    "xz 5.2.5 h0b31af3_0",
    "zlib 1.2.11 h0b31af3_1006"
   ],
   "host": [
    "beautifulsoup4 4.8.2 py37hc8dfbb8_1",
    "ca-certificates 2020.4.5.1 hecc5488_0",
    "certifi 2020.4.5.1 py37hc8dfbb8_0",
    "jinja2 2.11.2 pyh9f0ad1d_0",
    "libcxx 10.0.0 h1af66ff_2",
    "libffi 3.2.1 h4a8c4bd_1007",
    "markupsafe 1.1.1 py37h9bfed18_1",
    "ncurses 6.1 h0a44026_1002",
    "openssl 1.1.1g h0b31af3_0",
    "pandoc 2.2.1 hde52d81_0",
    "pypandoc 1.4 py_1",
    "python 3.7.6 h90870a6_5_cpython",
    "python_abi 3.7 1_cp37m",
    "readline 8.0 hcfe32e1_0",
    "ruamel_yaml 0.15.80 py37h9bfed18_1001",
    "sdl2 2.0.10 h6de7cb9_0",
    "setuptools 47.1.1 py37hc8dfbb8_0",
    "soupsieve 2.0.1 py37hc8dfbb8_0",
    "sqlite 3.30.1 h93121df_0",
    "tk 8.6.10 hbbe82c9_0",
    "xz 5.2.5 h0b31af3_0",
    "yaml 0.2.5 h0b31af3_0",
    "zlib 1.2.11 h0b31af3_1006"
   ],
   "run": [
    "jinja2",
    "jsonschema >=3",
    "libcxx >=9.0.1",
    "pygments >=2.2",
    "python >=3.7,<3.8.0a0",
    "python_abi 3.7.* *_cp37m",
    "ruamel_yaml >=0.15"
   ],
   "run_constrained": [
    "__osx >=10.12"
   ]
  },
  "source": {
   "fn": "2.4.0.tar.gz",
   "patches": [
    "azurefix.patch"
   ],
   "sha256": "14b5628a6a05857a809d9ef56b97d0c67db9923e26683a69e65384fa7eaaa07a",
   "url": "https://github.com/mlund/faunus/archive/v2.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "test -x $PREFIX/bin/faunus",
    "$PREFIX/bin/faunus --version"
   ],
   "imports": [
    "pyfaunus"
   ]
  }
 },
 "version": "2.4.0"
}