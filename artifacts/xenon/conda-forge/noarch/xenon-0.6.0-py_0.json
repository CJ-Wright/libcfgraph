{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.18.9",
  "conda_private": false,
  "conda_version": "4.7.12",
  "description": "Xenon is a monitoring tool based on Radon. It monitors your code\u2019s complexity.\nIdeally, Xenon is run every time you commit code. Through command line options,\nyou can set various thresholds for the complexity of your code. It will fail\n(i.e. it will exit with a non-zero exit code) when any of these requirements is\nnot met.\n",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "IgorTG"
   ]
  },
  "home": "https://github.com/rubik/xenon",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "/home/conda/recipe_root/LICENSE",
  "root_pkgs": [
   "libxml2 2.9.9 hee79883_5",
   "pycparser 2.19 py37_1",
   "tini 0.18.0 h14c3975_1001",
   "cffi 1.12.3 py37h8022711_0",
   "_libgcc_mutex 0.1 main",
   "xz 5.2.4 h14c3975_1001",
   "decorator 4.4.0 py_0",
   "ripgrep 11.0.2 h516909a_3",
   "markupsafe 1.1.1 py37h14c3975_0",
   "urllib3 1.25.6 py37_0",
   "conda 4.7.12 py37_0",
   "pytz 2019.3 py_0",
   "soupsieve 1.9.4 py37_0",
   "conda-build 3.18.9 py37_5",
   "gosu 1.10 h81701ea_1001",
   "glob2 0.7 py_0",
   "zlib 1.2.11 h516909a_1006",
   "cryptography 2.7 py37h72c5cf5_0",
   "patch 2.7.6 h14c3975_1001",
   "git 2.23.0 pl526hce37bd2_2",
   "clyent 1.2.2 py_1",
   "nbformat 4.4.0 py_1",
   "sqlite 3.30.0 hcee41ef_0",
   "python-libarchive-c 2.8 py37_1004",
   "ncurses 6.1 hf484d3e_1002",
   "expat 2.2.5 he1b5a44_1003",
   "zstd 1.4.0 h3b9ef0a_0",
   "tqdm 4.36.1 py_0",
   "libarchive 3.3.3 hb44662c_1005",
   "traitlets 4.3.3 py37_0",
   "liblief 0.9.0 hf8a498c_1",
   "libedit 3.1.20170329 hf8c457e_1001",
   "attrs 19.2.0 py_0",
   "pyopenssl 19.0.0 py37_0",
   "jinja2 2.10.3 py_0",
   "openssl 1.1.1c h516909a_0",
   "certifi 2019.9.11 py37_0",
   "filelock 3.0.10 py_0",
   "lz4-c 1.8.3 he1b5a44_1001",
   "conda-package-handling 1.6.0 py37h516909a_0",
   "chardet 3.0.4 py37_1003",
   "pcre 8.41 hf484d3e_1003",
   "ipython_genutils 0.2.0 py_1",
   "libcurl 7.65.3 hda55be3_0",
   "psutil 5.6.3 py37h516909a_0",
   "krb5 1.16.3 h05b26f9_1001",
   "icu 64.2 he1b5a44_1",
   "pysocks 1.7.1 py37_0",
   "ruamel_yaml 0.15.71 py37h14c3975_1000",
   "yaml 0.1.7 h14c3975_1001",
   "setuptools 41.4.0 py37_0",
   "requests 2.22.0 py37_1",
   "libiconv 1.15 h516909a_1005",
   "jupyter_core 4.5.0 py_0",
   "patchelf 0.10 he1b5a44_0",
   "libgcc-ng 9.1.0 hdf63c60_0",
   "pkginfo 1.5.0.1 py_0",
   "libstdcxx-ng 9.1.0 hdf63c60_0",
   "gettext 0.19.8.1 hc5be6a0_1002",
   "pip 19.2.3 py37_0",
   "idna 2.8 py37_1000",
   "perl 5.26.2 h516909a_1006",
   "py-lief 0.9.0 py37he1b5a44_1",
   "ca-certificates 2019.9.11 hecc5488_0",
   "pycosat 0.6.3 py37h14c3975_1001",
   "beautifulsoup4 4.8.0 py37_0",
   "tk 8.6.9 hed695b0_1003",
   "readline 8.0 hf8c457e_0",
   "bzip2 1.0.8 h516909a_1",
   "six 1.12.0 py37_1000",
   "libssh2 1.8.2 h22169c7_2",
   "asn1crypto 1.0.1 py37_0",
   "anaconda-client 1.7.2 py_0",
   "lzo 2.10 h14c3975_1000",
   "wheel 0.33.6 py37_0",
   "pyyaml 5.1.2 py37h516909a_0",
   "python 3.7.3 h33d41f4_1",
   "pyrsistent 0.15.4 py37h516909a_0",
   "libffi 3.2.1 he1b5a44_1006",
   "python-dateutil 2.8.0 py_0",
   "curl 7.65.3 hf8cf82a_0",
   "jsonschema 3.0.2 py37_0",
   "click 7.0 py_0",
   "conda-forge-ci-setup 2.5.2 py37_0",
   "conda-env 2.6.0 1"
  ],
  "summary": "Monitor code metrics for Python on your CI server",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "condaforge/linux-anvil-comp7",
  "extend_keys": [
   "ignore_version",
   "pin_run_as_build",
   "extend_keys",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "2.7",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "files": [
  "site-packages/xenon-0.6.0-py2.7.egg-info/PKG-INFO",
  "site-packages/xenon/__init__.py",
  "site-packages/xenon/api.py",
  "site-packages/xenon/core.py",
  "site-packages/xenon/repository.py"
 ],
 "index": {
  "arch": null,
  "build": "py_0",
  "build_number": 0,
  "depends": [
   "pyaml >=3.11",
   "python",
   "radon",
   "requests >=2.0"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "xenon",
  "noarch": "python",
  "platform": null,
  "subdir": "noarch",
  "timestamp": 1570611412199,
  "version": "0.6.0"
 },
 "metadata_version": 1,
 "name": "xenon",
 "raw_recipe": "{% set name = \"xenon\" %}\n{% set version = \"0.6.0\" %}\n{% set sha256 = \"64cad081ea191c4e005053b7f044fea73b16c3e2b6bacbd823c8f80c71e8a38f\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  noarch: python\n  number: 0\n  script: python setup.py install --single-version-externally-managed --record record.txt\n  entry_points:\n    - xenon = xenon:main\n\nrequirements:\n  build:\n    - python\n    - setuptools\n  run:\n    - radon\n    - requests >=2.0\n    - pyaml >=3.11\n    - python\n\ntest:\n  imports:\n    - xenon\n  commands:\n    - xenon -v\n\nabout:\n  home: https://github.com/rubik/xenon\n  license: MIT\n  license_family: MIT\n  license_file: '{{ environ[\"RECIPE_DIR\"] }}/LICENSE'\n  summary: 'Monitor code metrics for Python on your CI server'\n\n  description: |\n    Xenon is a monitoring tool based on Radon. It monitors your code\u2019s complexity.\n    Ideally, Xenon is run every time you commit code. Through command line options,\n    you can set various thresholds for the complexity of your code. It will fail \n    (i.e. it will exit with a non-zero exit code) when any of these requirements is\n    not met.\n\nextra:\n  recipe-maintainers:\n    - IgorTG\n",
 "rendered_recipe": {
  "about": {
   "description": "Xenon is a monitoring tool based on Radon. It monitors your code\u2019s complexity.\nIdeally, Xenon is run every time you commit code. Through command line options,\nyou can set various thresholds for the complexity of your code. It will fail\n(i.e. it will exit with a non-zero exit code) when any of these requirements is\nnot met.\n",
   "home": "https://github.com/rubik/xenon",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "/home/conda/recipe_root/LICENSE",
   "summary": "Monitor code metrics for Python on your CI server"
  },
  "build": {
   "entry_points": [
    "xenon = xenon:main"
   ],
   "noarch": "python",
   "number": "0",
   "script": "python setup.py install --single-version-externally-managed --record record.txt",
   "string": "py_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "IgorTG"
   ]
  },
  "package": {
   "name": "xenon",
   "version": "0.6.0"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 main",
    "ca-certificates 2019.9.11 hecc5488_0",
    "certifi 2019.9.11 py27_0",
    "libffi 3.2.1 he1b5a44_1006",
    "libgcc-ng 9.1.0 hdf63c60_0",
    "libstdcxx-ng 9.1.0 hdf63c60_0",
    "ncurses 6.1 hf484d3e_1002",
    "openssl 1.1.1c h516909a_0",
    "python 2.7.15 h5a48372_1009",
    "readline 8.0 hf8c457e_0",
    "setuptools 41.4.0 py27_0",
    "sqlite 3.30.0 hcee41ef_0",
    "tk 8.6.9 hed695b0_1003",
    "zlib 1.2.11 h516909a_1006"
   ],
   "run": [
    "pyaml >=3.11",
    "python",
    "radon",
    "requests >=2.0"
   ]
  },
  "source": {
   "fn": "xenon-0.6.0.tar.gz",
   "sha256": "64cad081ea191c4e005053b7f044fea73b16c3e2b6bacbd823c8f80c71e8a38f",
   "url": "https://pypi.io/packages/source/x/xenon/xenon-0.6.0.tar.gz"
  },
  "test": {
   "commands": [
    "xenon -v"
   ],
   "imports": [
    "xenon"
   ]
  }
 },
 "version": "0.6.0"
}