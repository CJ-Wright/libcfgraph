{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.18.12",
  "conda_private": false,
  "conda_version": "4.8.2",
  "description": "pyFAI is an azimuthal integration library that tries to be fast (as fast\nas C and even more using OpenCL and GPU). It is based on histogramming of\nthe 2theta/Q positions of each (center of) pixel weighted by the intensity\nof each pixel, but parallel version uses a SparseMatrix-DenseVector\nmultiplication. Neighboring output bins get also a contribution of pixels\nnext to the border thanks to pixel splitting. Finally pyFAI provides also\ntools to calibrate the experimental setup using Debye-Scherrer rings of a\nreference compound.\n",
  "dev_url": "https://github.com/silx-kit/pyFAI/",
  "doc_url": "http://www.silx.org/doc/pyFAI/latest/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "parent_recipe": {
    "name": "pyfai-base",
    "path": "/home/conda/recipe_root",
    "version": "0.19.0"
   },
   "recipe-maintainers": [
    "CJ-Wright",
    "tacaswell",
    "chiahaoliu",
    "tschoonj",
    "kif",
    "t20100"
   ]
  },
  "home": "https://github.com/silx-kit/pyFAI/",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "copyright",
  "root_pkgs": [
   "python-dateutil 2.8.1 py_0",
   "attrs 19.3.0 py_0",
   "liblief 0.9.0 hf8a498c_1",
   "ruamel_yaml 0.15.80 py37h516909a_1000",
   "requests 2.23.0 py37_0",
   "clyent 1.2.2 py_1",
   "libffi 3.2.1 he1b5a44_1006",
   "py-lief 0.9.0 py37he1b5a44_1",
   "certifi 2019.11.28 py37_0",
   "wheel 0.34.2 py_1",
   "perl 5.26.2 h516909a_1006",
   "jsonschema 3.2.0 py37_0",
   "libiconv 1.15 h516909a_1005",
   "ipython_genutils 0.2.0 py_1",
   "zipp 3.1.0 py_0",
   "glob2 0.7 py_0",
   "psutil 5.7.0 py37h516909a_0",
   "tqdm 4.43.0 py_0",
   "pytz 2019.3 py_0",
   "libstdcxx-ng 9.2.0 hdf63c60_2",
   "idna 2.9 py_1",
   "tini 0.18.0 h14c3975_1001",
   "gosu 1.10 h81701ea_1001",
   "libgomp 9.2.0 h24d8f2e_2",
   "python 3.7.6 h357f687_2",
   "jinja2 2.11.1 py_0",
   "icu 64.2 he1b5a44_1",
   "importlib_metadata 1.5.0 py37_0",
   "chardet 3.0.4 py37_1003",
   "curl 7.68.0 hf8cf82a_0",
   "patch 2.7.6 h14c3975_1001",
   "pyrsistent 0.15.7 py37h516909a_0",
   "lz4-c 1.8.3 he1b5a44_1001",
   "pysocks 1.7.1 py37_0",
   "conda-package-handling 1.6.0 py37h516909a_1",
   "cffi 1.13.2 py37h8022711_0",
   "jupyter_core 4.6.3 py37_0",
   "libcurl 7.68.0 hda55be3_0",
   "libedit 3.1.20170329 hf8c457e_1001",
   "gettext 0.19.8.1 hc5be6a0_1002",
   "anaconda-client 1.7.2 py_0",
   "nbformat 5.0.4 py_0",
   "libxml2 2.9.10 hee79883_0",
   "ld_impl_linux-64 2.33.1 h53a641e_8",
   "asn1crypto 1.3.0 py37_0",
   "pkginfo 1.5.0.1 py_0",
   "readline 8.0 hf8c457e_0",
   "krb5 1.16.4 h2fd8d38_0",
   "pcre 8.44 he1b5a44_0",
   "yaml 0.2.2 h516909a_1",
   "libgcc-ng 9.2.0 h24d8f2e_2",
   "zlib 1.2.11 h516909a_1006",
   "cryptography 2.8 py37h72c5cf5_1",
   "pycparser 2.19 py_2",
   "sqlite 3.30.1 hcee41ef_0",
   "patchelf 0.10 he1b5a44_0",
   "soupsieve 1.9.4 py37_0",
   "openssl 1.1.1d h516909a_0",
   "_openmp_mutex 4.5 0_gnu",
   "expat 2.2.9 he1b5a44_2",
   "urllib3 1.25.7 py37_0",
   "git 2.25.0 pl526hce37bd2_0",
   "libarchive 3.3.3 hc47fbbf_1007",
   "filelock 3.0.10 py_0",
   "traitlets 4.3.3 py37_0",
   "_libgcc_mutex 0.1 conda_forge",
   "markupsafe 1.1.1 py37h516909a_0",
   "beautifulsoup4 4.8.2 py37_0",
   "pip 20.0.2 py_2",
   "bzip2 1.0.8 h516909a_2",
   "setuptools 45.2.0 py37_0",
   "ncurses 6.1 hf484d3e_1002",
   "python-libarchive-c 2.9 py37_0",
   "six 1.14.0 py37_0",
   "decorator 4.4.2 py_0",
   "xz 5.2.4 h14c3975_1001",
   "ca-certificates 2019.11.28 hecc5488_0",
   "pycosat 0.6.3 py37h516909a_1002",
   "libssh2 1.8.2 h22169c7_2",
   "ripgrep 11.0.2 h516909a_3",
   "tk 8.6.10 hed695b0_0",
   "conda 4.8.2 py37_0",
   "zstd 1.4.4 h3b9ef0a_1",
   "conda-build 3.18.12 py37_0",
   "pyyaml 5.3 py37h516909a_0",
   "pyopenssl 19.1.0 py_1",
   "lzo 2.10 h14c3975_1000",
   "conda-forge-ci-setup 2.5.4 py37_0",
   "click 7.0 py_0",
   "conda-env 2.6.0 1"
  ],
  "summary": "Python implementation of fast azimuthal integration",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "c_compiler_version": "7",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "7",
  "docker_image": "condaforge/linux-anvil-comp7",
  "extend_keys": [
   "ignore_build_only_deps",
   "extend_keys",
   "ignore_version",
   "pin_run_as_build"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.14",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "files": [],
 "index": {
  "arch": null,
  "build": "1",
  "build_number": 1,
  "depends": [
   "hdf5plugin",
   "matplotlib",
   "pyfai-base >=0.19.0,<0.19.1.0a0",
   "silx"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "pyfai",
  "noarch": "generic",
  "platform": null,
  "subdir": "noarch",
  "timestamp": 1583339579950,
  "version": "0.19.0"
 },
 "metadata_version": 1,
 "name": "pyfai",
 "raw_recipe": "# This file created by conda-build 3.18.12\n# ------------------------------------------------\n\npackage:\n    name: pyfai\n    version: 0.19.0\nsource:\n    sha256: 4dcbc92470997b5002d5626da4df428ab12efcfcec437d4cb001f41141665774\n    url: https://pypi.io/packages/source/p/pyFAI/pyFAI-0.19.0.tar.gz\nbuild:\n    noarch: generic\n    number: 1\n    string: '1'\nrequirements:\n    run:\n        - hdf5plugin\n        - matplotlib\n        - pyfai-base >=0.19.0,<0.19.1.0a0\n        - silx\ntest:\n    imports:\n        - pyFAI\n        - pyFAI.gui\n        - pyFAI.test\n        - pyFAI.third_party\nabout:\n    description: 'pyFAI is an azimuthal integration library that tries to be fast\n        (as fast\n\n        as C and even more using OpenCL and GPU). It is based on histogramming of\n\n        the 2theta/Q positions of each (center of) pixel weighted by the intensity\n\n        of each pixel, but parallel version uses a SparseMatrix-DenseVector\n\n        multiplication. Neighboring output bins get also a contribution of pixels\n\n        next to the border thanks to pixel splitting. Finally pyFAI provides also\n\n        tools to calibrate the experimental setup using Debye-Scherrer rings of a\n\n        reference compound.\n\n        '\n    dev_url: https://github.com/silx-kit/pyFAI/\n    doc_url: http://www.silx.org/doc/pyFAI/latest/\n    home: https://github.com/silx-kit/pyFAI/\n    license: MIT\n    license_family: MIT\n    license_file: copyright\n    summary: Python implementation of fast azimuthal integration\nextra:\n    copy_test_source_files: true\n    final: true\n    recipe-maintainers:\n        - CJ-Wright\n        - chiahaoliu\n        - kif\n        - t20100\n        - tacaswell\n        - tschoonj\n",
 "rendered_recipe": {
  "about": {
   "description": "pyFAI is an azimuthal integration library that tries to be fast (as fast\nas C and even more using OpenCL and GPU). It is based on histogramming of\nthe 2theta/Q positions of each (center of) pixel weighted by the intensity\nof each pixel, but parallel version uses a SparseMatrix-DenseVector\nmultiplication. Neighboring output bins get also a contribution of pixels\nnext to the border thanks to pixel splitting. Finally pyFAI provides also\ntools to calibrate the experimental setup using Debye-Scherrer rings of a\nreference compound.\n",
   "dev_url": "https://github.com/silx-kit/pyFAI/",
   "doc_url": "http://www.silx.org/doc/pyFAI/latest/",
   "home": "https://github.com/silx-kit/pyFAI/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "copyright",
   "summary": "Python implementation of fast azimuthal integration"
  },
  "build": {
   "noarch": "generic",
   "number": 1,
   "string": "1"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "CJ-Wright",
    "chiahaoliu",
    "kif",
    "t20100",
    "tacaswell",
    "tschoonj"
   ]
  },
  "package": {
   "name": "pyfai",
   "version": "0.19.0"
  },
  "requirements": {
   "run": [
    "hdf5plugin",
    "matplotlib",
    "pyfai-base >=0.19.0,<0.19.1.0a0",
    "silx"
   ]
  },
  "source": {
   "sha256": "4dcbc92470997b5002d5626da4df428ab12efcfcec437d4cb001f41141665774",
   "url": "https://pypi.io/packages/source/p/pyFAI/pyFAI-0.19.0.tar.gz"
  },
  "test": {
   "imports": [
    "pyFAI",
    "pyFAI.gui",
    "pyFAI.test",
    "pyFAI.third_party"
   ]
  }
 },
 "version": "0.19.0"
}