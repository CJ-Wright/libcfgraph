{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.15.1",
  "conda_private": false,
  "conda_version": "4.5.11",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "alexbw",
    "jakirkham",
    "jjhelmus",
    "grlee77",
    "jschueller",
    "beckermr"
   ]
  },
  "home": "http://fftw.org",
  "identifiers": [],
  "keywords": [],
  "license": "GPL 2",
  "license_file": "COPYING",
  "root_pkgs": [
   "anaconda-client 1.7.1 py_0",
   "asn1crypto 0.24.0 py36_0",
   "attrs 18.2.0 py_0",
   "beautifulsoup4 4.6.3 py36_1000",
   "ca-certificates 2018.11.29 ha4d7672_0",
   "certifi 2018.11.29 py36_1000",
   "cffi 1.11.5 py36h945400d_0",
   "chardet 3.0.4 py36h420ce6e_1",
   "click 7.0 py_0",
   "clyent 1.2.2 py_1",
   "conda 4.5.11 py36_1000",
   "conda-build 3.15.1 py36_0",
   "conda-env 2.6.0 h36134e3_1",
   "conda-forge-ci-setup 2.1.1 py36_0",
   "console_shortcut 0.1.1 h6bb2dd7_3",
   "cryptography 2.3.1 py36h74b6da3_1000",
   "decorator 4.3.0 py_0",
   "filelock 3.0.10 py_0",
   "glob2 0.6 py_0",
   "idna 2.6 py36h148d497_1",
   "ipython_genutils 0.2.0 py_1",
   "jinja2 2.10 py_1",
   "jsonschema 3.0.0a3 py36_1000",
   "jupyter_core 4.4.0 py_0",
   "markupsafe 1.1.0 py36hfa6e2cd_1000",
   "menuinst 1.4.14 py36hfa6e2cd_0",
   "nbformat 4.4.0 py_1",
   "openssl 1.0.2p hfa6e2cd_1001",
   "pip 10.0.1 py36_0",
   "pkginfo 1.4.2 py_1",
   "psutil 5.4.8 py36hfa6e2cd_1000",
   "pycosat 0.6.3 py36h413d8a4_0",
   "pycparser 2.18 py36hd053e01_1",
   "pyopenssl 18.0.0 py36_0",
   "pyrsistent 0.14.7 py36hfa6e2cd_1000",
   "pysocks 1.6.8 py36_0",
   "python 3.6.5 h0c2934d_0",
   "python-dateutil 2.7.5 py_0",
   "pytz 2018.7 py_0",
   "pywin32 223 py36hfa6e2cd_1",
   "pyyaml 3.13 py36hfa6e2cd_1001",
   "requests 2.18.4 py36h4371aae_1",
   "ruamel_yaml 0.15.37 py36hfa6e2cd_2",
   "setuptools 39.2.0 py36_0",
   "six 1.11.0 py36h4db2310_1",
   "tqdm 4.28.1 py_0",
   "traitlets 4.3.2 py36_1000",
   "urllib3 1.22 py36h276f60a_0",
   "vc 14.1 h0510ff6_4",
   "vs2008_express_vc_python_patch 1.0.0 0",
   "vs2015_runtime 14.15.26706 h3a45250_0",
   "wheel 0.31.1 py36_0",
   "wincertstore 0.2 py36h7fe50ca_0",
   "win_inet_pton 1.0.1 py36he67d7fd_1",
   "yaml 0.1.7 hc54c509_2"
  ],
  "summary": "The fastest Fourier transform in the west.",
  "tags": []
 },
 "conda_build_config": {
  "c_compiler": "vs2015",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "vs2015",
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": "python",
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x.x",
    "min_pin": "x.x.x"
   }
  },
  "python": "3.6",
  "r_base": "3.4",
  "target_platform": "win-64",
  "vc": "14"
 },
 "files": [
  "Library/bin/fftw3.dll",
  "Library/bin/fftw3f.dll",
  "Library/include/fftw3.f",
  "Library/include/fftw3.f03",
  "Library/include/fftw3.h",
  "Library/include/fftw3l.f03",
  "Library/include/fftw3q.f03",
  "Library/lib/cmake/fftw3/FFTW3Config.cmake",
  "Library/lib/cmake/fftw3/FFTW3ConfigVersion.cmake",
  "Library/lib/cmake/fftw3/FFTW3LibraryDepends-release.cmake",
  "Library/lib/cmake/fftw3/FFTW3LibraryDepends.cmake",
  "Library/lib/cmake/fftw3f/FFTW3LibraryDepends-release.cmake",
  "Library/lib/cmake/fftw3f/FFTW3LibraryDepends.cmake",
  "Library/lib/cmake/fftw3f/FFTW3fConfig.cmake",
  "Library/lib/cmake/fftw3f/FFTW3fConfigVersion.cmake",
  "Library/lib/fftw3.lib",
  "Library/lib/fftw3f.lib",
  "Library/lib/pkgconfig/fftw.pc",
  "Library/lib/pkgconfig/fftwf.pc"
 ],
 "index": {
  "arch": "x86_64",
  "build": "hfa6e2cd_1001",
  "build_number": 1001,
  "depends": [
   "vc 14.*"
  ],
  "license": "GPL 2",
  "name": "fftw",
  "platform": "win",
  "subdir": "win-64",
  "timestamp": 1543621578575,
  "version": "3.3.8"
 },
 "metadata_version": 1,
 "name": "fftw",
 "raw_recipe": "{% set version = \"3.3.8\" %}\n\npackage:\n  name: fftw\n  version: {{ version }}\n\nsource:\n  fn: fftw-{{ version }}.tar.gz\n  url: http://www.fftw.org/fftw-{{ version }}.tar.gz\n  sha256: 6113262f6e92c5bd474f2875fa1b01054c4ad5040f6b0da7c03c98821d9ae303\n\nbuild:\n  number: 1001\n\nrequirements:\n  build:\n    - perl   # [not win]\n    - cmake  # [win]\n    - {{ compiler('c') }}\n  host:\n{% if not compiler('c').startswith(\"toolchain\") %}  # [osx]\n    - llvm-openmp >=4.0.1  # [osx]\n  run:\n    - llvm-openmp >=4.0.1  # [osx]\n{% endif %}  # [osx]\n\ntest:\n  commands:\n    - exit $(test -f ${PREFIX}/lib/libfftw3f.a)          # [not win]\n    - exit $(test -f ${PREFIX}/lib/libfftw3.a)           # [not win]\n    - exit $(test -f ${PREFIX}/lib/libfftw3l.a)          # [not win]\n    - exit $(test -f ${PREFIX}/lib/libfftw3f_threads.a)  # [not win]\n    - exit $(test -f ${PREFIX}/lib/libfftw3_threads.a)   # [not win]\n    - exit $(test -f ${PREFIX}/lib/libfftw3l_threads.a)  # [not win]\n    {% if not compiler('c').startswith(\"toolchain\") %}  # [osx]\n    - exit $(test -f ${PREFIX}/lib/libfftw3f_omp.a)  # [not win]\n    - exit $(test -f ${PREFIX}/lib/libfftw3_omp.a)   # [not win]\n    - exit $(test -f ${PREFIX}/lib/libfftw3l_omp.a)  # [not win]\n    {% endif %}  # [osx]\n\n    # Verify headers are installed\n    - test -f ${PREFIX}/include/fftw3.h                  # [not win]\n    - if not exist %LIBRARY_INC%\\\\fftw3.h exit 1         # [win]\n\n    # Verify shared libraries are installed\n    {% set fftw_libs = [\n            \"libfftw3\",\n            \"libfftw3_threads\",\n            \"libfftw3f\",\n            \"libfftw3f_threads\",\n            \"libfftw3l\",\n            \"libfftw3l_threads\",\n    ] %}\n    {% set fftw_omp_libs = [\n            \"libfftw3_omp\",\n            \"libfftw3f_omp\",\n            \"libfftw3l_omp\",\n    ] %}\n\n    {% for lib in fftw_libs %}\n    - python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/{{ lib }}${SHLIB_EXT}']\"  # [unix]\n    {% endfor %}\n\n    {% if not compiler('c').startswith(\"toolchain\") %}  # [osx]\n    {% for lib in fftw_omp_libs %}\n    - python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/{{ lib }}${SHLIB_EXT}']\"  # [unix]\n    {% endfor %}\n    {% endif %}  # [osx]\n\n    {% set fftw_libs = [\"fftw3f\", \"fftw3\"] %}\n\n    {% for base in fftw_libs %}\n    - if not exist %LIBRARY_LIB%\\\\{{ base }}.lib exit 1  # [win]\n    - if not exist %LIBRARY_BIN%\\\\{{ base }}.dll exit 1  # [win]\n    {% endfor %}\n\nabout:\n  home: http://fftw.org\n  license: GPL 2\n  license_file: COPYING\n  summary: \"The fastest Fourier transform in the west.\"\n\nextra:\n  recipe-maintainers:\n    - alexbw\n    - jakirkham\n    - jjhelmus\n    - grlee77\n    - jschueller\n    - beckermr\n",
 "rendered_recipe": {
  "about": {
   "home": "http://fftw.org",
   "license": "GPL 2",
   "license_file": "COPYING",
   "summary": "The fastest Fourier transform in the west."
  },
  "build": {
   "number": "1001",
   "string": "hfa6e2cd_1001"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "alexbw",
    "beckermr",
    "grlee77",
    "jakirkham",
    "jjhelmus",
    "jschueller"
   ]
  },
  "package": {
   "name": "fftw",
   "version": "3.3.8"
  },
  "requirements": {
   "build": [
    "cmake 3.12.4 he025d50_1000",
    "vs2015_runtime 14.0.25420 0",
    "vs2015_win-64 14.0.25123 h17c34da_3"
   ],
   "host": [
    "vc 14 0",
    "vs2015_runtime 14.0.25420 0"
   ],
   "run": [
    "vc 14.*"
   ]
  },
  "source": {
   "fn": "fftw-3.3.8.tar.gz",
   "sha256": "6113262f6e92c5bd474f2875fa1b01054c4ad5040f6b0da7c03c98821d9ae303",
   "url": "http://www.fftw.org/fftw-3.3.8.tar.gz"
  },
  "test": {
   "commands": [
    "if not exist %LIBRARY_INC%\\\\fftw3.h exit 1",
    "if not exist %LIBRARY_LIB%\\\\fftw3f.lib exit 1",
    "if not exist %LIBRARY_BIN%\\\\fftw3f.dll exit 1",
    "if not exist %LIBRARY_LIB%\\\\fftw3.lib exit 1",
    "if not exist %LIBRARY_BIN%\\\\fftw3.dll exit 1"
   ]
  }
 },
 "version": "3.3.8"
}