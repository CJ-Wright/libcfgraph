{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.18.11",
  "conda_private": false,
  "conda_version": "4.7.12",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "alexbw",
    "jakirkham",
    "jjhelmus",
    "grlee77",
    "jschueller",
    "beckermr",
    "egpbos"
   ]
  },
  "home": "http://fftw.org",
  "identifiers": [],
  "keywords": [],
  "license": "GPL 2",
  "license_file": "COPYING",
  "root_pkgs": [
   "anaconda-client 1.7.2 py_0",
   "asn1crypto 1.2.0 py37_0",
   "attrs 19.3.0 py_0",
   "beautifulsoup4 4.8.1 py37_0",
   "bzip2 1.0.8 h01d97ff_1",
   "ca-certificates 2019.9.11 hecc5488_0",
   "certifi 2019.9.11 py37_0",
   "cffi 1.13.2 py37h33e799b_0",
   "chardet 3.0.4 py37_1003",
   "click 7.0 py_0",
   "clyent 1.2.2 py_1",
   "conda 4.7.12 py37_0",
   "conda-build 3.18.11 py37_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 2.5.3 py37_0",
   "conda-package-handling 1.6.0 py37h01d97ff_0",
   "cryptography 2.7 py37hafa8578_0",
   "decorator 4.4.1 py_0",
   "filelock 3.0.10 py_0",
   "glob2 0.7 py_0",
   "icu 64.2 h6de7cb9_1",
   "idna 2.8 py37_1000",
   "importlib_metadata 0.23 py37_0",
   "ipython_genutils 0.2.0 py_1",
   "jinja2 2.10.3 py_0",
   "jq 1.6 h1de35cc_1000",
   "jsonschema 3.1.1 py37_0",
   "jupyter_core 4.5.0 py_0",
   "libarchive 3.3.3 h5c473cc_1006",
   "libcxx 9.0.0 h89e68fa_1",
   "libffi 3.2.1 h6de7cb9_1006",
   "libiconv 1.15 h01d97ff_1005",
   "liblief 0.9.0 h2a1bed3_1",
   "libxml2 2.9.10 h53d96d6_0",
   "lz4-c 1.8.3 h6de7cb9_1001",
   "lzo 2.10 h1de35cc_1000",
   "markupsafe 1.1.1 py37h0b31af3_0",
   "more-itertools 7.2.0 py_0",
   "nbformat 4.4.0 py_1",
   "ncurses 6.1 h0a44026_1002",
   "oniguruma 6.9.3 h01d97ff_0",
   "openssl 1.1.1c h01d97ff_0",
   "pkginfo 1.5.0.1 py_0",
   "psutil 5.6.5 py37h0b31af3_0",
   "py-lief 0.9.0 py37h6d6d4d2_1",
   "pycosat 0.6.3 py37h0b31af3_1002",
   "pycparser 2.19 py37_1",
   "pyopenssl 19.0.0 py37_0",
   "pyrsistent 0.15.5 py37h0b31af3_0",
   "pysocks 1.7.1 py37_0",
   "python 3.7.3 h93065d6_1",
   "python-dateutil 2.8.1 py_0",
   "python-libarchive-c 2.9 py37_0",
   "python.app 1.2 py37h0b31af3_1201",
   "pytz 2019.3 py_0",
   "pyyaml 5.1.2 py37h0b31af3_0",
   "readline 8.0 hcfe32e1_0",
   "requests 2.22.0 py37_1",
   "ripgrep 11.0.2 h01d97ff_3",
   "ruamel_yaml 0.15.71 py37h1de35cc_1000",
   "setuptools 41.6.0 py37_1",
   "shyaml 0.6.1 py_0",
   "six 1.13.0 py37_0",
   "soupsieve 1.9.4 py37_0",
   "sqlite 3.30.1 h93121df_0",
   "tk 8.6.9 h2573ce8_1003",
   "tqdm 4.36.1 py_0",
   "traitlets 4.3.3 py37_0",
   "urllib3 1.25.6 py37_0",
   "xz 5.2.4 h1de35cc_1001",
   "yaml 0.1.7 h1de35cc_1001",
   "zipp 0.6.0 py_0",
   "zlib 1.2.11 h0b31af3_1006",
   "zstd 1.4.0 ha9f0a20_0"
  ],
  "summary": "The fastest Fourier transform in the west.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.9",
  "c_compiler": "clang",
  "c_compiler_version": "9",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "extend_keys": [
   "extend_keys",
   "ignore_build_only_deps",
   "pin_run_as_build",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "fortran_compiler_version": "7",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "macos_min_version": "10.9",
  "mpi": "mpich",
  "numpy": "1.11",
  "perl": "5.26.2",
  "pin_run_as_build": {
   "perl": {
    "max_pin": "x.x.x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7",
  "r_base": "3.5",
  "target_platform": "osx-64"
 },
 "files": [
  "bin/fftw-wisdom",
  "bin/fftw-wisdom-to-conf",
  "bin/fftwf-wisdom",
  "bin/fftwl-wisdom",
  "include/fftw3-mpi.f03",
  "include/fftw3-mpi.h",
  "include/fftw3.f",
  "include/fftw3.f03",
  "include/fftw3.h",
  "include/fftw3l-mpi.f03",
  "include/fftw3l.f03",
  "include/fftw3q.f03",
  "lib/cmake/fftw3/FFTW3Config.cmake",
  "lib/cmake/fftw3/FFTW3ConfigVersion.cmake",
  "lib/cmake/fftw3/FFTW3fConfig.cmake",
  "lib/cmake/fftw3/FFTW3fConfigVersion.cmake",
  "lib/cmake/fftw3/FFTW3lConfig.cmake",
  "lib/cmake/fftw3/FFTW3lConfigVersion.cmake",
  "lib/libfftw3.3.dylib",
  "lib/libfftw3.a",
  "lib/libfftw3.dylib",
  "lib/libfftw3_mpi.3.dylib",
  "lib/libfftw3_mpi.a",
  "lib/libfftw3_mpi.dylib",
  "lib/libfftw3_omp.3.dylib",
  "lib/libfftw3_omp.a",
  "lib/libfftw3_omp.dylib",
  "lib/libfftw3_threads.3.dylib",
  "lib/libfftw3_threads.a",
  "lib/libfftw3_threads.dylib",
  "lib/libfftw3f.3.dylib",
  "lib/libfftw3f.a",
  "lib/libfftw3f.dylib",
  "lib/libfftw3f_mpi.3.dylib",
  "lib/libfftw3f_mpi.a",
  "lib/libfftw3f_mpi.dylib",
  "lib/libfftw3f_omp.3.dylib",
  "lib/libfftw3f_omp.a",
  "lib/libfftw3f_omp.dylib",
  "lib/libfftw3f_threads.3.dylib",
  "lib/libfftw3f_threads.a",
  "lib/libfftw3f_threads.dylib",
  "lib/libfftw3l.3.dylib",
  "lib/libfftw3l.a",
  "lib/libfftw3l.dylib",
  "lib/libfftw3l_mpi.3.dylib",
  "lib/libfftw3l_mpi.a",
  "lib/libfftw3l_mpi.dylib",
  "lib/libfftw3l_omp.3.dylib",
  "lib/libfftw3l_omp.a",
  "lib/libfftw3l_omp.dylib",
  "lib/libfftw3l_threads.3.dylib",
  "lib/libfftw3l_threads.a",
  "lib/libfftw3l_threads.dylib",
  "lib/pkgconfig/fftw3.pc",
  "lib/pkgconfig/fftw3f.pc",
  "lib/pkgconfig/fftw3l.pc",
  "share/info/fftw3.info",
  "share/info/fftw3.info-1",
  "share/info/fftw3.info-2",
  "share/man/man1/fftw-wisdom-to-conf.1",
  "share/man/man1/fftw-wisdom.1",
  "share/man/man1/fftwf-wisdom.1",
  "share/man/man1/fftwl-wisdom.1"
 ],
 "index": {
  "arch": "x86_64",
  "build": "mpi_mpich_hd94f463_1010",
  "build_number": 1010,
  "depends": [
   "libgfortran >=4.0.0,<5.0.0.a0",
   "llvm-openmp >=4.0.1",
   "llvm-openmp >=9.0.0",
   "mpich >=3.3.1,<3.4.0a0"
  ],
  "license": "GPL 2",
  "name": "fftw",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1573066106234,
  "version": "3.3.8"
 },
 "metadata_version": 1,
 "name": "fftw",
 "raw_recipe": "{% set version = \"3.3.8\" %}\n{% set build = 1010 %}\n\n\n# ensure mpi is defined (needed for conda-smithy recipe-lint)\n{% set mpi = mpi or 'nompi' %}\n\npackage:\n  name: fftw\n  version: {{ version }}\n\nsource:\n  fn: fftw-{{ version }}.tar.gz\n  url: http://www.fftw.org/fftw-{{ version }}.tar.gz\n  sha256: 6113262f6e92c5bd474f2875fa1b01054c4ad5040f6b0da7c03c98821d9ae303\n\nbuild:\n  # prioritize nompi variant via build number\n  {% if mpi == 'nompi' %}\n  {% set build = build + 100 %}\n  {% endif %}\n  number: {{ build }}\n\n  # add build string so packages can depend on\n  # mpi or nompi variants explicitly:\n  # `pkg * mpi_mpich_*` for mpich\n  # `pkg * mpi_*` for any mpi\n  # `pkg * nompi_*` for no mpi\n  {% if mpi != 'nompi' %}\n  {% set mpi_prefix = \"mpi_\" + mpi %}\n  {% else %}\n  {% set mpi_prefix = \"nompi\" %}\n  {% endif %}\n  string: \"{{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}\"\n\n  run_exports:\n    - {{ pin_compatible('fftw', max_pin='x') }}\n  {% if mpi != 'nompi' %}\n    - fftw * {{ mpi_prefix }}_*\n  {% endif %}\n\nrequirements:\n  build:\n    - perl   # [not win]\n    - cmake  # [win]\n    - {{ compiler('c') }}\n    - {{ compiler('fortran') }}  # [not win]\n    - llvm-openmp >=4.0.1  # [osx]\n  host:\n    - {{ mpi }}  # [mpi != 'nompi']\n    - llvm-openmp >=4.0.1  # [osx]\n    - make\n  run:\n    - llvm-openmp >=4.0.1  # [osx]\n\ntest:\n  requires:\n    {% if c_compiler == 'vs2008' %}\n    - python =2.7\n    {% else %}\n    - python =3.6\n    {% endif %}\n  commands:\n    # Verify library contains Fortran symbols\n    - |                                                 # [not win]\n      strings ${PREFIX}/lib/libfftw3.a | grep -q dfftw || exit 1  # [not win]\n\n    # Verify existence of library files\n    - test -f ${PREFIX}/lib/libfftw3f.a || exit 1           # [not win]\n    - test -f ${PREFIX}/lib/libfftw3.a || exit 1            # [not win]\n    - test -f ${PREFIX}/lib/libfftw3l.a || exit 1           # [not win]\n    - test -f ${PREFIX}/lib/libfftw3f_threads.a || exit 1   # [not win]\n    - test -f ${PREFIX}/lib/libfftw3_threads.a || exit 1    # [not win]\n    - test -f ${PREFIX}/lib/libfftw3l_threads.a || exit 1   # [not win]\n    - test -f ${PREFIX}/lib/libfftw3f_omp.a || exit 1       # [not win]\n    - test -f ${PREFIX}/lib/libfftw3_omp.a || exit 1        # [not win]\n    - test -f ${PREFIX}/lib/libfftw3l_omp.a || exit 1       # [not win]\n\n    # Verify headers are installed\n    - test -f ${PREFIX}/include/fftw3.h || exit 1           # [not win]\n    - if not exist %LIBRARY_INC%\\\\fftw3.h exit 1            # [win]\n\n    # Verify shared libraries are installed\n    {% set fftw_libs = [\n            \"libfftw3\",\n            \"libfftw3_threads\",\n            \"libfftw3f\",\n            \"libfftw3f_threads\",\n            \"libfftw3l\",\n            \"libfftw3l_threads\",\n    ] %}\n    {% set fftw_omp_libs = [\n            \"libfftw3_omp\",\n            \"libfftw3f_omp\",\n            \"libfftw3l_omp\",\n    ] %}\n    {% set fftw_mpi_libs = [\n            \"libfftw3_mpi\",\n            \"libfftw3f_mpi\",\n            \"libfftw3l_mpi\",\n    ] %}\n\n    {% for lib in fftw_libs %}\n    - python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/{{ lib }}${SHLIB_EXT}']\"  # [unix]\n    {% endfor %}\n\n    {% for lib in fftw_omp_libs %}\n    - python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/{{ lib }}${SHLIB_EXT}']\"  # [unix]\n    {% endfor %}\n\n    {% if mpi != 'nompi' %}\n    {% for lib in fftw_mpi_libs %}\n    # you need to link to the mpi libs to load the dll, so we just test\n    # if it exists\n    - test -f ${PREFIX}/lib/{{ lib }}${SHLIB_EXT} || exit 1  # [unix]\n    {% endfor %}\n    {% endif %}\n\n    {% set fftw_libs = [\"fftw3f\", \"fftw3\"] %}\n\n    {% for base in fftw_libs %}\n    - if not exist %LIBRARY_LIB%\\\\{{ base }}.lib exit 1  # [win]\n    - if not exist %LIBRARY_BIN%\\\\{{ base }}.dll exit 1  # [win]\n    {% endfor %}\n\nabout:\n  home: http://fftw.org\n  license: GPL 2\n  license_file: COPYING\n  summary: \"The fastest Fourier transform in the west.\"\n\nextra:\n  recipe-maintainers:\n    - alexbw\n    - jakirkham\n    - jjhelmus\n    - grlee77\n    - jschueller\n    - beckermr\n    - egpbos\n",
 "rendered_recipe": {
  "about": {
   "home": "http://fftw.org",
   "license": "GPL 2",
   "license_file": "COPYING",
   "summary": "The fastest Fourier transform in the west."
  },
  "build": {
   "number": "1010",
   "run_exports": [
    "fftw",
    "fftw * mpi_mpich_*"
   ],
   "string": "mpi_mpich_hd94f463_1010"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "alexbw",
    "beckermr",
    "egpbos",
    "grlee77",
    "jakirkham",
    "jjhelmus",
    "jschueller"
   ]
  },
  "package": {
   "name": "fftw",
   "version": "3.3.8"
  },
  "requirements": {
   "build": [
    "cctools 921 h5ba7a2e_4",
    "clang 9.0.0 h28b9765_1",
    "clang_osx-64 9.0.0 h22b1bf0_3",
    "clangxx 9.0.0 1",
    "compiler-rt 9.0.0 h2b4a0d1_1",
    "gfortran_impl_osx-64 7.3.0 hf4212f2_2",
    "gfortran_osx-64 7.3.0 h22b1bf0_6",
    "gmp 6.1.2 h0a44026_1000",
    "isl 0.19 0",
    "ld64 409.12 h3c32e8a_4",
    "libcxx 9.0.0 h89e68fa_1",
    "libgfortran 4.0.0 2",
    "libiconv 1.15 h01d97ff_1005",
    "libllvm9 9.0.0 h770b8ee_2",
    "llvm-openmp 9.0.0 h40edb58_0",
    "mpc 1.1.0 h4160ff4_1006",
    "mpfr 4.0.2 h44b798e_0",
    "perl 5.26.2 haec8ef5_1006",
    "tapi 1000.10.8 h770b8ee_3",
    "zlib 1.2.11 h0b31af3_1006"
   ],
   "host": [
    "libcxx 9.0.0 h89e68fa_1",
    "libgfortran 4.0.0 2",
    "llvm-openmp 9.0.0 h40edb58_0",
    "make 4.2.1 h1de35cc_2004",
    "mpi 1.0 mpich",
    "mpich 3.3.1 hc856adb_1"
   ],
   "run": [
    "libgfortran >=4.0.0,<5.0.0.a0",
    "llvm-openmp >=4.0.1",
    "llvm-openmp >=9.0.0",
    "mpich >=3.3.1,<3.4.0a0"
   ]
  },
  "source": {
   "fn": "fftw-3.3.8.tar.gz",
   "sha256": "6113262f6e92c5bd474f2875fa1b01054c4ad5040f6b0da7c03c98821d9ae303",
   "url": "http://www.fftw.org/fftw-3.3.8.tar.gz"
  },
  "test": {
   "commands": [
    "strings ${PREFIX}/lib/libfftw3.a | grep -q dfftw || exit 1\n",
    "test -f ${PREFIX}/lib/libfftw3f.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3l.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3f_threads.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3_threads.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3l_threads.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3f_omp.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3_omp.a || exit 1",
    "test -f ${PREFIX}/lib/libfftw3l_omp.a || exit 1",
    "test -f ${PREFIX}/include/fftw3.h || exit 1",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3_threads${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3f${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3f_threads${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3l${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3l_threads${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3_omp${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3f_omp${SHLIB_EXT}']\"",
    "python -c \"import ctypes; ctypes.cdll[r'${PREFIX}/lib/libfftw3l_omp${SHLIB_EXT}']\"",
    "test -f ${PREFIX}/lib/libfftw3_mpi${SHLIB_EXT} || exit 1",
    "test -f ${PREFIX}/lib/libfftw3f_mpi${SHLIB_EXT} || exit 1",
    "test -f ${PREFIX}/lib/libfftw3l_mpi${SHLIB_EXT} || exit 1"
   ],
   "requires": [
    "python =3.6"
   ]
  }
 },
 "version": "3.3.8"
}