{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.18.11",
  "conda_private": false,
  "conda_version": "4.8.2",
  "description": "VOLK is the Vector-Optimized Library of Kernels. It is a free library,\ncurrently offered under the GPLv3, that contains kernels of hand-written\nSIMD code for different mathematical operations. Since each SIMD\narchitecture can be very different and no compiler has yet come along to\nhandle vectorization properly or highly efficiently, VOLK approaches the\nproblem differently.\n\nFor each architecture or platform that a developer wishes to vectorize for,\na new proto-kernel is added to VOLK. At runtime, VOLK will select the\ncorrect proto-kernel. In this way, the users of VOLK call a kernel for\nperforming the operation that is platform/architecture agnostic. This\nallows us to write portable SIMD code that is optimized for a variety of\nplatforms.\n",
  "dev_url": "https://github.com/gnuradio/volk",
  "doc_url": "http://libvolk.org/doxygen/index.html",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ryanvolz"
   ]
  },
  "home": "https://github.com/gnuradio/volk",
  "identifiers": [],
  "keywords": [],
  "license": "GPL-3.0",
  "license_family": "GPL",
  "license_file": "COPYING",
  "root_pkgs": [
   "anaconda-client 1.7.2 py_0",
   "asn1crypto 1.3.0 py36_0",
   "attrs 19.3.0 py_0",
   "beautifulsoup4 4.8.2 py36_0",
   "bzip2 1.0.8 hfa6e2cd_2",
   "ca-certificates 2019.11.28 hecc5488_0",
   "certifi 2019.11.28 py36_0",
   "cffi 1.13.2 py36hb32ad35_0",
   "chardet 3.0.4 py36_1003",
   "click 7.0 py_0",
   "clyent 1.2.2 py_1",
   "conda 4.8.2 py36_0",
   "conda-build 3.18.11 py36_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 2.5.4 py36_0",
   "conda-package-handling 1.6.0 py36h2fa13f4_1",
   "console_shortcut 0.1.1 3",
   "cryptography 2.8 py36hb32ad35_1",
   "decorator 4.4.1 py_0",
   "filelock 3.0.10 py_0",
   "glob2 0.7 py_0",
   "idna 2.8 py36_1000",
   "importlib_metadata 1.5.0 py36_0",
   "ipython_genutils 0.2.0 py_1",
   "jinja2 2.11.1 py_0",
   "jsonschema 3.2.0 py36_0",
   "jupyter_core 4.6.2 py36_0",
   "libarchive 3.3.3 hd0049e4_1007",
   "libiconv 1.15 hfa6e2cd_1005",
   "liblief 0.9.0 ha925a31_2",
   "libxml2 2.9.10 h9ce36c8_0",
   "lz4-c 1.8.3 he025d50_1001",
   "lzo 2.10 hfa6e2cd_1000",
   "m2w64-gcc-libgfortran 5.3.0 6",
   "m2w64-gcc-libs 5.3.0 7",
   "m2w64-gcc-libs-core 5.3.0 7",
   "m2w64-gmp 6.1.0 2",
   "m2w64-libwinpthread-git 5.0.0.4634.697f757 2",
   "markupsafe 1.1.1 py36hfa6e2cd_0",
   "menuinst 1.4.16 py36_0",
   "msys2-conda-epoch 20160418 1",
   "nbformat 5.0.4 py_0",
   "openssl 1.1.1d hfa6e2cd_0",
   "pip 20.0.2 py_2",
   "pkginfo 1.5.0.1 py_0",
   "powershell_shortcut 0.0.1 2",
   "psutil 5.6.7 py36hfa6e2cd_0",
   "py-lief 0.9.0 py36ha925a31_2",
   "pycosat 0.6.3 py36hfa6e2cd_1002",
   "pycparser 2.19 py36_1",
   "pyopenssl 19.1.0 py36_0",
   "pyrsistent 0.15.7 py36hfa6e2cd_0",
   "pysocks 1.7.1 py36_0",
   "python 3.6.7 he025d50_1006",
   "python-dateutil 2.8.1 py_0",
   "python-libarchive-c 2.9 py36_0",
   "pytz 2019.3 py_0",
   "pywin32 225 py36hfa6e2cd_0",
   "pyyaml 5.1.2 py36hfa6e2cd_0",
   "requests 2.22.0 py36_1",
   "ripgrep 11.0.2 h301d43c_3",
   "ruamel_yaml 0.15.71 py36hfa6e2cd_1000",
   "setuptools 45.2.0 py36_0",
   "six 1.14.0 py36_0",
   "soupsieve 1.9.4 py36_0",
   "sqlite 3.27.2 he774522_0",
   "tqdm 4.42.1 py_0",
   "traitlets 4.3.3 py36_0",
   "urllib3 1.25.7 py36_0",
   "vc 14.1 h0510ff6_4",
   "vs2008_express_vc_python_patch 1.0.0 0",
   "vs2015_runtime 14.15.26706 h3a45250_0",
   "wheel 0.34.2 py_1",
   "wincertstore 0.2 py36_1003",
   "win_inet_pton 1.1.0 py36_0",
   "xz 5.2.4 h2fa13f4_1001",
   "yaml 0.1.7 hc54c509_2",
   "zipp 2.2.0 py_0",
   "zlib 1.2.11 h2fa13f4_1006",
   "zstd 1.4.4 hd8a0e53_1"
  ],
  "summary": "The Vector Optimized Library of Kernels",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "boost_cpp": "1.70.0",
  "c_compiler": "vs2015",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "vs2015",
  "extend_keys": [
   "extend_keys",
   "ignore_build_only_deps",
   "ignore_version",
   "pin_run_as_build"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "boost-cpp": {
    "max_pin": "x.x.x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7",
  "r_base": "3.4",
  "target_platform": "win-64",
  "vc": "14",
  "zip_keys": [
   [
    "python",
    "c_compiler",
    "cxx_compiler"
   ]
  ]
 },
 "files": [
  "Lib/site-packages/volk_modtool/__init__.py",
  "Lib/site-packages/volk_modtool/cfg.py",
  "Lib/site-packages/volk_modtool/volk_modtool_generate.py",
  "Library/bin/volk-config-info.exe",
  "Library/bin/volk.dll",
  "Library/bin/volk_modtool.py",
  "Library/bin/volk_profile.exe",
  "Library/include/volk/constants.h",
  "Library/include/volk/saturation_arithmetic.h",
  "Library/include/volk/volk.h",
  "Library/include/volk/volk_16i_32fc_dot_prod_32fc.h",
  "Library/include/volk/volk_16i_branch_4_state_8.h",
  "Library/include/volk/volk_16i_convert_8i.h",
  "Library/include/volk/volk_16i_max_star_16i.h",
  "Library/include/volk/volk_16i_max_star_horizontal_16i.h",
  "Library/include/volk/volk_16i_permute_and_scalar_add.h",
  "Library/include/volk/volk_16i_s32f_convert_32f.h",
  "Library/include/volk/volk_16i_x4_quad_max_star_16i.h",
  "Library/include/volk/volk_16i_x5_add_quad_16i_x4.h",
  "Library/include/volk/volk_16ic_convert_32fc.h",
  "Library/include/volk/volk_16ic_deinterleave_16i_x2.h",
  "Library/include/volk/volk_16ic_deinterleave_real_16i.h",
  "Library/include/volk/volk_16ic_deinterleave_real_8i.h",
  "Library/include/volk/volk_16ic_magnitude_16i.h",
  "Library/include/volk/volk_16ic_s32f_deinterleave_32f_x2.h",
  "Library/include/volk/volk_16ic_s32f_deinterleave_real_32f.h",
  "Library/include/volk/volk_16ic_s32f_magnitude_32f.h",
  "Library/include/volk/volk_16ic_x2_dot_prod_16ic.h",
  "Library/include/volk/volk_16ic_x2_multiply_16ic.h",
  "Library/include/volk/volk_16u_byteswap.h",
  "Library/include/volk/volk_16u_byteswappuppet_16u.h",
  "Library/include/volk/volk_32f_64f_add_64f.h",
  "Library/include/volk/volk_32f_64f_multiply_64f.h",
  "Library/include/volk/volk_32f_8u_polarbutterfly_32f.h",
  "Library/include/volk/volk_32f_8u_polarbutterflypuppet_32f.h",
  "Library/include/volk/volk_32f_accumulator_s32f.h",
  "Library/include/volk/volk_32f_acos_32f.h",
  "Library/include/volk/volk_32f_asin_32f.h",
  "Library/include/volk/volk_32f_atan_32f.h",
  "Library/include/volk/volk_32f_binary_slicer_32i.h",
  "Library/include/volk/volk_32f_binary_slicer_8i.h",
  "Library/include/volk/volk_32f_convert_64f.h",
  "Library/include/volk/volk_32f_cos_32f.h",
  "Library/include/volk/volk_32f_expfast_32f.h",
  "Library/include/volk/volk_32f_index_max_16u.h",
  "Library/include/volk/volk_32f_index_max_32u.h",
  "Library/include/volk/volk_32f_invsqrt_32f.h",
  "Library/include/volk/volk_32f_log2_32f.h",
  "Library/include/volk/volk_32f_null_32f.h",
  "Library/include/volk/volk_32f_s32f_32f_fm_detect_32f.h",
  "Library/include/volk/volk_32f_s32f_calc_spectral_noise_floor_32f.h",
  "Library/include/volk/volk_32f_s32f_convert_16i.h",
  "Library/include/volk/volk_32f_s32f_convert_32i.h",
  "Library/include/volk/volk_32f_s32f_convert_8i.h",
  "Library/include/volk/volk_32f_s32f_mod_rangepuppet_32f.h",
  "Library/include/volk/volk_32f_s32f_multiply_32f.h",
  "Library/include/volk/volk_32f_s32f_normalize.h",
  "Library/include/volk/volk_32f_s32f_power_32f.h",
  "Library/include/volk/volk_32f_s32f_s32f_mod_range_32f.h",
  "Library/include/volk/volk_32f_s32f_stddev_32f.h",
  "Library/include/volk/volk_32f_sin_32f.h",
  "Library/include/volk/volk_32f_sqrt_32f.h",
  "Library/include/volk/volk_32f_stddev_and_mean_32f_x2.h",
  "Library/include/volk/volk_32f_tan_32f.h",
  "Library/include/volk/volk_32f_tanh_32f.h",
  "Library/include/volk/volk_32f_x2_add_32f.h",
  "Library/include/volk/volk_32f_x2_divide_32f.h",
  "Library/include/volk/volk_32f_x2_dot_prod_16i.h",
  "Library/include/volk/volk_32f_x2_dot_prod_32f.h",
  "Library/include/volk/volk_32f_x2_fm_detectpuppet_32f.h",
  "Library/include/volk/volk_32f_x2_interleave_32fc.h",
  "Library/include/volk/volk_32f_x2_max_32f.h",
  "Library/include/volk/volk_32f_x2_min_32f.h",
  "Library/include/volk/volk_32f_x2_multiply_32f.h",
  "Library/include/volk/volk_32f_x2_pow_32f.h",
  "Library/include/volk/volk_32f_x2_s32f_interleave_16ic.h",
  "Library/include/volk/volk_32f_x2_subtract_32f.h",
  "Library/include/volk/volk_32f_x3_sum_of_poly_32f.h",
  "Library/include/volk/volk_32fc_32f_add_32fc.h",
  "Library/include/volk/volk_32fc_32f_dot_prod_32fc.h",
  "Library/include/volk/volk_32fc_32f_multiply_32fc.h",
  "Library/include/volk/volk_32fc_conjugate_32fc.h",
  "Library/include/volk/volk_32fc_convert_16ic.h",
  "Library/include/volk/volk_32fc_deinterleave_32f_x2.h",
  "Library/include/volk/volk_32fc_deinterleave_64f_x2.h",
  "Library/include/volk/volk_32fc_deinterleave_imag_32f.h",
  "Library/include/volk/volk_32fc_deinterleave_real_32f.h",
  "Library/include/volk/volk_32fc_deinterleave_real_64f.h",
  "Library/include/volk/volk_32fc_index_max_16u.h",
  "Library/include/volk/volk_32fc_index_max_32u.h",
  "Library/include/volk/volk_32fc_magnitude_32f.h",
  "Library/include/volk/volk_32fc_magnitude_squared_32f.h",
  "Library/include/volk/volk_32fc_s32f_atan2_32f.h",
  "Library/include/volk/volk_32fc_s32f_deinterleave_real_16i.h",
  "Library/include/volk/volk_32fc_s32f_magnitude_16i.h",
  "Library/include/volk/volk_32fc_s32f_power_32fc.h",
  "Library/include/volk/volk_32fc_s32f_power_spectrum_32f.h",
  "Library/include/volk/volk_32fc_s32f_x2_power_spectral_density_32f.h",
  "Library/include/volk/volk_32fc_s32fc_multiply_32fc.h",
  "Library/include/volk/volk_32fc_s32fc_rotatorpuppet_32fc.h",
  "Library/include/volk/volk_32fc_s32fc_x2_rotator_32fc.h",
  "Library/include/volk/volk_32fc_x2_add_32fc.h",
  "Library/include/volk/volk_32fc_x2_conjugate_dot_prod_32fc.h",
  "Library/include/volk/volk_32fc_x2_divide_32fc.h",
  "Library/include/volk/volk_32fc_x2_dot_prod_32fc.h",
  "Library/include/volk/volk_32fc_x2_multiply_32fc.h",
  "Library/include/volk/volk_32fc_x2_multiply_conjugate_32fc.h",
  "Library/include/volk/volk_32fc_x2_s32f_square_dist_scalar_mult_32f.h",
  "Library/include/volk/volk_32fc_x2_s32fc_multiply_conjugate_add_32fc.h",
  "Library/include/volk/volk_32fc_x2_square_dist_32f.h",
  "Library/include/volk/volk_32i_s32f_convert_32f.h",
  "Library/include/volk/volk_32i_x2_and_32i.h",
  "Library/include/volk/volk_32i_x2_or_32i.h",
  "Library/include/volk/volk_32u_byteswap.h",
  "Library/include/volk/volk_32u_byteswappuppet_32u.h",
  "Library/include/volk/volk_32u_popcnt.h",
  "Library/include/volk/volk_32u_popcntpuppet_32u.h",
  "Library/include/volk/volk_32u_reverse_32u.h",
  "Library/include/volk/volk_64f_convert_32f.h",
  "Library/include/volk/volk_64f_x2_add_64f.h",
  "Library/include/volk/volk_64f_x2_max_64f.h",
  "Library/include/volk/volk_64f_x2_min_64f.h",
  "Library/include/volk/volk_64f_x2_multiply_64f.h",
  "Library/include/volk/volk_64u_byteswap.h",
  "Library/include/volk/volk_64u_byteswappuppet_64u.h",
  "Library/include/volk/volk_64u_popcnt.h",
  "Library/include/volk/volk_64u_popcntpuppet_64u.h",
  "Library/include/volk/volk_8i_convert_16i.h",
  "Library/include/volk/volk_8i_s32f_convert_32f.h",
  "Library/include/volk/volk_8ic_deinterleave_16i_x2.h",
  "Library/include/volk/volk_8ic_deinterleave_real_16i.h",
  "Library/include/volk/volk_8ic_deinterleave_real_8i.h",
  "Library/include/volk/volk_8ic_s32f_deinterleave_32f_x2.h",
  "Library/include/volk/volk_8ic_s32f_deinterleave_real_32f.h",
  "Library/include/volk/volk_8ic_x2_multiply_conjugate_16ic.h",
  "Library/include/volk/volk_8ic_x2_s32f_multiply_conjugate_32fc.h",
  "Library/include/volk/volk_8u_conv_k7_r2puppet_8u.h",
  "Library/include/volk/volk_8u_x2_encodeframepolar_8u.h",
  "Library/include/volk/volk_8u_x3_encodepolar_8u_x2.h",
  "Library/include/volk/volk_8u_x3_encodepolarpuppet_8u.h",
  "Library/include/volk/volk_8u_x4_conv_k7_r2_8u.h",
  "Library/include/volk/volk_alloc.hh",
  "Library/include/volk/volk_avx2_intrinsics.h",
  "Library/include/volk/volk_avx_intrinsics.h",
  "Library/include/volk/volk_common.h",
  "Library/include/volk/volk_complex.h",
  "Library/include/volk/volk_config_fixed.h",
  "Library/include/volk/volk_cpu.h",
  "Library/include/volk/volk_malloc.h",
  "Library/include/volk/volk_neon_intrinsics.h",
  "Library/include/volk/volk_prefs.h",
  "Library/include/volk/volk_sse3_intrinsics.h",
  "Library/include/volk/volk_sse_intrinsics.h",
  "Library/include/volk/volk_typedefs.h",
  "Library/include/volk/volk_version.h",
  "Library/lib/cmake/volk/VolkConfig.cmake",
  "Library/lib/cmake/volk/VolkConfigVersion.cmake",
  "Library/lib/cmake/volk/VolkTargets-release.cmake",
  "Library/lib/cmake/volk/VolkTargets.cmake",
  "Library/lib/pkgconfig/volk.pc",
  "Library/lib/volk.lib"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py37h803c963_0",
  "build_number": 0,
  "depends": [
   "boost-cpp >=1.70.0,<1.70.1.0a0",
   "python >=3.7,<3.8.0a0",
   "vc >=14,<15.0a0"
  ],
  "license": "GPL-3.0",
  "license_family": "GPL",
  "name": "volk",
  "platform": "win",
  "subdir": "win-64",
  "timestamp": 1582041650567,
  "version": "2.2.0"
 },
 "metadata_version": 1,
 "name": "volk",
 "raw_recipe": "{% set version = \"2.2.0\" %}\n\npackage:\n  name: volk\n  version: {{ version }}\n\nsource:\n  url: https://github.com/gnuradio/volk/archive/v{{ version }}.tar.gz\n  sha256: 9745d60c16e7af61b58d3ae0e53e8d4464fd932bb56ae8fd143f6db2e3aa0217\n\nbuild:\n  number: 0\n  run_exports:\n    - {{ pin_subpackage('volk', max_pin='x') }}\n  skip: True  # [py2k]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake >=3.8\n    - jom  # [win]\n    - pkg-config  # [not win]\n\n  host:\n    - boost-cpp  # [not linux]\n    - mako >=0.4.2\n    - python\n\n  run:\n    - boost-cpp  # [not linux]\n    - python\n\ntest:\n  commands:\n    # verify CLI tools\n    {% set volk_cmds = [\n        \"volk-config-info\",\n        \"volk_profile\",\n    ] %}\n    {% set volk_python_cmds = [\"volk_modtool\"] %}  # [unix]\n    {% set volk_python_cmds = [\"volk_modtool.py\"] %}  # [win]\n    {% for each_cmd in volk_cmds + volk_python_cmds %}\n    - command -v {{ each_cmd }}  # [unix]\n    - where {{ each_cmd }}  # [win]\n    {% endfor %}\n\n    # verify libraries\n    {% set volk_lib = \"volk\" %}\n    - test -f $PREFIX/lib/lib{{ volk_lib }}${SHLIB_EXT}  # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\{{ volk_lib }}.dll exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\{{ volk_lib }}.lib exit 1  # [win]\n\n    # run selection of commands\n    - volk-config-info --version --prefix --cc --cflags --all-machines --avail-machines --machine --alignment --malloc\n\n  imports:\n    - volk_modtool\n\nabout:\n  home: https://github.com/gnuradio/volk\n  license: GPL-3.0\n  license_family: GPL\n  license_file: COPYING\n  summary: 'The Vector Optimized Library of Kernels'\n  description: |\n    VOLK is the Vector-Optimized Library of Kernels. It is a free library,\n    currently offered under the GPLv3, that contains kernels of hand-written\n    SIMD code for different mathematical operations. Since each SIMD\n    architecture can be very different and no compiler has yet come along to\n    handle vectorization properly or highly efficiently, VOLK approaches the\n    problem differently.\n\n    For each architecture or platform that a developer wishes to vectorize for,\n    a new proto-kernel is added to VOLK. At runtime, VOLK will select the\n    correct proto-kernel. In this way, the users of VOLK call a kernel for\n    performing the operation that is platform/architecture agnostic. This\n    allows us to write portable SIMD code that is optimized for a variety of\n    platforms.\n\n  doc_url: http://libvolk.org/doxygen/index.html\n  dev_url: https://github.com/gnuradio/volk\n\nextra:\n  recipe-maintainers:\n    - ryanvolz\n",
 "rendered_recipe": {
  "about": {
   "description": "VOLK is the Vector-Optimized Library of Kernels. It is a free library,\ncurrently offered under the GPLv3, that contains kernels of hand-written\nSIMD code for different mathematical operations. Since each SIMD\narchitecture can be very different and no compiler has yet come along to\nhandle vectorization properly or highly efficiently, VOLK approaches the\nproblem differently.\n\nFor each architecture or platform that a developer wishes to vectorize for,\na new proto-kernel is added to VOLK. At runtime, VOLK will select the\ncorrect proto-kernel. In this way, the users of VOLK call a kernel for\nperforming the operation that is platform/architecture agnostic. This\nallows us to write portable SIMD code that is optimized for a variety of\nplatforms.\n",
   "dev_url": "https://github.com/gnuradio/volk",
   "doc_url": "http://libvolk.org/doxygen/index.html",
   "home": "https://github.com/gnuradio/volk",
   "license": "GPL-3.0",
   "license_family": "GPL",
   "license_file": "COPYING",
   "summary": "The Vector Optimized Library of Kernels"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "volk >=2.2.0,<3.0a0"
   ],
   "string": "py37h803c963_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ryanvolz"
   ]
  },
  "package": {
   "name": "volk",
   "version": "2.2.0"
  },
  "requirements": {
   "build": [
    "cmake 3.16.4 he025d50_0",
    "jom 1.1.3 0",
    "vs2015_runtime 14.16.27012 hf0eaf9b_1",
    "vs2015_win-64 14.0.25420 h55c1224_11"
   ],
   "host": [
    "boost-cpp 1.70.0 h6a4c333_2",
    "ca-certificates 2019.11.28 hecc5488_0",
    "mako 1.1.0 py_0",
    "markupsafe 1.1.1 py37hfa6e2cd_0",
    "openssl 1.1.1d hfa6e2cd_0",
    "python 3.7.6 h5b45d93_2",
    "sqlite 3.30.1 hfa6e2cd_0",
    "vc 14.1 h0510ff6_4",
    "vs2015_runtime 14.16.27012 hf0eaf9b_1",
    "zlib 1.2.11 h2fa13f4_1006"
   ],
   "run": [
    "boost-cpp >=1.70.0,<1.70.1.0a0",
    "python >=3.7,<3.8.0a0",
    "vc >=14,<15.0a0"
   ]
  },
  "source": {
   "sha256": "9745d60c16e7af61b58d3ae0e53e8d4464fd932bb56ae8fd143f6db2e3aa0217",
   "url": "https://github.com/gnuradio/volk/archive/v2.2.0.tar.gz"
  },
  "test": {
   "commands": [
    "where volk-config-info",
    "where volk_profile",
    "where volk_modtool.py",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\volk.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\volk.lib exit 1",
    "volk-config-info --version --prefix --cc --cflags --all-machines --avail-machines --machine --alignment --malloc"
   ],
   "imports": [
    "volk_modtool"
   ]
  }
 },
 "version": "2.2.0"
}