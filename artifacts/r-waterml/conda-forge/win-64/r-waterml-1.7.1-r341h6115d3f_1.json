{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.15.1",
  "conda_private": false,
  "conda_version": "4.5.11",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ocefpaf",
    "johanneskoester",
    "bgruening",
    "daler",
    "jdblischak",
    "cbrueffer",
    "dbast"
   ]
  },
  "home": "https://github.com/jirikadlec2/waterml",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "LICENSE",
  "root_pkgs": [
   "anaconda-client 1.7.1 py_0",
   "asn1crypto 0.24.0 py36_0",
   "beautifulsoup4 4.6.3 py36_1000",
   "ca-certificates 2018.10.15 ha4d7672_0",
   "certifi 2018.10.15 py36_1000",
   "cffi 1.11.5 py36h945400d_0",
   "chardet 3.0.4 py36h420ce6e_1",
   "click 7.0 py_0",
   "clyent 1.2.2 py_1",
   "conda 4.5.11 py36_1000",
   "conda-build 3.15.1 py36_0",
   "conda-env 2.6.0 h36134e3_1",
   "conda-forge-ci-setup 2.0.8 py36_0",
   "console_shortcut 0.1.1 h6bb2dd7_3",
   "cryptography 2.2.2 py36hfa6e2cd_0",
   "decorator 4.3.0 py_0",
   "filelock 3.0.9 py_0",
   "glob2 0.6 py_0",
   "idna 2.6 py36h148d497_1",
   "ipython_genutils 0.2.0 py_1",
   "jinja2 2.10 py_1",
   "jsonschema 2.6.0 py36_1002",
   "jupyter_core 4.4.0 py_0",
   "markupsafe 1.0 py36hfa6e2cd_1001",
   "menuinst 1.4.14 py36hfa6e2cd_0",
   "nbformat 4.4.0 py_1",
   "openssl 1.0.2p hfa6e2cd_1001",
   "pip 10.0.1 py36_0",
   "pkginfo 1.4.2 py_1",
   "psutil 5.4.7 py36hfa6e2cd_1001",
   "pycosat 0.6.3 py36h413d8a4_0",
   "pycparser 2.18 py36hd053e01_1",
   "pyopenssl 18.0.0 py36_0",
   "pysocks 1.6.8 py36_0",
   "python 3.6.5 h0c2934d_0",
   "python-dateutil 2.7.3 py_0",
   "pytz 2018.5 py_0",
   "pywin32 223 py36hfa6e2cd_1",
   "pyyaml 3.13 py36hfa6e2cd_1001",
   "requests 2.18.4 py36h4371aae_1",
   "ruamel_yaml 0.15.37 py36hfa6e2cd_2",
   "setuptools 39.2.0 py36_0",
   "six 1.11.0 py36h4db2310_1",
   "tqdm 4.27.0 py_0",
   "traitlets 4.3.2 py36_1000",
   "urllib3 1.22 py36h276f60a_0",
   "vc 14 h0510ff6_3",
   "vs2008_express_vc_python_patch 1.0.0 0",
   "vs2015_runtime 14.0.25123 3",
   "wheel 0.31.1 py36_0",
   "wincertstore 0.2 py36h7fe50ca_0",
   "win_inet_pton 1.0.1 py36he67d7fd_1",
   "yaml 0.1.7 vc14_0"
  ],
  "summary": "Lets you connect to any of the Consortium of Universities for the Advancement of Hydrologic Sciences, Inc. ('CUAHSI') Water Data Center 'WaterOneFlow' web services and read any 'WaterML' hydrological time series data file. To see list of available web services, see <http://hiscentral.cuahsi.org>. All versions of 'WaterML' (1.0, 1.1 and 2.0) and both types of the web service protocol ('SOAP' and 'REST') are supported. The package has six data download functions: GetServices(): show all public web services from the HIS Central Catalog. HISCentral_GetSites() and HISCentral_GetSeriesCatalog(): search for sites or time series from the HIS Central catalog based on geographic bounding box, server, or keyword. GetVariables(): Show a data.frame with all variables on the server. GetSites(): Show a data.frame with all sites on the server. GetSiteInfo(): Show what variables, methods and quality control levels are available at the specific site. GetValues(): Given a site code, variable code, start time and end time, fetch a data.frame of all the observation time series data values. The GetValues() function can also parse 'WaterML' data from a custom URL or from a local file. The package also has five data upload functions: AddSites(), AddVariables(), AddMethods(), AddSources(), and AddValues(). These functions can be used for uploading data to a 'HydroServer Lite' Observations Data Model ('ODM') database via the 'JSON' data upload web service interface.",
  "tags": []
 },
 "conda_build_config": {
  "c_compiler": "vs2015",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "vs2015",
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": "numpy",
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x.x"
   }
  },
  "python": "3.6",
  "r_base": "3.4.1",
  "target_platform": "win-64",
  "vc": "14"
 },
 "files": [
  "R/library/WaterML/CITATION",
  "R/library/WaterML/DESCRIPTION",
  "R/library/WaterML/INDEX",
  "R/library/WaterML/LICENSE",
  "R/library/WaterML/MD5",
  "R/library/WaterML/Meta/Rd.rds",
  "R/library/WaterML/Meta/features.rds",
  "R/library/WaterML/Meta/hsearch.rds",
  "R/library/WaterML/Meta/links.rds",
  "R/library/WaterML/Meta/nsInfo.rds",
  "R/library/WaterML/Meta/package.rds",
  "R/library/WaterML/Meta/vignette.rds",
  "R/library/WaterML/NAMESPACE",
  "R/library/WaterML/R/WaterML",
  "R/library/WaterML/R/WaterML.rdb",
  "R/library/WaterML/R/WaterML.rdx",
  "R/library/WaterML/doc/WaterML-Tutorial.R",
  "R/library/WaterML/doc/WaterML-Tutorial.Rmd",
  "R/library/WaterML/doc/WaterML-Tutorial.html",
  "R/library/WaterML/doc/index.html",
  "R/library/WaterML/help/AnIndex",
  "R/library/WaterML/help/WaterML.rdb",
  "R/library/WaterML/help/WaterML.rdx",
  "R/library/WaterML/help/aliases.rds",
  "R/library/WaterML/help/paths.rds",
  "R/library/WaterML/html/00Index.html",
  "R/library/WaterML/html/AddMethods.html",
  "R/library/WaterML/html/AddSites.html",
  "R/library/WaterML/html/AddSources.html",
  "R/library/WaterML/html/AddValues.html",
  "R/library/WaterML/html/AddVariables.html",
  "R/library/WaterML/html/GetServices.html",
  "R/library/WaterML/html/GetSiteInfo.html",
  "R/library/WaterML/html/GetSites.html",
  "R/library/WaterML/html/GetValues.html",
  "R/library/WaterML/html/GetVariables.html",
  "R/library/WaterML/html/HISCentral_GetSeriesCatalog.html",
  "R/library/WaterML/html/HISCentral_GetSites.html",
  "R/library/WaterML/html/MakeSOAPEnvelope.html",
  "R/library/WaterML/html/R.css",
  "R/library/WaterML/html/WaterML-package.html",
  "R/library/WaterML/html/WaterMLVersion.html",
  "R/library/WaterML/html/WaterOneFlowNamespace.html",
  "R/library/WaterML/html/WaterOneFlowVersion.html"
 ],
 "index": {
  "arch": "x86_64",
  "build": "r341h6115d3f_1",
  "build_number": 1,
  "depends": [
   "r-base >=3.4.1,<3.4.2.0a0",
   "r-httr",
   "r-rjsonio",
   "r-xml"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "r-waterml",
  "platform": "win",
  "subdir": "win-64",
  "timestamp": 1540117212945,
  "version": "1.7.1"
 },
 "metadata_version": 1,
 "name": "r-waterml",
 "raw_recipe": "{% set version = '1.7.1' %}\n{% set posix = 'm2-' if win else '' %}\n{% set native = 'm2w64-' if win else '' %}\n\npackage:\n  name: r-waterml\n  version: {{ version|replace(\"-\", \"_\") }}\n\nsource:\n  fn: WaterML_{{ version }}.tar.gz\n  url:\n    - {{ cran_mirror }}/src/contrib/WaterML_{{ version }}.tar.gz\n    - {{ cran_mirror }}/src/contrib/Archive/WaterML/WaterML_{{ version }}.tar.gz\n  sha256: b2685dc6242f8024450c0c5c596d4c9d03a4a1c66b56fa66e0a90e2ab0550c2b\n\nbuild:\n  merge_build_host: True  # [win]\n  number: 1\n  skip: true  # [win32]\n  rpaths:\n    - lib/R/lib/\n    - lib/\n\nrequirements:\n  build:\n    - {{posix}}zip               # [win]\n  host:\n    - r-base\n    - r-rjsonio\n    - r-xml\n    - r-httr\n  run:\n    - r-base\n    - r-rjsonio\n    - r-xml\n    - r-httr\n\ntest:\n  commands:\n    - $R -e \"library('WaterML')\"           # [not win]\n    - \"\\\"%R%\\\" -e \\\"library('WaterML')\\\"\"  # [win]\n\nabout:\n  home: https://github.com/jirikadlec2/waterml\n  license: MIT\n  license_file: LICENSE\n  summary: 'Lets you connect to any of the Consortium of Universities for the Advancement of\n    Hydrologic Sciences, Inc. (''CUAHSI'') Water Data Center ''WaterOneFlow'' web services\n    and read any ''WaterML'' hydrological time series data file. To see list of available\n    web services, see <http://hiscentral.cuahsi.org>. All versions of ''WaterML'' (1.0,\n    1.1 and 2.0) and both types of the web service protocol (''SOAP'' and ''REST'')\n    are supported. The package has six data download functions: GetServices(): show\n    all public web services from the HIS Central Catalog. HISCentral_GetSites() and\n    HISCentral_GetSeriesCatalog(): search for sites or time series from the HIS Central\n    catalog based on geographic bounding box, server, or keyword. GetVariables(): Show\n    a data.frame with all variables on the server. GetSites(): Show a data.frame with\n    all sites on the server. GetSiteInfo(): Show what variables, methods and quality\n    control levels are available at the specific site. GetValues(): Given a site code,\n    variable code, start time and end time, fetch a data.frame of all the observation\n    time series data values. The GetValues() function can also parse ''WaterML'' data\n    from a custom URL or from a local file. The package also has five data upload functions:\n    AddSites(), AddVariables(), AddMethods(), AddSources(), and AddValues(). These functions\n    can be used for uploading data to a ''HydroServer Lite'' Observations Data Model\n    (''ODM'') database via the ''JSON'' data upload web service interface.'\n  license_family: MIT\n\nextra:\n  recipe-maintainers:\n    - ocefpaf\n    - johanneskoester\n    - bgruening\n    - daler\n    - jdblischak\n    - cbrueffer\n    - dbast\n",
 "rendered_recipe": {
  "about": {
   "home": "https://github.com/jirikadlec2/waterml",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Lets you connect to any of the Consortium of Universities for the Advancement of Hydrologic Sciences, Inc. ('CUAHSI') Water Data Center 'WaterOneFlow' web services and read any 'WaterML' hydrological time series data file. To see list of available web services, see <http://hiscentral.cuahsi.org>. All versions of 'WaterML' (1.0, 1.1 and 2.0) and both types of the web service protocol ('SOAP' and 'REST') are supported. The package has six data download functions: GetServices(): show all public web services from the HIS Central Catalog. HISCentral_GetSites() and HISCentral_GetSeriesCatalog(): search for sites or time series from the HIS Central catalog based on geographic bounding box, server, or keyword. GetVariables(): Show a data.frame with all variables on the server. GetSites(): Show a data.frame with all sites on the server. GetSiteInfo(): Show what variables, methods and quality control levels are available at the specific site. GetValues(): Given a site code, variable code, start time and end time, fetch a data.frame of all the observation time series data values. The GetValues() function can also parse 'WaterML' data from a custom URL or from a local file. The package also has five data upload functions: AddSites(), AddVariables(), AddMethods(), AddSources(), and AddValues(). These functions can be used for uploading data to a 'HydroServer Lite' Observations Data Model ('ODM') database via the 'JSON' data upload web service interface."
  },
  "build": {
   "merge_build_host": true,
   "number": "1",
   "rpaths": [
    "lib/",
    "lib/R/lib/"
   ],
   "string": "r341h6115d3f_1"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "bgruening",
    "cbrueffer",
    "daler",
    "dbast",
    "jdblischak",
    "johanneskoester",
    "ocefpaf"
   ]
  },
  "package": {
   "name": "r-waterml",
   "version": "1.7.1"
  },
  "requirements": {
   "build": [
    "m2-gcc-libs 5.3.0 4",
    "m2-libbz2 1.0.6 3",
    "m2-msys2-runtime 2.5.0.17080.65c939c 3",
    "m2-zip 3.0 2",
    "msys2-conda-epoch 20160418 1"
   ],
   "host": [
    "ca-certificates 2018.10.15 ha4d7672_0",
    "libiconv 1.15 hfa6e2cd_1003",
    "libxml2 2.9.8 h9ce36c8_1005",
    "m2w64-bwidget 1.9.10 2",
    "m2w64-bzip2 1.0.6 6",
    "m2w64-expat 2.1.1 2",
    "m2w64-fftw 3.3.4 6",
    "m2w64-flac 1.3.1 3",
    "m2w64-gcc-libgfortran 5.3.0 6",
    "m2w64-gcc-libs 5.3.0 7",
    "m2w64-gcc-libs-core 5.3.0 7",
    "m2w64-gettext 0.19.7 2",
    "m2w64-gmp 6.1.0 2",
    "m2w64-gsl 2.1 2",
    "m2w64-libiconv 1.14 6",
    "m2w64-libjpeg-turbo 1.4.2 3",
    "m2w64-libogg 1.3.2 3",
    "m2w64-libpng 1.6.21 2",
    "m2w64-libsndfile 1.0.26 2",
    "m2w64-libtiff 4.0.6 2",
    "m2w64-libvorbis 1.3.5 2",
    "m2w64-libwinpthread-git 5.0.0.4634.697f757 2",
    "m2w64-libxml2 2.9.3 4",
    "m2w64-mpfr 3.1.4 4",
    "m2w64-pcre 8.38 2",
    "m2w64-speex 1.2rc2 3",
    "m2w64-speexdsp 1.2rc3 3",
    "m2w64-tcl 8.6.5 3",
    "m2w64-tk 8.6.5 3",
    "m2w64-tktable 2.10 5",
    "m2w64-wineditline 2.101 5",
    "m2w64-xz 5.2.2 2",
    "m2w64-zlib 1.2.8 10",
    "msys2-conda-epoch 20160418 1",
    "openssl 1.0.2o vc14_0",
    "r-base 3.4.1 h8933c1f_8",
    "r-curl 3.2 r341h6115d3f_2",
    "r-httr 1.3.1 r341h6115d3f_1",
    "r-jsonlite 1.5 r341h6115d3f_2",
    "r-mime 0.5 r341h6115d3f_2",
    "r-openssl 1.0.1 r341h1de983f_1",
    "r-r6 2.2.2 r341h6115d3f_1",
    "r-rjsonio 1.3_0 r341h6115d3f_2",
    "r-xml 3.98_1.16 r341h6115d3f_0",
    "vc 14 0",
    "vs2015_runtime 14.0.25420 0",
    "zlib 1.2.11 vc14_0"
   ],
   "run": [
    "r-base >=3.4.1,<3.4.2.0a0",
    "r-httr",
    "r-rjsonio",
    "r-xml"
   ]
  },
  "source": {
   "fn": "WaterML_1.7.1.tar.gz",
   "sha256": "b2685dc6242f8024450c0c5c596d4c9d03a4a1c66b56fa66e0a90e2ab0550c2b",
   "url": [
    "https://cran.r-project.org/src/contrib/Archive/WaterML/WaterML_1.7.1.tar.gz",
    "https://cran.r-project.org/src/contrib/WaterML_1.7.1.tar.gz"
   ]
  },
  "test": {
   "commands": [
    "\"%R%\" -e \"library('WaterML')\""
   ]
  }
 },
 "version": "1.7.1"
}