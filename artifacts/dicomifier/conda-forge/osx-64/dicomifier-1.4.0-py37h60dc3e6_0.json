{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.19.1",
  "conda_private": false,
  "conda_version": "4.8.3",
  "description": "Dicomifier is a set of tools to convert Bruker data to DICOM files, and\nDICOM files to NIfTI. It retains meta-data (e.g. MR parameters such as echo\ntime or subject parameters such as weight or height) throughout the\nconversion process, storing them in JSON format, allowing easy access in\nmultiple environments. The meta-data from Bruker is aligned on the DICOM\ndictionary for unified human and animal processing pipelines.\n",
  "dev_url": "https://github.com/lamyj/dicomifier",
  "doc_url": "https://github.com/lamyj/dicomifier",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "lamyj"
   ]
  },
  "home": "https://github.com/lamyj/dicomifier",
  "identifiers": [],
  "keywords": [],
  "license": "CECILL-B",
  "license_family": "OTHER",
  "license_file": "LICENSE.txt",
  "root_pkgs": [
   "bzip2 1.0.8 h0b31af3_2",
   "libcxx 9.0.1 1",
   "conda-env 2.6.0 1",
   "openssl 1.1.1e h0b31af3_0",
   "icu 64.2 h6de7cb9_1",
   "certifi 2019.11.28 py37hc8dfbb8_1",
   "chardet 3.0.4 py37hc8dfbb8_1006",
   "jq 1.6 h1de35cc_1000",
   "libffi 3.2.1 h4a8c4bd_1007",
   "libxml2 2.9.10 h53d96d6_0",
   "anaconda-client 1.7.2 py_0",
   "py-lief 0.9.0 py37h0ceac7d_1",
   "readline 8.0 hcfe32e1_0",
   "pyrsistent 0.15.7 py37h9bfed18_1",
   "click 7.1.1 pyh8c360ce_0",
   "glob2 0.7 py_0",
   "tqdm 4.43.0 py_0",
   "shyaml 0.6.1 py_0",
   "yaml 0.2.2 h0b31af3_1",
   "jsonschema 3.2.0 py37hc8dfbb8_1",
   "decorator 4.4.2 py_0",
   "nbformat 5.0.4 py_0",
   "pysocks 1.7.1 py37hc8dfbb8_1",
   "cffi 1.14.0 py37h356ff06_0",
   "libiconv 1.15 h0b31af3_1006",
   "conda-forge-ci-setup 2.6.0 py37hc8dfbb8_0",
   "python.app 1.3 py37h9bfed18_1",
   "libarchive 3.3.3 h8912c15_1007",
   "filelock 3.0.10 py_0",
   "beautifulsoup4 4.8.2 py37_0",
   "importlib-metadata 1.5.0 py37hc8dfbb8_1",
   "pycparser 2.20 py_0",
   "tk 8.6.10 hbbe82c9_0",
   "conda-build 3.19.1 py37hc8dfbb8_0",
   "markupsafe 1.1.1 py37h9bfed18_1",
   "ripgrep 11.0.2 h01d97ff_3",
   "pyopenssl 19.1.0 py_1",
   "zlib 1.2.11 h0b31af3_1006",
   "jupyter_core 4.6.3 py37hc8dfbb8_1",
   "attrs 19.3.0 py_0",
   "zstd 1.4.4 hed8d7c8_2",
   "cryptography 2.8 py37he655712_2",
   "pycosat 0.6.3 py37h9bfed18_1004",
   "lz4-c 1.8.3 h6de7cb9_1001",
   "jinja2 2.11.1 py_0",
   "python_abi 3.7 1_cp37m",
   "psutil 5.7.0 py37h9bfed18_1",
   "idna 2.9 py_1",
   "soupsieve 1.9.4 py37hc8dfbb8_1",
   "pyyaml 5.3.1 py37h9bfed18_0",
   "setuptools 46.1.1 py37hc8dfbb8_0",
   "xz 5.2.4 h0b31af3_1002",
   "liblief 0.9.0 h3e78482_1",
   "clyent 1.2.2 py_1",
   "pkginfo 1.5.0.1 py_0",
   "ruamel_yaml 0.15.80 py37h9bfed18_1001",
   "pytz 2019.3 py_0",
   "requests 2.23.0 pyh8c360ce_2",
   "zipp 3.1.0 py_0",
   "ncurses 6.1 h0a44026_1002",
   "sqlite 3.30.1 h93121df_0",
   "importlib_metadata 1.5.0 1",
   "urllib3 1.25.7 py37hc8dfbb8_1",
   "conda 4.8.3 py37hc8dfbb8_1",
   "ipython_genutils 0.2.0 py_1",
   "lzo 2.10 h1de35cc_1000",
   "ca-certificates 2019.11.28 hecc5488_0",
   "oniguruma 6.9.3 h01d97ff_0",
   "six 1.14.0 py_1",
   "python-libarchive-c 2.9 py37_0",
   "python-dateutil 2.8.1 py_0",
   "traitlets 4.3.3 py37hc8dfbb8_1",
   "conda-package-handling 1.6.0 py37h9bfed18_2",
   "python 3.7.6 h90870a6_5_cpython"
  ],
  "summary": "Convert data from Bruker to DICOM and from DICOM to NIfTI",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_11.3.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.9",
  "boost_cpp": "1.70.0",
  "c_compiler": "clang",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "cxx_compiler_version": "9",
  "extend_keys": [
   "ignore_version",
   "extend_keys",
   "pin_run_as_build",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "macos_min_version": "10.9",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "boost-cpp": {
    "max_pin": "x.x.x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7.* *_cpython",
  "r_base": "3.5",
  "target_platform": "osx-64"
 },
 "files": [
  "bin/bruker2dicom",
  "bin/dicom2nifti",
  "include/dicomifier/Dataset.h",
  "include/dicomifier/Directory.h",
  "include/dicomifier/Exception.h",
  "include/dicomifier/Field.h",
  "include/dicomifier/grammar.h",
  "include/dicomifier/grammar.txx",
  "lib/libdicomifier.1.4.0.dylib",
  "lib/libdicomifier.1.dylib",
  "lib/libdicomifier.dylib",
  "lib/python3.7/site-packages/dicomifier/__init__.py",
  "lib/python3.7/site-packages/dicomifier/_dicomifier.so",
  "lib/python3.7/site-packages/dicomifier/bruker.so",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/__init__.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/convert.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/enhanced_mr_image_storage.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/equipment.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/flat_dicom_writer.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/frame_groups.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/frame_index_generator.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/frame_of_reference.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/image.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/mr_image_storage.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/nested_dicom_writer.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/patient.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/series.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/study.py",
  "lib/python3.7/site-packages/dicomifier/dicom_to_nifti/__init__.py",
  "lib/python3.7/site-packages/dicomifier/dicom_to_nifti/convert.py",
  "lib/python3.7/site-packages/dicomifier/dicom_to_nifti/image.py",
  "lib/python3.7/site-packages/dicomifier/dicom_to_nifti/meta_data.py",
  "lib/python3.7/site-packages/dicomifier/dicom_to_nifti/odil_getter.py",
  "lib/python3.7/site-packages/dicomifier/dicom_to_nifti/siemens.py",
  "lib/python3.7/site-packages/dicomifier/meta_data.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py37h60dc3e6_0",
  "build_number": 0,
  "depends": [
   "boost-cpp >=1.70.0,<1.70.1.0a0",
   "libcxx >=9.0.1",
   "nibabel",
   "numpy",
   "odil",
   "python >=3.7,<3.8.0a0",
   "python-dateutil",
   "python_abi 3.7.* *_cp37m"
  ],
  "license": "CECILL-B",
  "license_family": "OTHER",
  "name": "dicomifier",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1585048897344,
  "version": "1.4.0"
 },
 "metadata_version": 1,
 "name": "dicomifier",
 "raw_recipe": "{% set name = \"dicomifier\" %}\n{% set version = \"1.4.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/lamyj/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: 4cf6e6711d0507c6a5b557e2cdf2199fe024d3e31b343c01c053ac1e5a3aef50\n  patches:\n    - shared_libraries.patch\n\nbuild:\n  number: 0\n  skip: True  # [py<=35 or win]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n  host:\n    - boost-cpp\n    - odil\n    - pybind11\n    - python\n  run:\n    - boost-cpp\n    - nibabel\n    - numpy\n    - odil\n    - python\n    - python-dateutil\n\ntest:\n  imports:\n    - dicomifier\n  commands:\n    - bruker2dicom --help > /dev/null\n    - dicom2nifti --help > /dev/null\n\nabout:\n  home: https://github.com/lamyj/dicomifier\n  license:  CECILL-B\n  license_family: OTHER\n  license_file: LICENSE.txt\n  summary: 'Convert data from Bruker to DICOM and from DICOM to NIfTI'\n\n  description: |\n    Dicomifier is a set of tools to convert Bruker data to DICOM files, and \n    DICOM files to NIfTI. It retains meta-data (e.g. MR parameters such as echo \n    time or subject parameters such as weight or height) throughout the \n    conversion process, storing them in JSON format, allowing easy access in \n    multiple environments. The meta-data from Bruker is aligned on the DICOM \n    dictionary for unified human and animal processing pipelines.\n\n  doc_url: https://github.com/lamyj/dicomifier\n  dev_url: https://github.com/lamyj/dicomifier\n\nextra:\n  recipe-maintainers:\n    - lamyj\n",
 "rendered_recipe": {
  "about": {
   "description": "Dicomifier is a set of tools to convert Bruker data to DICOM files, and\nDICOM files to NIfTI. It retains meta-data (e.g. MR parameters such as echo\ntime or subject parameters such as weight or height) throughout the\nconversion process, storing them in JSON format, allowing easy access in\nmultiple environments. The meta-data from Bruker is aligned on the DICOM\ndictionary for unified human and animal processing pipelines.\n",
   "dev_url": "https://github.com/lamyj/dicomifier",
   "doc_url": "https://github.com/lamyj/dicomifier",
   "home": "https://github.com/lamyj/dicomifier",
   "license": "CECILL-B",
   "license_family": "OTHER",
   "license_file": "LICENSE.txt",
   "summary": "Convert data from Bruker to DICOM and from DICOM to NIfTI"
  },
  "build": {
   "number": "0",
   "string": "py37h60dc3e6_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "lamyj"
   ]
  },
  "package": {
   "name": "dicomifier",
   "version": "1.4.0"
  },
  "requirements": {
   "build": [
    "bzip2 1.0.8 h0b31af3_2",
    "ca-certificates 2019.11.28 hecc5488_0",
    "cctools 927.0.2 h5ba7a2e_4",
    "clang 9.0.1 default_hf57f61e_0",
    "clang_osx-64 9.0.1 h05bbb7f_0",
    "clangxx 9.0.1 default_hf57f61e_0",
    "clangxx_osx-64 9.0.1 h05bbb7f_0",
    "cmake 3.16.4 hd28f656_0",
    "compiler-rt 9.0.1 h6a512c6_3",
    "compiler-rt_osx-64 9.0.1 h99342c6_3",
    "expat 2.2.9 h4a8c4bd_2",
    "krb5 1.16.4 h1752a42_0",
    "ld64 450.3 h3c32e8a_4",
    "libcurl 7.68.0 h709d2b2_0",
    "libcxx 9.0.1 1",
    "libedit 3.1.20170329 hcfe32e1_1001",
    "libllvm9 9.0.1 ha1b3eb9_0",
    "libssh2 1.8.2 hcdc9a53_2",
    "libuv 1.34.0 h0b31af3_0",
    "ncurses 6.1 h0a44026_1002",
    "ninja 1.10.0 ha1b3eb9_0",
    "openssl 1.1.1e h0b31af3_0",
    "rhash 1.3.6 h1de35cc_1001",
    "tapi 1000.10.8 ha1b3eb9_4",
    "tk 8.6.10 hbbe82c9_0",
    "xz 5.2.4 h0b31af3_1002",
    "zlib 1.2.11 h0b31af3_1006"
   ],
   "host": [
    "boost-cpp 1.70.0 h75728bb_2",
    "bzip2 1.0.8 h0b31af3_2",
    "ca-certificates 2019.11.28 hecc5488_0",
    "icu 64.2 h6de7cb9_1",
    "jsoncpp 1.8.4 ha1b3eb9_1002",
    "libcxx 9.0.1 1",
    "libffi 3.2.1 h4a8c4bd_1007",
    "ncurses 6.1 h0a44026_1002",
    "odil 0.11.0 py37h99f82aa_0",
    "openssl 1.1.1e h0b31af3_0",
    "pybind11 2.4.3 py37ha1cc60f_2",
    "python 3.7.6 h90870a6_5_cpython",
    "python_abi 3.7 1_cp37m",
    "readline 8.0 hcfe32e1_0",
    "sqlite 3.30.1 h93121df_0",
    "tk 8.6.10 hbbe82c9_0",
    "xz 5.2.4 h0b31af3_1002",
    "zlib 1.2.11 h0b31af3_1006"
   ],
   "run": [
    "boost-cpp >=1.70.0,<1.70.1.0a0",
    "libcxx >=9.0.1",
    "nibabel",
    "numpy",
    "odil",
    "python >=3.7,<3.8.0a0",
    "python-dateutil",
    "python_abi 3.7.* *_cp37m"
   ]
  },
  "source": {
   "patches": [
    "shared_libraries.patch"
   ],
   "sha256": "4cf6e6711d0507c6a5b557e2cdf2199fe024d3e31b343c01c053ac1e5a3aef50",
   "url": "https://github.com/lamyj/dicomifier/archive/v1.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "bruker2dicom --help > /dev/null",
    "dicom2nifti --help > /dev/null"
   ],
   "imports": [
    "dicomifier"
   ]
  }
 },
 "version": "1.4.0"
}