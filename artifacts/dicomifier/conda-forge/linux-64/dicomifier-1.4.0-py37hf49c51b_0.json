{
 "about": {
  "channels": [
   "conda-forge",
   "defaults",
   "https://conda.anaconda.org/conda-forge"
  ],
  "conda_build_version": "3.19.1",
  "conda_private": false,
  "conda_version": "4.8.3",
  "description": "Dicomifier is a set of tools to convert Bruker data to DICOM files, and\nDICOM files to NIfTI. It retains meta-data (e.g. MR parameters such as echo\ntime or subject parameters such as weight or height) throughout the\nconversion process, storing them in JSON format, allowing easy access in\nmultiple environments. The meta-data from Bruker is aligned on the DICOM\ndictionary for unified human and animal processing pipelines.\n",
  "dev_url": "https://github.com/lamyj/dicomifier",
  "doc_url": "https://github.com/lamyj/dicomifier",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "lamyj"
   ]
  },
  "home": "https://github.com/lamyj/dicomifier",
  "identifiers": [],
  "keywords": [],
  "license": "CECILL-B",
  "license_family": "OTHER",
  "license_file": "LICENSE.txt",
  "root_pkgs": [
   "importlib-metadata 1.5.0 py37hc8dfbb8_1",
   "pysocks 1.7.1 py37hc8dfbb8_1",
   "python-dateutil 2.8.1 py_0",
   "zstd 1.4.4 h3b9ef0a_2",
   "attrs 19.3.0 py_0",
   "jsonschema 3.2.0 py37hc8dfbb8_1",
   "liblief 0.9.0 hf8a498c_1",
   "psutil 5.7.0 py37h8f50634_1",
   "clyent 1.2.2 py_1",
   "py-lief 0.9.0 py37he1b5a44_1",
   "wheel 0.34.2 py_1",
   "pycparser 2.20 py_0",
   "perl 5.26.2 h516909a_1006",
   "urllib3 1.25.7 py37hc8dfbb8_1",
   "git 2.26.0 pl526hf241897_0",
   "su-exec 0.2 h14c3975_1001",
   "soupsieve 1.9.4 py37hc8dfbb8_1",
   "ipython_genutils 0.2.0 py_1",
   "zipp 3.1.0 py_0",
   "glob2 0.7 py_0",
   "tqdm 4.43.0 py_0",
   "markupsafe 1.1.1 py37h8f50634_1",
   "pytz 2019.3 py_0",
   "libstdcxx-ng 9.2.0 hdf63c60_2",
   "cffi 1.14.0 py37hd463f26_0",
   "idna 2.9 py_1",
   "tini 0.18.0 h14c3975_1001",
   "libgomp 9.2.0 h24d8f2e_2",
   "jinja2 2.11.1 py_0",
   "ruamel_yaml 0.15.80 py37h8f50634_1001",
   "icu 64.2 he1b5a44_1",
   "chardet 3.0.4 py37hc8dfbb8_1006",
   "ld_impl_linux-64 2.34 h53a641e_0",
   "python_abi 3.7 1_cp37m",
   "curl 7.68.0 hf8cf82a_0",
   "conda 4.8.3 py37hc8dfbb8_1",
   "setuptools 46.1.1 py37hc8dfbb8_0",
   "patch 2.7.6 h14c3975_1001",
   "lz4-c 1.8.3 he1b5a44_1001",
   "libffi 3.2.1 he1b5a44_1007",
   "conda-package-handling 1.6.0 py37h8f50634_2",
   "pyyaml 5.3.1 py37h8f50634_0",
   "libcurl 7.68.0 hda55be3_0",
   "importlib_metadata 1.5.0 1",
   "jupyter_core 4.6.3 py37hc8dfbb8_1",
   "traitlets 4.3.3 py37hc8dfbb8_1",
   "libedit 3.1.20170329 hf8c457e_1001",
   "gettext 0.19.8.1 hc5be6a0_1002",
   "anaconda-client 1.7.2 py_0",
   "nbformat 5.0.4 py_0",
   "libxml2 2.9.10 hee79883_0",
   "certifi 2019.11.28 py37hc8dfbb8_1",
   "pkginfo 1.5.0.1 py_0",
   "readline 8.0 hf8c457e_0",
   "krb5 1.16.4 h2fd8d38_0",
   "conda-build 3.19.1 py37hc8dfbb8_0",
   "pcre 8.44 he1b5a44_0",
   "yaml 0.2.2 h516909a_1",
   "libgcc-ng 9.2.0 h24d8f2e_2",
   "zlib 1.2.11 h516909a_1006",
   "sqlite 3.30.1 hcee41ef_0",
   "patchelf 0.10 he1b5a44_0",
   "_openmp_mutex 4.5 0_gnu",
   "expat 2.2.9 he1b5a44_2",
   "libarchive 3.3.3 hc47fbbf_1007",
   "filelock 3.0.10 py_0",
   "pycosat 0.6.3 py37h8f50634_1004",
   "_libgcc_mutex 0.1 conda_forge",
   "beautifulsoup4 4.8.2 py37_0",
   "pip 20.0.2 py_2",
   "pyrsistent 0.15.7 py37h8f50634_1",
   "libiconv 1.15 h516909a_1006",
   "bzip2 1.0.8 h516909a_2",
   "python 3.7.6 h8356626_5_cpython",
   "ncurses 6.1 hf484d3e_1002",
   "python-libarchive-c 2.9 py37_0",
   "decorator 4.4.2 py_0",
   "six 1.14.0 py_1",
   "openssl 1.1.1e h516909a_0",
   "ca-certificates 2019.11.28 hecc5488_0",
   "requests 2.23.0 pyh8c360ce_2",
   "libssh2 1.8.2 h22169c7_2",
   "ripgrep 11.0.2 h516909a_3",
   "tk 8.6.10 hed695b0_0",
   "xz 5.2.4 h516909a_1002",
   "cryptography 2.8 py37hb09aad4_2",
   "pyopenssl 19.1.0 py_1",
   "lzo 2.10 h14c3975_1000",
   "conda-forge-ci-setup 2.6.0 py37hc8dfbb8_0",
   "click 7.1.1 pyh8c360ce_0",
   "conda-env 2.6.0 1"
  ],
  "summary": "Convert data from Bruker to DICOM and from DICOM to NIfTI",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "boost_cpp": "1.70.0",
  "c_compiler": "gcc",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "7",
  "docker_image": "condaforge/linux-anvil-comp7",
  "extend_keys": [
   "pin_run_as_build",
   "extend_keys",
   "ignore_build_only_deps",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "boost-cpp": {
    "max_pin": "x.x.x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7.* *_cpython",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "files": [
  "bin/bruker2dicom",
  "bin/dicom2nifti",
  "include/dicomifier/Dataset.h",
  "include/dicomifier/Directory.h",
  "include/dicomifier/Exception.h",
  "include/dicomifier/Field.h",
  "include/dicomifier/grammar.h",
  "include/dicomifier/grammar.txx",
  "lib/libdicomifier.so",
  "lib/libdicomifier.so.1",
  "lib/libdicomifier.so.1.4.0",
  "lib/python3.7/site-packages/dicomifier/__init__.py",
  "lib/python3.7/site-packages/dicomifier/_dicomifier.cpython-37m-x86_64-linux-gnu.so",
  "lib/python3.7/site-packages/dicomifier/bruker.cpython-37m-x86_64-linux-gnu.so",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/__init__.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/convert.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/enhanced_mr_image_storage.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/equipment.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/flat_dicom_writer.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/frame_groups.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/frame_index_generator.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/frame_of_reference.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/image.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/mr_image_storage.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/nested_dicom_writer.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/patient.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/series.py",
  "lib/python3.7/site-packages/dicomifier/bruker_to_dicom/study.py",
  "lib/python3.7/site-packages/dicomifier/dicom_to_nifti/__init__.py",
  "lib/python3.7/site-packages/dicomifier/dicom_to_nifti/convert.py",
  "lib/python3.7/site-packages/dicomifier/dicom_to_nifti/image.py",
  "lib/python3.7/site-packages/dicomifier/dicom_to_nifti/meta_data.py",
  "lib/python3.7/site-packages/dicomifier/dicom_to_nifti/odil_getter.py",
  "lib/python3.7/site-packages/dicomifier/dicom_to_nifti/siemens.py",
  "lib/python3.7/site-packages/dicomifier/meta_data.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py37hf49c51b_0",
  "build_number": 0,
  "depends": [
   "boost-cpp >=1.70.0,<1.70.1.0a0",
   "libgcc-ng >=7.3.0",
   "libstdcxx-ng >=7.3.0",
   "nibabel",
   "numpy",
   "odil",
   "python >=3.7,<3.8.0a0",
   "python-dateutil",
   "python_abi 3.7.* *_cp37m"
  ],
  "license": "CECILL-B",
  "license_family": "OTHER",
  "name": "dicomifier",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1585048774193,
  "version": "1.4.0"
 },
 "metadata_version": 1,
 "name": "dicomifier",
 "raw_recipe": "{% set name = \"dicomifier\" %}\n{% set version = \"1.4.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/lamyj/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: 4cf6e6711d0507c6a5b557e2cdf2199fe024d3e31b343c01c053ac1e5a3aef50\n  patches:\n    - shared_libraries.patch\n\nbuild:\n  number: 0\n  skip: True  # [py<=35 or win]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja\n  host:\n    - boost-cpp\n    - odil\n    - pybind11\n    - python\n  run:\n    - boost-cpp\n    - nibabel\n    - numpy\n    - odil\n    - python\n    - python-dateutil\n\ntest:\n  imports:\n    - dicomifier\n  commands:\n    - bruker2dicom --help > /dev/null\n    - dicom2nifti --help > /dev/null\n\nabout:\n  home: https://github.com/lamyj/dicomifier\n  license:  CECILL-B\n  license_family: OTHER\n  license_file: LICENSE.txt\n  summary: 'Convert data from Bruker to DICOM and from DICOM to NIfTI'\n\n  description: |\n    Dicomifier is a set of tools to convert Bruker data to DICOM files, and \n    DICOM files to NIfTI. It retains meta-data (e.g. MR parameters such as echo \n    time or subject parameters such as weight or height) throughout the \n    conversion process, storing them in JSON format, allowing easy access in \n    multiple environments. The meta-data from Bruker is aligned on the DICOM \n    dictionary for unified human and animal processing pipelines.\n\n  doc_url: https://github.com/lamyj/dicomifier\n  dev_url: https://github.com/lamyj/dicomifier\n\nextra:\n  recipe-maintainers:\n    - lamyj\n",
 "rendered_recipe": {
  "about": {
   "description": "Dicomifier is a set of tools to convert Bruker data to DICOM files, and\nDICOM files to NIfTI. It retains meta-data (e.g. MR parameters such as echo\ntime or subject parameters such as weight or height) throughout the\nconversion process, storing them in JSON format, allowing easy access in\nmultiple environments. The meta-data from Bruker is aligned on the DICOM\ndictionary for unified human and animal processing pipelines.\n",
   "dev_url": "https://github.com/lamyj/dicomifier",
   "doc_url": "https://github.com/lamyj/dicomifier",
   "home": "https://github.com/lamyj/dicomifier",
   "license": "CECILL-B",
   "license_family": "OTHER",
   "license_file": "LICENSE.txt",
   "summary": "Convert data from Bruker to DICOM and from DICOM to NIfTI"
  },
  "build": {
   "number": "0",
   "string": "py37hf49c51b_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "lamyj"
   ]
  },
  "package": {
   "name": "dicomifier",
   "version": "1.4.0"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 0_gnu",
    "binutils_impl_linux-64 2.34 h53a641e_0",
    "binutils_linux-64 2.34 hc952b39_18",
    "bzip2 1.0.8 h516909a_2",
    "ca-certificates 2019.11.28 hecc5488_0",
    "cmake 3.16.4 h28c56e5_0",
    "expat 2.2.9 he1b5a44_2",
    "gcc_impl_linux-64 7.3.0 hd420e75_5",
    "gcc_linux-64 7.3.0 h553295d_18",
    "gxx_impl_linux-64 7.3.0 hdf63c60_5",
    "gxx_linux-64 7.3.0 h553295d_18",
    "krb5 1.16.4 h2fd8d38_0",
    "ld_impl_linux-64 2.34 h53a641e_0",
    "libcurl 7.68.0 hda55be3_0",
    "libedit 3.1.20170329 hf8c457e_1001",
    "libgcc-ng 9.2.0 h24d8f2e_2",
    "libgomp 9.2.0 h24d8f2e_2",
    "libssh2 1.8.2 h22169c7_2",
    "libstdcxx-ng 9.2.0 hdf63c60_2",
    "libuv 1.34.0 h516909a_0",
    "ncurses 6.1 hf484d3e_1002",
    "ninja 1.10.0 hc9558a2_0",
    "openssl 1.1.1e h516909a_0",
    "rhash 1.3.6 h14c3975_1001",
    "tk 8.6.10 hed695b0_0",
    "xz 5.2.4 h516909a_1002",
    "zlib 1.2.11 h516909a_1006"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 0_gnu",
    "boost-cpp 1.70.0 h8e57a91_2",
    "bzip2 1.0.8 h516909a_2",
    "ca-certificates 2019.11.28 hecc5488_0",
    "icu 64.2 he1b5a44_1",
    "jsoncpp 1.8.4 hc9558a2_1002",
    "ld_impl_linux-64 2.34 h53a641e_0",
    "libffi 3.2.1 he1b5a44_1007",
    "libgcc-ng 9.2.0 h24d8f2e_2",
    "libgomp 9.2.0 h24d8f2e_2",
    "libstdcxx-ng 9.2.0 hdf63c60_2",
    "ncurses 6.1 hf484d3e_1002",
    "odil 0.11.0 py37hb07ca93_0",
    "openssl 1.1.1e h516909a_0",
    "pybind11 2.4.3 py37h99015e2_2",
    "python 3.7.6 h8356626_5_cpython",
    "python_abi 3.7 1_cp37m",
    "readline 8.0 hf8c457e_0",
    "sqlite 3.30.1 hcee41ef_0",
    "tk 8.6.10 hed695b0_0",
    "xz 5.2.4 h516909a_1002",
    "zlib 1.2.11 h516909a_1006"
   ],
   "run": [
    "boost-cpp >=1.70.0,<1.70.1.0a0",
    "libgcc-ng >=7.3.0",
    "libstdcxx-ng >=7.3.0",
    "nibabel",
    "numpy",
    "odil",
    "python >=3.7,<3.8.0a0",
    "python-dateutil",
    "python_abi 3.7.* *_cp37m"
   ]
  },
  "source": {
   "patches": [
    "shared_libraries.patch"
   ],
   "sha256": "4cf6e6711d0507c6a5b557e2cdf2199fe024d3e31b343c01c053ac1e5a3aef50",
   "url": "https://github.com/lamyj/dicomifier/archive/v1.4.0.tar.gz"
  },
  "test": {
   "commands": [
    "bruker2dicom --help > /dev/null",
    "dicom2nifti --help > /dev/null"
   ],
   "imports": [
    "dicomifier"
   ]
  }
 },
 "version": "1.4.0"
}