{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.15.1",
  "conda_private": false,
  "conda_version": "4.5.11",
  "description": "Taking a hint from the similarly-named Java Cryptography Architecture, QCA\naims to provide a straightforward and cross-platform crypto API, using Qt\ndatatypes and conventions. QCA separates the API from the implementation,\nusing plugins known as Providers. The advantage of this model is to allow\napplications to avoid linking to or explicitly depending on any particular\ncryptographic library. This allows one to easily change or upgrade crypto\nimplementations without even needing to recompile the application! QCA\nshould work everywhere Qt does, including Windows/Unix/MacOSX.\n",
  "dev_url": "https://quickgit.kde.org/?p=qca.git",
  "doc_url": "http://delta.affinix.com/docs/qca/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ceholden"
   ]
  },
  "home": "http://delta.affinix.com/qca/",
  "identifiers": [],
  "keywords": [],
  "license": "LGPL-2.1",
  "license_file": "COPYING",
  "root_pkgs": [
   "anaconda-client 1.7.1 py_0",
   "asn1crypto 0.24.0 py36_0",
   "attrs 18.2.0 py_0",
   "beautifulsoup4 4.6.3 py36_1000",
   "ca-certificates 2018.10.15 ha4d7672_0",
   "certifi 2018.10.15 py36_1000",
   "cffi 1.11.5 py36h945400d_0",
   "chardet 3.0.4 py36h420ce6e_1",
   "click 7.0 py_0",
   "clyent 1.2.2 py_1",
   "conda 4.5.11 py36_1000",
   "conda-build 3.15.1 py36_0",
   "conda-env 2.6.0 h36134e3_1",
   "conda-forge-ci-setup 2.1.0 py36_0",
   "console_shortcut 0.1.1 h6bb2dd7_3",
   "cryptography 2.3.1 py36h74b6da3_1000",
   "decorator 4.3.0 py_0",
   "filelock 3.0.10 py_0",
   "glob2 0.6 py_0",
   "idna 2.6 py36h148d497_1",
   "ipython_genutils 0.2.0 py_1",
   "jinja2 2.10 py_1",
   "jsonschema 3.0.0a3 py36_1000",
   "jupyter_core 4.4.0 py_0",
   "markupsafe 1.1.0 py36hfa6e2cd_1000",
   "menuinst 1.4.14 py36hfa6e2cd_0",
   "nbformat 4.4.0 py_1",
   "openssl 1.0.2p hfa6e2cd_1001",
   "pip 10.0.1 py36_0",
   "pkginfo 1.4.2 py_1",
   "psutil 5.4.8 py36hfa6e2cd_1000",
   "pycosat 0.6.3 py36h413d8a4_0",
   "pycparser 2.18 py36hd053e01_1",
   "pyopenssl 18.0.0 py36_0",
   "pyrsistent 0.14.5 py36hfa6e2cd_1001",
   "pysocks 1.6.8 py36_0",
   "python 3.6.5 h0c2934d_0",
   "python-dateutil 2.7.5 py_0",
   "pytz 2018.7 py_0",
   "pywin32 223 py36hfa6e2cd_1",
   "pyyaml 3.13 py36hfa6e2cd_1001",
   "requests 2.18.4 py36h4371aae_1",
   "ruamel_yaml 0.15.37 py36hfa6e2cd_2",
   "setuptools 39.2.0 py36_0",
   "six 1.11.0 py36h4db2310_1",
   "tqdm 4.28.1 py_0",
   "traitlets 4.3.2 py36_1000",
   "urllib3 1.22 py36h276f60a_0",
   "vc 14.1 h0510ff6_4",
   "vs2008_express_vc_python_patch 1.0.0 0",
   "vs2015_runtime 14.15.26706 h3a45250_0",
   "wheel 0.31.1 py36_0",
   "wincertstore 0.2 py36h7fe50ca_0",
   "win_inet_pton 1.0.1 py36he67d7fd_1",
   "yaml 0.1.7 vc14_0"
  ],
  "summary": "Qt Cryptographic Architecture (QCA) provides a straightforward and cross-platform crypto API, using Qt datatypes and conventions.",
  "tags": []
 },
 "conda_build_config": {
  "c_compiler": "vs2008",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "vs2008",
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": "python",
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "qt": {
    "max_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x.x",
    "min_pin": "x.x.x"
   }
  },
  "python": "3.6",
  "qt": "5.6",
  "r_base": "3.4",
  "target_platform": "win-64",
  "vc": "14",
  "zip_keys": [
   [
    "c_compiler",
    "cxx_compiler"
   ]
  ]
 },
 "files": [
  "Library/bin/mozcerts-qt5.exe",
  "Library/bin/qca-qt5.dll",
  "Library/bin/qcatool-qt5.exe",
  "Library/certs/rootcerts.pem",
  "Library/include/Qca-qt5/QtCrypto/QtCrypto",
  "Library/include/Qca-qt5/QtCrypto/qca.h",
  "Library/include/Qca-qt5/QtCrypto/qca_basic.h",
  "Library/include/Qca-qt5/QtCrypto/qca_cert.h",
  "Library/include/Qca-qt5/QtCrypto/qca_core.h",
  "Library/include/Qca-qt5/QtCrypto/qca_export.h",
  "Library/include/Qca-qt5/QtCrypto/qca_keystore.h",
  "Library/include/Qca-qt5/QtCrypto/qca_publickey.h",
  "Library/include/Qca-qt5/QtCrypto/qca_safetimer.h",
  "Library/include/Qca-qt5/QtCrypto/qca_securelayer.h",
  "Library/include/Qca-qt5/QtCrypto/qca_securemessage.h",
  "Library/include/Qca-qt5/QtCrypto/qca_support.h",
  "Library/include/Qca-qt5/QtCrypto/qca_textfilter.h",
  "Library/include/Qca-qt5/QtCrypto/qca_tools.h",
  "Library/include/Qca-qt5/QtCrypto/qca_version.h",
  "Library/include/Qca-qt5/QtCrypto/qcaprovider.h",
  "Library/include/Qca-qt5/QtCrypto/qpipe.h",
  "Library/lib/cmake/Qca-qt5/Qca-qt5Config.cmake",
  "Library/lib/cmake/Qca-qt5/Qca-qt5ConfigVersion.cmake",
  "Library/lib/cmake/Qca-qt5/Qca-qt5Targets-release.cmake",
  "Library/lib/cmake/Qca-qt5/Qca-qt5Targets.cmake",
  "Library/lib/qca-qt5.lib",
  "Library/mkspecs/features/crypto.prf",
  "Library/plugins/crypto/qca-gnupg.dll",
  "Library/plugins/crypto/qca-logger.dll",
  "Library/plugins/crypto/qca-ossl.dll",
  "Library/plugins/crypto/qca-softstore.dll",
  "Library/share/man/man1/qcatool-qt5.1"
 ],
 "index": {
  "arch": "x86_64",
  "build": "h4cbc711_1002",
  "build_number": 1002,
  "depends": [
   "qt >=5.6.2,<5.7.0a0",
   "vc 9.*"
  ],
  "license": "LGPL-2.1",
  "name": "qca",
  "platform": "win",
  "subdir": "win-64",
  "timestamp": 1542379462049,
  "version": "2.1.3"
 },
 "metadata_version": 1,
 "name": "qca",
 "raw_recipe": "{% set name = \"qca\" %}\n{% set version = \"2.1.3\" %}\n{% set md5 = \"bd646d08fdc1d9be63331a836ecd528f\" %}\n\npackage:\n  name: qca\n  version: {{ version }}\n\nsource:\n  fn: v{{ version }}.tar.gz\n  url: https://github.com/KDE/qca/archive/v{{ version }}.tar.gz\n  md5: {{ md5 }}\n\nbuild:\n  number: 1002\n\nrequirements:\n  build:\n    - cmake\n    - pkg-config  # [unix]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - qt\n  run:\n    - qt\n\ntest:\n  commands:\n    - test -f ${PREFIX}/lib/libqca-qt5.so  # [linux]\n    - test -d ${PREFIX}/lib/qca-qt5.framework  # [osx]\n    - if not exist %LIBRARY_BIN%\\\\qca-qt5.dll exit 1  # [win]\n\nabout:\n  home: http://delta.affinix.com/qca/\n  license: LGPL-2.1\n  license_file: COPYING\n  summary: Qt Cryptographic Architecture (QCA) provides a straightforward and cross-platform crypto API, using Qt datatypes and conventions.\n  description: |\n    Taking a hint from the similarly-named Java Cryptography Architecture, QCA\n    aims to provide a straightforward and cross-platform crypto API, using Qt\n    datatypes and conventions. QCA separates the API from the implementation,\n    using plugins known as Providers. The advantage of this model is to allow\n    applications to avoid linking to or explicitly depending on any particular\n    cryptographic library. This allows one to easily change or upgrade crypto\n    implementations without even needing to recompile the application! QCA\n    should work everywhere Qt does, including Windows/Unix/MacOSX.\n  doc_url: http://delta.affinix.com/docs/qca/\n  dev_url: https://quickgit.kde.org/?p=qca.git\n\nextra:\n  recipe-maintainers:\n    - ceholden\n",
 "rendered_recipe": {
  "about": {
   "description": "Taking a hint from the similarly-named Java Cryptography Architecture, QCA\naims to provide a straightforward and cross-platform crypto API, using Qt\ndatatypes and conventions. QCA separates the API from the implementation,\nusing plugins known as Providers. The advantage of this model is to allow\napplications to avoid linking to or explicitly depending on any particular\ncryptographic library. This allows one to easily change or upgrade crypto\nimplementations without even needing to recompile the application! QCA\nshould work everywhere Qt does, including Windows/Unix/MacOSX.\n",
   "dev_url": "https://quickgit.kde.org/?p=qca.git",
   "doc_url": "http://delta.affinix.com/docs/qca/",
   "home": "http://delta.affinix.com/qca/",
   "license": "LGPL-2.1",
   "license_file": "COPYING",
   "summary": "Qt Cryptographic Architecture (QCA) provides a straightforward and cross-platform crypto API, using Qt datatypes and conventions."
  },
  "build": {
   "number": "1002",
   "string": "h4cbc711_1002"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ceholden"
   ]
  },
  "package": {
   "name": "qca",
   "version": "2.1.3"
  },
  "requirements": {
   "build": [
    "cmake 3.12.4 he025d50_1000",
    "vs2008_win-64 9.00.30729.1 hb7fc0b5_1",
    "vs2015_runtime 14.0.25420 0"
   ],
   "host": [
    "ca-certificates 2018.10.15 ha4d7672_0",
    "icu 58.2 vc9_0",
    "jpeg 9b vc9_2",
    "libpng 1.6.34 vc9_0",
    "openssl 1.0.2o vc9_0",
    "qt 5.6.2 vc9_2",
    "sqlite 3.13.0 vc9_1",
    "vc 9 0",
    "vs2008_runtime 9.0.30729.6161 0",
    "zlib 1.2.11 vc9_0"
   ],
   "run": [
    "qt >=5.6.2,<5.7.0a0",
    "vc 9.*"
   ]
  },
  "source": {
   "fn": "v2.1.3.tar.gz",
   "md5": "bd646d08fdc1d9be63331a836ecd528f",
   "url": "https://github.com/KDE/qca/archive/v2.1.3.tar.gz"
  },
  "test": {
   "commands": [
    "if not exist %LIBRARY_BIN%\\\\qca-qt5.dll exit 1"
   ]
  }
 },
 "version": "2.1.3"
}