{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.17.5",
  "conda_private": false,
  "conda_version": "4.5.12",
  "description": "This package implements the Leiden algorithm in C++ and\nexposes it to python. It relies on (python-)igraph for it to\nfunction. Besides the relative flexibility of the\nimplementation, it also scales well, and can be run on graphs\nof millions of nodes (as long as they can fit in memory).\nThe core function is find_partition which is able to optimize a\nvariety of quality functions using the Leiden algorithm.\n",
  "dev_url": "https://github.com/vtraag/leidenalg",
  "doc_url": "http://leidenalg.readthedocs.io/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "vtraag"
   ]
  },
  "home": "https://github.com/vtraag/leidenalg",
  "identifiers": [],
  "keywords": [],
  "license": "GPLv3",
  "license_family": "GPL",
  "license_file": "LICENSE",
  "root_pkgs": [
   "filelock 3.0.10 py_0",
   "conda-build 3.17.5 py36_0",
   "libstdcxx-ng 7.2.0 hdf63c60_3",
   "pyrsistent 0.14.9 py36h470a237_0",
   "bzip2 1.0.6 h470a237_2",
   "sqlite 3.26.0 hb1c47c0_0",
   "conda 4.5.12 py36_1000",
   "asn1crypto 0.24.0 py36_1003",
   "python-libarchive-c 2.8 py36_1004",
   "libssh2 1.8.0 h5b517e9_3",
   "krb5 1.16.3 hbb41f41_0",
   "libedit 3.1.20170329 haf1bffa_1",
   "tqdm 4.29.1 py_0",
   "pytz 2018.9 py_0",
   "readline 7.0 haf1bffa_1",
   "anaconda-client 1.7.1 py_0",
   "xz 5.2.4 h470a237_1",
   "pycosat 0.6.3 py36h470a237_1",
   "pkginfo 1.5.0.1 py_0",
   "zlib 1.2.11 h470a237_4",
   "yaml 0.1.7 h470a237_1",
   "curl 7.63.0 h74213dd_0",
   "soupsieve 1.7.1 py36_1000",
   "markupsafe 1.1.0 py36h470a237_0",
   "pycparser 2.19 py_0",
   "attrs 18.2.0 py_0",
   "ca-certificates 2018.11.29 ha4d7672_0",
   "tini 0.18.0 h470a237_1",
   "pyyaml 3.13 py36h470a237_1",
   "setuptools 40.6.3 py36_0",
   "beautifulsoup4 4.7.1 py36_1001",
   "six 1.12.0 py36_1000",
   "cryptography-vectors 2.3.1 py36_1000",
   "pysocks 1.6.8 py36_1002",
   "requests 2.21.0 py36_1000",
   "decorator 4.3.0 py_0",
   "glob2 0.6 py_0",
   "psutil 5.4.8 py36h470a237_0",
   "python-dateutil 2.7.5 py_0",
   "jinja2 2.10 py_1",
   "cryptography 2.3.1 py36hdffb7b8_0",
   "nbformat 4.4.0 py_1",
   "chardet 3.0.4 py36_1003",
   "traitlets 4.3.2 py36_1000",
   "conda-env 2.6.0 1",
   "wheel 0.32.3 py36_0",
   "patchelf 0.9 hfc679d8_2",
   "tk 8.6.9 ha92aebf_0",
   "certifi 2018.11.29 py36_1000",
   "pip 18.1 py36_1000",
   "libcurl 7.63.0 hbdb9355_0",
   "perl 5.26.2 h470a237_0",
   "ncurses 6.1 hfc679d8_2",
   "git 2.20.1 pl526hbb17d3c_0",
   "ipython_genutils 0.2.0 py_1",
   "ruamel_yaml 0.15.71 py36h470a237_0",
   "libffi 3.2.1 hfc679d8_5",
   "jupyter_core 4.4.0 py_0",
   "cffi 1.11.5 py36h5e8e0c9_1",
   "urllib3 1.24.1 py36_1000",
   "pyopenssl 18.0.0 py36_1000",
   "py-lief 0.9.0 py36h1532aa0_0",
   "expat 2.2.5 hfc679d8_2",
   "liblief 0.9.0 h1532aa0_0",
   "jsonschema 3.0.0a3 py36_1000",
   "idna 2.8 py36_1000",
   "libiconv 1.15 h470a237_4",
   "gettext 0.19.8.1 h5e8e0c9_1",
   "python 3.6.7 h5001a0f_1",
   "gosu 1.10 h81701ea_1001",
   "clyent 1.2.2 py_1",
   "libarchive 3.3.3 h823be47_0",
   "conda-forge-ci-setup 2.1.1 py36_0",
   "libgcc-ng 7.3.0 hdf63c60_0",
   "click 7.0 py_0",
   "openssl 1.0.2p h14c3975_1002"
  ],
  "summary": "Implementation of the Leiden algorithm for various methods for use with igraph in python.",
  "tags": []
 },
 "conda_build_config": {
  "c_compiler": "gcc",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "condaforge/linux-anvil-comp7",
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": "numpy",
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x.x",
    "min_pin": "x.x.x"
   }
  },
  "python": "3.7",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "files": [
  "lib/python3.7/site-packages/leidenalg-0.7.0.dist-info/INSTALLER",
  "lib/python3.7/site-packages/leidenalg-0.7.0.dist-info/LICENSE",
  "lib/python3.7/site-packages/leidenalg-0.7.0.dist-info/METADATA",
  "lib/python3.7/site-packages/leidenalg-0.7.0.dist-info/RECORD",
  "lib/python3.7/site-packages/leidenalg-0.7.0.dist-info/WHEEL",
  "lib/python3.7/site-packages/leidenalg/Optimiser.py",
  "lib/python3.7/site-packages/leidenalg/VertexPartition.py",
  "lib/python3.7/site-packages/leidenalg/__init__.py",
  "lib/python3.7/site-packages/leidenalg/_c_leiden.cpython-37m-x86_64-linux-gnu.so",
  "lib/python3.7/site-packages/leidenalg/_version.py",
  "lib/python3.7/site-packages/leidenalg/functions.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py37hf484d3e_1",
  "build_number": 1,
  "depends": [
   "igraph >=0.7.1,<0.8.0a0",
   "libgcc-ng >=7.3.0",
   "libstdcxx-ng >=7.3.0",
   "python >=3.7,<3.8.0a0",
   "python-igraph",
   "setuptools"
  ],
  "license": "GPLv3",
  "license_family": "GPL",
  "name": "leidenalg",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1547891665234,
  "version": "0.7.0"
 },
 "metadata_version": 1,
 "name": "leidenalg",
 "raw_recipe": "{% set name = \"leidenalg\" %}\n{% set version = \"0.7.0\" %}\n{% set sha256 = \"c1c92c5638ef0ccf67ea89ed311cf19116a82e67bf1a015a3e65f00653a3dc95\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1\n  script: python -m pip install --no-deps --ignore-installed .\n  # the main dependency 'igraph' is not windows ready yet\n  skip: True  # [win]\n\nrequirements:\n  build:\n    - pkg-config\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - python\n    - pip\n    - setuptools\n    - igraph\n    - python-igraph\n  run:\n    # We need to include setuptools have access to the pkg_resources,\n    # see https://stackoverflow.com/questions/7446187/no-module-named-pkg-resources\n    - setuptools\n    - python\n    - igraph\n    - python-igraph\n\ntest:\n  imports:\n    - igraph\n    - leidenalg \n\nabout:\n  home: https://github.com/vtraag/leidenalg\n  license: GPLv3\n  license_family: GPL\n  license_file: LICENSE\n  summary: \"Implementation of the Leiden algorithm for various methods for use with igraph in python.\"\n  description: |\n    This package implements the Leiden algorithm in C++ and\n    exposes it to python. It relies on (python-)igraph for it to\n    function. Besides the relative flexibility of the\n    implementation, it also scales well, and can be run on graphs\n    of millions of nodes (as long as they can fit in memory).\n    The core function is find_partition which is able to optimize a\n    variety of quality functions using the Leiden algorithm.\n  doc_url: http://leidenalg.readthedocs.io/\n  dev_url: https://github.com/vtraag/leidenalg\n\nextra:\n  recipe-maintainers:\n    - vtraag \n",
 "rendered_recipe": {
  "about": {
   "description": "This package implements the Leiden algorithm in C++ and\nexposes it to python. It relies on (python-)igraph for it to\nfunction. Besides the relative flexibility of the\nimplementation, it also scales well, and can be run on graphs\nof millions of nodes (as long as they can fit in memory).\nThe core function is find_partition which is able to optimize a\nvariety of quality functions using the Leiden algorithm.\n",
   "dev_url": "https://github.com/vtraag/leidenalg",
   "doc_url": "http://leidenalg.readthedocs.io/",
   "home": "https://github.com/vtraag/leidenalg",
   "license": "GPLv3",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Implementation of the Leiden algorithm for various methods for use with igraph in python."
  },
  "build": {
   "number": "1",
   "script": "python -m pip install --no-deps --ignore-installed .",
   "string": "py37hf484d3e_1"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "vtraag"
   ]
  },
  "package": {
   "name": "leidenalg",
   "version": "0.7.0"
  },
  "requirements": {
   "build": [
    "binutils_impl_linux-64 2.31.1 h6176602_1",
    "binutils_linux-64 2.31.1 h6176602_3",
    "gcc_impl_linux-64 7.3.0 habb00fd_1",
    "gcc_linux-64 7.3.0 h553295d_3",
    "gxx_impl_linux-64 7.3.0 hdf63c60_1",
    "gxx_linux-64 7.3.0 h553295d_3",
    "libgcc-ng 7.3.0 hdf63c60_0",
    "libstdcxx-ng 7.3.0 hdf63c60_0",
    "pkg-config 0.29.2 h14c3975_1004"
   ],
   "host": [
    "bzip2 1.0.6 h14c3975_1002",
    "ca-certificates 2018.11.29 ha4d7672_0",
    "cairo 1.14.12 ha4e643d_1006",
    "certifi 2018.11.29 py37_1000",
    "fontconfig 2.13.1 h2176d3f_1000",
    "freetype 2.9.1 h3cfcefd_1004",
    "gettext 0.19.8.1 h9745a5d_1001",
    "glib 2.58.2 hf63aee3_1001",
    "gmp 6.1.2 hf484d3e_1000",
    "icu 58.2 hf484d3e_1000",
    "igraph 0.7.1 h2166141_1005",
    "libffi 3.2.1 hf484d3e_1005",
    "libgcc-ng 7.3.0 hdf63c60_0",
    "libgfortran-ng 7.2.0 hdf63c60_3",
    "libiconv 1.15 h14c3975_1004",
    "libpng 1.6.36 h84994c4_1000",
    "libstdcxx-ng 7.3.0 hdf63c60_0",
    "libuuid 2.32.1 h14c3975_1000",
    "libxcb 1.13 h14c3975_1002",
    "libxml2 2.9.8 h143f9aa_1005",
    "ncurses 6.1 hf484d3e_1002",
    "openssl 1.0.2p h14c3975_1002",
    "pcre 8.41 hf484d3e_1003",
    "pip 18.1 py37_1000",
    "pixman 0.34.0 h14c3975_1003",
    "pthread-stubs 0.4 h14c3975_1001",
    "pycairo 1.18.0 py37h1b9232e_1000",
    "python 3.7.1 hd21baee_1000",
    "python-igraph 0.7.1.post6 py37h14c3975_1005",
    "readline 7.0 hf8c457e_1001",
    "setuptools 40.6.3 py37_0",
    "sqlite 3.26.0 h67949de_1000",
    "tk 8.6.9 h84994c4_1000",
    "wheel 0.32.3 py37_0",
    "xorg-kbproto 1.0.7 h14c3975_1002",
    "xorg-libice 1.0.9 h14c3975_1004",
    "xorg-libsm 1.2.3 h4937e3b_1000",
    "xorg-libx11 1.6.6 h14c3975_1000",
    "xorg-libxau 1.0.8 h14c3975_1006",
    "xorg-libxdmcp 1.1.2 h14c3975_1007",
    "xorg-libxext 1.3.3 h14c3975_1004",
    "xorg-libxrender 0.9.10 h14c3975_1002",
    "xorg-renderproto 0.11.1 h14c3975_1002",
    "xorg-xextproto 7.3.0 h14c3975_1002",
    "xorg-xproto 7.0.31 h14c3975_1007",
    "xz 5.2.4 h14c3975_1001",
    "zlib 1.2.11 h14c3975_1004"
   ],
   "run": [
    "igraph >=0.7.1,<0.8.0a0",
    "libgcc-ng >=7.3.0",
    "libstdcxx-ng >=7.3.0",
    "python >=3.7,<3.8.0a0",
    "python-igraph",
    "setuptools"
   ]
  },
  "source": {
   "fn": "leidenalg-0.7.0.tar.gz",
   "sha256": "c1c92c5638ef0ccf67ea89ed311cf19116a82e67bf1a015a3e65f00653a3dc95",
   "url": "https://pypi.io/packages/source/l/leidenalg/leidenalg-0.7.0.tar.gz"
  },
  "test": {
   "imports": [
    "igraph",
    "leidenalg"
   ]
  }
 },
 "version": "0.7.0"
}