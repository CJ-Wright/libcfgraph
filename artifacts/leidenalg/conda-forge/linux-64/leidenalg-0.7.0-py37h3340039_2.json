{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.19.0",
  "conda_private": false,
  "conda_version": "4.8.3",
  "description": "This package implements the Leiden algorithm in C++ and\nexposes it to python. It relies on (python-)igraph for it to\nfunction. Besides the relative flexibility of the\nimplementation, it also scales well, and can be run on graphs\nof millions of nodes (as long as they can fit in memory).\nThe core function is find_partition which is able to optimize a\nvariety of quality functions using the Leiden algorithm.\n",
  "dev_url": "https://github.com/vtraag/leidenalg",
  "doc_url": "http://leidenalg.readthedocs.io/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "vtraag"
   ]
  },
  "home": "https://github.com/vtraag/leidenalg",
  "identifiers": [],
  "keywords": [],
  "license": "GPLv3",
  "license_family": "GPL",
  "license_file": "LICENSE",
  "root_pkgs": [
   "importlib-metadata 1.5.0 py37hc8dfbb8_1",
   "pysocks 1.7.1 py37hc8dfbb8_1",
   "python-dateutil 2.8.1 py_0",
   "attrs 19.3.0 py_0",
   "jsonschema 3.2.0 py37hc8dfbb8_1",
   "liblief 0.9.0 hf8a498c_1",
   "psutil 5.7.0 py37h8f50634_1",
   "clyent 1.2.2 py_1",
   "libffi 3.2.1 he1b5a44_1006",
   "py-lief 0.9.0 py37he1b5a44_1",
   "wheel 0.34.2 py_1",
   "pycparser 2.20 py_0",
   "perl 5.26.2 h516909a_1006",
   "urllib3 1.25.7 py37hc8dfbb8_1",
   "libiconv 1.15 h516909a_1005",
   "soupsieve 1.9.4 py37hc8dfbb8_1",
   "ipython_genutils 0.2.0 py_1",
   "zipp 3.1.0 py_0",
   "glob2 0.7 py_0",
   "tqdm 4.43.0 py_0",
   "markupsafe 1.1.1 py37h8f50634_1",
   "pytz 2019.3 py_0",
   "libstdcxx-ng 9.2.0 hdf63c60_2",
   "cffi 1.14.0 py37hd463f26_0",
   "idna 2.9 py_1",
   "tini 0.18.0 h14c3975_1001",
   "gosu 1.10 h81701ea_1001",
   "libgomp 9.2.0 h24d8f2e_2",
   "jinja2 2.11.1 py_0",
   "ruamel_yaml 0.15.80 py37h8f50634_1001",
   "icu 64.2 he1b5a44_1",
   "chardet 3.0.4 py37hc8dfbb8_1006",
   "ld_impl_linux-64 2.34 h53a641e_0",
   "python_abi 3.7 1_cp37m",
   "curl 7.68.0 hf8cf82a_0",
   "conda 4.8.3 py37hc8dfbb8_1",
   "patch 2.7.6 h14c3975_1001",
   "python 3.7.6 h357f687_4_cpython",
   "lz4-c 1.8.3 he1b5a44_1001",
   "conda-package-handling 1.6.0 py37h8f50634_2",
   "libcurl 7.68.0 hda55be3_0",
   "importlib_metadata 1.5.0 1",
   "jupyter_core 4.6.3 py37hc8dfbb8_1",
   "traitlets 4.3.3 py37hc8dfbb8_1",
   "libedit 3.1.20170329 hf8c457e_1001",
   "gettext 0.19.8.1 hc5be6a0_1002",
   "anaconda-client 1.7.2 py_0",
   "nbformat 5.0.4 py_0",
   "setuptools 46.0.0 py37hc8dfbb8_2",
   "libxml2 2.9.10 hee79883_0",
   "certifi 2019.11.28 py37hc8dfbb8_1",
   "asn1crypto 1.3.0 py37_0",
   "pkginfo 1.5.0.1 py_0",
   "readline 8.0 hf8c457e_0",
   "krb5 1.16.4 h2fd8d38_0",
   "pcre 8.44 he1b5a44_0",
   "yaml 0.2.2 h516909a_1",
   "libgcc-ng 9.2.0 h24d8f2e_2",
   "zlib 1.2.11 h516909a_1006",
   "sqlite 3.30.1 hcee41ef_0",
   "patchelf 0.10 he1b5a44_0",
   "conda-build 3.19.0 py37hc8dfbb8_0",
   "openssl 1.1.1d h516909a_0",
   "_openmp_mutex 4.5 0_gnu",
   "expat 2.2.9 he1b5a44_2",
   "git 2.25.0 pl526hce37bd2_0",
   "libarchive 3.3.3 hc47fbbf_1007",
   "filelock 3.0.10 py_0",
   "pycosat 0.6.3 py37h8f50634_1004",
   "_libgcc_mutex 0.1 conda_forge",
   "beautifulsoup4 4.8.2 py37_0",
   "pip 20.0.2 py_2",
   "pyrsistent 0.15.7 py37h8f50634_1",
   "bzip2 1.0.8 h516909a_2",
   "ncurses 6.1 hf484d3e_1002",
   "python-libarchive-c 2.9 py37_0",
   "decorator 4.4.2 py_0",
   "six 1.14.0 py_1",
   "xz 5.2.4 h14c3975_1001",
   "ca-certificates 2019.11.28 hecc5488_0",
   "requests 2.23.0 pyh8c360ce_2",
   "libssh2 1.8.2 h22169c7_2",
   "ripgrep 11.0.2 h516909a_3",
   "tk 8.6.10 hed695b0_0",
   "pyyaml 5.3 py37h8f50634_1",
   "cryptography 2.8 py37hb09aad4_2",
   "zstd 1.4.4 h3b9ef0a_1",
   "pyopenssl 19.1.0 py_1",
   "lzo 2.10 h14c3975_1000",
   "click 7.1.1 pyh8c360ce_0",
   "conda-forge-ci-setup 2.5.5 py37_0",
   "conda-env 2.6.0 1"
  ],
  "summary": "Implementation of the Leiden algorithm for various methods for use with igraph in python.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "c_compiler_version": "7",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "7",
  "docker_image": "condaforge/linux-anvil-comp7",
  "extend_keys": [
   "ignore_version",
   "ignore_build_only_deps",
   "pin_run_as_build",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7.* *_cpython",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "files": [
  "lib/python3.7/site-packages/leidenalg-0.7.0.dist-info/INSTALLER",
  "lib/python3.7/site-packages/leidenalg-0.7.0.dist-info/LICENSE",
  "lib/python3.7/site-packages/leidenalg-0.7.0.dist-info/METADATA",
  "lib/python3.7/site-packages/leidenalg-0.7.0.dist-info/RECORD",
  "lib/python3.7/site-packages/leidenalg-0.7.0.dist-info/WHEEL",
  "lib/python3.7/site-packages/leidenalg/Optimiser.py",
  "lib/python3.7/site-packages/leidenalg/VertexPartition.py",
  "lib/python3.7/site-packages/leidenalg/__init__.py",
  "lib/python3.7/site-packages/leidenalg/_c_leiden.cpython-37m-x86_64-linux-gnu.so",
  "lib/python3.7/site-packages/leidenalg/_version.py",
  "lib/python3.7/site-packages/leidenalg/functions.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py37h3340039_2",
  "build_number": 2,
  "depends": [
   "igraph >=0.7.1,<0.8.0a0",
   "libgcc-ng >=7.3.0",
   "libstdcxx-ng >=7.3.0",
   "python >=3.7,<3.8.0a0",
   "python-igraph",
   "python_abi 3.7.* *_cp37m",
   "setuptools"
  ],
  "license": "GPLv3",
  "license_family": "GPL",
  "name": "leidenalg",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1584547159895,
  "version": "0.7.0"
 },
 "metadata_version": 1,
 "name": "leidenalg",
 "raw_recipe": "{% set name = \"leidenalg\" %}\n{% set version = \"0.7.0\" %}\n{% set sha256 = \"c1c92c5638ef0ccf67ea89ed311cf19116a82e67bf1a015a3e65f00653a3dc95\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 2\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  # the main dependency 'igraph' is not windows ready yet\n  skip: True  # [win]\n\nrequirements:\n  build:\n    - pkg-config\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - python\n    - pip\n    - setuptools\n    - igraph\n    - python-igraph\n  run:\n    # We need to include setuptools have access to the pkg_resources,\n    # see https://stackoverflow.com/questions/7446187/no-module-named-pkg-resources\n    - setuptools\n    - python\n    - igraph\n    - python-igraph\n\ntest:\n  imports:\n    - igraph\n    - leidenalg \n\nabout:\n  home: https://github.com/vtraag/leidenalg\n  license: GPLv3\n  license_family: GPL\n  license_file: LICENSE\n  summary: \"Implementation of the Leiden algorithm for various methods for use with igraph in python.\"\n  description: |\n    This package implements the Leiden algorithm in C++ and\n    exposes it to python. It relies on (python-)igraph for it to\n    function. Besides the relative flexibility of the\n    implementation, it also scales well, and can be run on graphs\n    of millions of nodes (as long as they can fit in memory).\n    The core function is find_partition which is able to optimize a\n    variety of quality functions using the Leiden algorithm.\n  doc_url: http://leidenalg.readthedocs.io/\n  dev_url: https://github.com/vtraag/leidenalg\n\nextra:\n  recipe-maintainers:\n    - vtraag \n",
 "rendered_recipe": {
  "about": {
   "description": "This package implements the Leiden algorithm in C++ and\nexposes it to python. It relies on (python-)igraph for it to\nfunction. Besides the relative flexibility of the\nimplementation, it also scales well, and can be run on graphs\nof millions of nodes (as long as they can fit in memory).\nThe core function is find_partition which is able to optimize a\nvariety of quality functions using the Leiden algorithm.\n",
   "dev_url": "https://github.com/vtraag/leidenalg",
   "doc_url": "http://leidenalg.readthedocs.io/",
   "home": "https://github.com/vtraag/leidenalg",
   "license": "GPLv3",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Implementation of the Leiden algorithm for various methods for use with igraph in python."
  },
  "build": {
   "number": "2",
   "script": "/home/conda/feedstock_root/build_artifacts/leidenalg_1584547004288/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p/bin/python -m pip install . --no-deps -vv",
   "string": "py37h3340039_2"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "vtraag"
   ]
  },
  "package": {
   "name": "leidenalg",
   "version": "0.7.0"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 0_gnu",
    "binutils_impl_linux-64 2.33.1 h53a641e_8",
    "binutils_linux-64 2.33.1 h9595d00_17",
    "gcc_impl_linux-64 7.3.0 hd420e75_5",
    "gcc_linux-64 7.3.0 h553295d_17",
    "gxx_impl_linux-64 7.3.0 hdf63c60_5",
    "gxx_linux-64 7.3.0 h553295d_17",
    "ld_impl_linux-64 2.33.1 h53a641e_8",
    "libgcc-ng 9.2.0 h24d8f2e_2",
    "libgomp 9.2.0 h24d8f2e_2",
    "libstdcxx-ng 9.2.0 hdf63c60_2",
    "pkg-config 0.29.2 h516909a_1006"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 0_gnu",
    "ca-certificates 2019.11.28 hecc5488_0",
    "cairo 1.16.0 hfb77d84_1002",
    "certifi 2019.11.28 py37hc8dfbb8_1",
    "fontconfig 2.13.1 h86ecdb6_1001",
    "freetype 2.10.0 he983fc9_1",
    "gettext 0.19.8.1 hc5be6a0_1002",
    "glib 2.58.3 py37he00f558_1003",
    "gmp 6.2.0 he1b5a44_2",
    "icu 64.2 he1b5a44_1",
    "igraph 0.7.1 h9e3b1fc_1007",
    "ld_impl_linux-64 2.34 h53a641e_0",
    "libffi 3.2.1 he1b5a44_1006",
    "libgcc-ng 9.2.0 h24d8f2e_2",
    "libgfortran-ng 7.3.0 hdf63c60_5",
    "libgomp 9.2.0 h24d8f2e_2",
    "libiconv 1.15 h516909a_1005",
    "libpng 1.6.37 hed695b0_0",
    "libstdcxx-ng 9.2.0 hdf63c60_2",
    "libuuid 2.32.1 h14c3975_1000",
    "libxcb 1.13 h14c3975_1002",
    "libxml2 2.9.10 hee79883_0",
    "ncurses 6.1 hf484d3e_1002",
    "openssl 1.1.1d h516909a_0",
    "pcre 8.44 he1b5a44_0",
    "pip 20.0.2 py_2",
    "pixman 0.38.0 h516909a_1003",
    "pthread-stubs 0.4 h14c3975_1001",
    "pycairo 1.19.1 py37h01af8b0_1",
    "python 3.7.6 h357f687_4_cpython",
    "python-igraph 0.8.0 py37hb78272c_1",
    "python_abi 3.7 1_cp37m",
    "readline 8.0 hf8c457e_0",
    "setuptools 46.0.0 py37hc8dfbb8_2",
    "sqlite 3.30.1 hcee41ef_0",
    "texttable 1.6.2 py_0",
    "tk 8.6.10 hed695b0_0",
    "wheel 0.34.2 py_1",
    "xorg-kbproto 1.0.7 h14c3975_1002",
    "xorg-libice 1.0.10 h516909a_0",
    "xorg-libsm 1.2.3 h84519dc_1000",
    "xorg-libx11 1.6.9 h516909a_0",
    "xorg-libxau 1.0.9 h14c3975_0",
    "xorg-libxdmcp 1.1.3 h516909a_0",
    "xorg-libxext 1.3.4 h516909a_0",
    "xorg-libxrender 0.9.10 h516909a_1002",
    "xorg-renderproto 0.11.1 h14c3975_1002",
    "xorg-xextproto 7.3.0 h14c3975_1002",
    "xorg-xproto 7.0.31 h14c3975_1007",
    "xz 5.2.4 h14c3975_1001",
    "zlib 1.2.11 h516909a_1006"
   ],
   "run": [
    "igraph >=0.7.1,<0.8.0a0",
    "libgcc-ng >=7.3.0",
    "libstdcxx-ng >=7.3.0",
    "python >=3.7,<3.8.0a0",
    "python-igraph",
    "python_abi 3.7.* *_cp37m",
    "setuptools"
   ]
  },
  "source": {
   "fn": "leidenalg-0.7.0.tar.gz",
   "sha256": "c1c92c5638ef0ccf67ea89ed311cf19116a82e67bf1a015a3e65f00653a3dc95",
   "url": "https://pypi.io/packages/source/l/leidenalg/leidenalg-0.7.0.tar.gz"
  },
  "test": {
   "imports": [
    "igraph",
    "leidenalg"
   ]
  }
 },
 "version": "0.7.0"
}