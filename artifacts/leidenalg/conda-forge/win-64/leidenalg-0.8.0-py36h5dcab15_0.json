{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.19.2",
  "conda_private": false,
  "conda_version": "4.8.3",
  "description": "This package implements the Leiden algorithm in C++ and\nexposes it to python. It relies on (python-)igraph for it to\nfunction. Besides the relative flexibility of the\nimplementation, it also scales well, and can be run on graphs\nof millions of nodes (as long as they can fit in memory).\nThe core function is find_partition which is able to optimize a\nvariety of quality functions using the Leiden algorithm.\n",
  "dev_url": "https://github.com/vtraag/leidenalg",
  "doc_url": "http://leidenalg.readthedocs.io/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "vtraag"
   ]
  },
  "home": "https://github.com/vtraag/leidenalg",
  "identifiers": [],
  "keywords": [],
  "license": "GPLv3",
  "license_family": "GPL",
  "license_file": "LICENSE",
  "root_pkgs": [
   "anaconda-client 1.7.2 py_0",
   "attrs 19.3.0 py_0",
   "beautifulsoup4 4.9.0 py36h9f0ad1d_0",
   "brotlipy 0.7.0 py36h779f372_1000",
   "bzip2 1.0.8 hfa6e2cd_2",
   "ca-certificates 2020.4.5.1 hecc5488_0",
   "certifi 2020.4.5.1 py36h9f0ad1d_0",
   "cffi 1.14.0 py36ha419a9e_0",
   "chardet 3.0.4 py36h9f0ad1d_1006",
   "click 7.1.1 pyh8c360ce_0",
   "clyent 1.2.2 py_1",
   "conda 4.8.3 py36h9f0ad1d_1",
   "conda-build 3.19.2 py36h9f0ad1d_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 2.8.3 py36h9f0ad1d_0",
   "conda-package-handling 1.6.0 py36h70ac491_2",
   "console_shortcut 0.1.1 3",
   "cryptography 2.8 py36hb32ad35_1",
   "decorator 4.4.2 py_0",
   "filelock 3.0.10 py_0",
   "glob2 0.7 py_0",
   "idna 2.9 py_1",
   "importlib-metadata 1.6.0 py36h9f0ad1d_0",
   "importlib_metadata 1.6.0 0",
   "ipython_genutils 0.2.0 py_1",
   "jinja2 2.11.2 pyh9f0ad1d_0",
   "jsonschema 3.2.0 py36h9f0ad1d_1",
   "jupyter_core 4.6.3 py36h9f0ad1d_1",
   "libarchive 3.3.3 h0c0e0cf_1008",
   "libiconv 1.15 hfa6e2cd_1006",
   "liblief 0.9.0 ha925a31_3",
   "libxml2 2.9.10 h9ce36c8_0",
   "lz4-c 1.9.2 h33f27b4_0",
   "lzo 2.10 hfa6e2cd_1000",
   "m2w64-gcc-libgfortran 5.3.0 6",
   "m2w64-gcc-libs 5.3.0 7",
   "m2w64-gcc-libs-core 5.3.0 7",
   "m2w64-gmp 6.1.0 2",
   "m2w64-libwinpthread-git 5.0.0.4634.697f757 2",
   "markupsafe 1.1.1 py36h68a101e_1",
   "menuinst 1.4.16 py36_0",
   "msys2-conda-epoch 20160418 1",
   "nbformat 5.0.6 py_0",
   "openssl 1.1.1g he774522_0",
   "pip 20.0.2 py_2",
   "pkginfo 1.5.0.1 py_0",
   "powershell_shortcut 0.0.1 2",
   "psutil 5.7.0 py36h68a101e_1",
   "py-lief 0.9.0 py36ha925a31_3",
   "pycosat 0.6.3 py36h68a101e_1004",
   "pycparser 2.20 py_0",
   "pyopenssl 19.1.0 py_1",
   "pyrsistent 0.16.0 py36h68a101e_0",
   "pysocks 1.7.1 py36h9f0ad1d_1",
   "python 3.6.10 he025d50_1009_cpython",
   "python-dateutil 2.8.1 py_0",
   "python-libarchive-c 2.9 py36_0",
   "python_abi 3.6 1_cp36m",
   "pytz 2019.3 py_0",
   "pywin32 227 py36hfa6e2cd_0",
   "pyyaml 5.1.2 py36hfa6e2cd_0",
   "requests 2.23.0 pyh8c360ce_2",
   "ripgrep 12.0.1 h301d43c_1",
   "ruamel_yaml 0.15.87 py36he774522_0",
   "setuptools 46.1.3 py36h9f0ad1d_0",
   "six 1.14.0 py_1",
   "soupsieve 1.9.4 py36h9f0ad1d_1",
   "sqlite 3.27.2 he774522_0",
   "tqdm 4.45.0 py_0",
   "traitlets 4.3.3 py36h9f0ad1d_1",
   "urllib3 1.25.9 py_0",
   "vc 14.1 h0510ff6_4",
   "vs2008_express_vc_python_patch 1.0.0 0",
   "vs2015_runtime 14.16.27012 hf0eaf9b_1",
   "wheel 0.34.2 py_1",
   "wincertstore 0.2 py36_1003",
   "win_inet_pton 1.1.0 py36_0",
   "xz 5.2.5 h2fa13f4_0",
   "yaml 0.1.7 hc54c509_2",
   "zipp 3.1.0 py_0",
   "zlib 1.2.11 h2fa13f4_1006",
   "zstd 1.4.4 h9f78265_3"
  ],
  "summary": "Implementation of the Leiden algorithm for various methods for use with igraph in python.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "vs2017",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "vs2017",
  "extend_keys": [
   "ignore_build_only_deps",
   "extend_keys",
   "pin_run_as_build",
   "ignore_version"
  ],
  "fortran_compiler": "flang",
  "fortran_compiler_version": "5",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.6.* *_cpython",
  "r_base": "3.4",
  "target_platform": "win-64",
  "vc": "14"
 },
 "files": [
  "Lib/site-packages/leidenalg-0.8.0.dist-info/INSTALLER",
  "Lib/site-packages/leidenalg-0.8.0.dist-info/LICENSE",
  "Lib/site-packages/leidenalg-0.8.0.dist-info/METADATA",
  "Lib/site-packages/leidenalg-0.8.0.dist-info/RECORD",
  "Lib/site-packages/leidenalg-0.8.0.dist-info/WHEEL",
  "Lib/site-packages/leidenalg/Optimiser.py",
  "Lib/site-packages/leidenalg/VertexPartition.py",
  "Lib/site-packages/leidenalg/__init__.py",
  "Lib/site-packages/leidenalg/_c_leiden.cp36-win_amd64.pyd",
  "Lib/site-packages/leidenalg/functions.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py36h5dcab15_0",
  "build_number": 0,
  "depends": [
   "libflang >=5.0.0",
   "python >=3.6,<3.7.0a0",
   "python-igraph",
   "python_abi 3.6.* *_cp36m",
   "setuptools",
   "vc >=14.1,<15.0a0",
   "vs2015_runtime >=14.16.27012"
  ],
  "license": "GPLv3",
  "license_family": "GPL",
  "name": "leidenalg",
  "platform": "win",
  "subdir": "win-64",
  "timestamp": 1587932424198,
  "version": "0.8.0"
 },
 "metadata_version": 1,
 "name": "leidenalg",
 "raw_recipe": "{% set name = \"leidenalg\" %}\n{% set version = \"0.8.0\" %}\n{% set sha256 = \"ebab74ce92615b614bef9ec36a7318c45db928bd795ed262c4a10f4d009196ef\" %}\n{% set posix = 'm2-' if win else '' %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n    - patches/0001-remove-pyproject.toml.patch\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . --no-deps -vv --no-build-isolation  # [not win]\n  skip : true  # [win and vc<14]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('fortran') }}\n    - pkg-config  # [not win]\n    - make  # [not win]\n    - {{ posix }}autoconf\n    - automake  # [not win]\n    - {{ posix }}bison\n    - {{ posix }}flex\n    - {{ posix }}libtool\n    - vs2017_{{ target_platform }}  # [win]\n    - posix  # [win]\n    - m2w64-toolchain  # [win]\n    - m2-automake-wrapper  # [win]\n  host:\n    - python\n    - pip\n    - setuptools\n    - setuptools_scm\n    - python-igraph\n  run:\n    - python\n    - setuptools\n    - python-igraph\n\ntest:\n  imports:\n    - igraph\n    - leidenalg\n\nabout:\n  home: https://github.com/vtraag/leidenalg\n  license: GPLv3\n  license_family: GPL\n  license_file: LICENSE\n  summary: Implementation of the Leiden algorithm for various methods for use with igraph in python.\n  description: |\n    This package implements the Leiden algorithm in C++ and\n    exposes it to python. It relies on (python-)igraph for it to\n    function. Besides the relative flexibility of the\n    implementation, it also scales well, and can be run on graphs\n    of millions of nodes (as long as they can fit in memory).\n    The core function is find_partition which is able to optimize a\n    variety of quality functions using the Leiden algorithm.\n  doc_url: http://leidenalg.readthedocs.io/\n  dev_url: https://github.com/vtraag/leidenalg\n\nextra:\n  recipe-maintainers:\n    - vtraag\n",
 "rendered_recipe": {
  "about": {
   "description": "This package implements the Leiden algorithm in C++ and\nexposes it to python. It relies on (python-)igraph for it to\nfunction. Besides the relative flexibility of the\nimplementation, it also scales well, and can be run on graphs\nof millions of nodes (as long as they can fit in memory).\nThe core function is find_partition which is able to optimize a\nvariety of quality functions using the Leiden algorithm.\n",
   "dev_url": "https://github.com/vtraag/leidenalg",
   "doc_url": "http://leidenalg.readthedocs.io/",
   "home": "https://github.com/vtraag/leidenalg",
   "license": "GPLv3",
   "license_family": "GPL",
   "license_file": "LICENSE",
   "summary": "Implementation of the Leiden algorithm for various methods for use with igraph in python."
  },
  "build": {
   "number": "0",
   "string": "py36h5dcab15_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "vtraag"
   ]
  },
  "package": {
   "name": "leidenalg",
   "version": "0.8.0"
  },
  "requirements": {
   "build": [
    "clangdev 5.0.0 flang_3",
    "flang 5.0.0 he025d50_20180525",
    "flang_win-64 5.0.0 20180525",
    "libflang 5.0.0 h6538335_20180525",
    "llvm-meta 5.0.0 0",
    "m2-autoconf 2.69 4",
    "m2-automake-wrapper 10 2",
    "m2-automake1.10 1.10.3 4",
    "m2-automake1.11 1.11.6 4",
    "m2-automake1.12 1.12.6 4",
    "m2-automake1.13 1.13.4 5",
    "m2-automake1.14 1.14.1 4",
    "m2-automake1.15 1.15 3",
    "m2-automake1.6 1.6.3 3",
    "m2-automake1.7 1.7.9 3",
    "m2-automake1.8 1.8.5 4",
    "m2-automake1.9 1.9.6 3",
    "m2-base 1.0.0 3",
    "m2-bash 4.3.042 5",
    "m2-bash-completion 2.3 2",
    "m2-bison 3.0.4 2",
    "m2-catgets 1.1 3",
    "m2-coreutils 8.25 102",
    "m2-dash 0.5.8 2",
    "m2-db 5.3.28 3",
    "m2-diffutils 3.3 4",
    "m2-file 5.25 2",
    "m2-filesystem 2016.04 4",
    "m2-findutils 4.6.0 2",
    "m2-flex 2.6.0 2",
    "m2-gawk 4.1.3 2",
    "m2-gcc-libs 5.3.0 4",
    "m2-gdbm 1.11 4",
    "m2-gettext 0.19.7 4",
    "m2-gmp 6.1.0 3",
    "m2-grep 2.22 4",
    "m2-gzip 1.7 2",
    "m2-inetutils 1.9.2 2",
    "m2-info 6.0 2",
    "m2-less 481 2",
    "m2-libasprintf 0.19.7 4",
    "m2-libbz2 1.0.6 3",
    "m2-libcatgets 1.1 3",
    "m2-libcrypt 1.3 2",
    "m2-libdb 5.3.28 3",
    "m2-libgdbm 1.11 4",
    "m2-libgettextpo 0.19.7 4",
    "m2-libiconv 1.14 3",
    "m2-libintl 0.19.7 4",
    "m2-libltdl 2.4.6 3",
    "m2-liblzma 5.2.2 2",
    "m2-libpcre 8.38 2",
    "m2-libreadline 6.3.008 8",
    "m2-libtool 2.4.6 3",
    "m2-libutil-linux 2.26.2 2",
    "m2-libxml2 2.9.2 3",
    "m2-m4 1.4.17 5",
    "m2-make 4.1 5",
    "m2-mintty 1!2.2.3 2",
    "m2-mpfr 3.1.4 2",
    "m2-msys2-launcher-git 0.3.28.860c495 2",
    "m2-msys2-runtime 2.5.0.17080.65c939c 3",
    "m2-ncurses 6.0.20160220 2",
    "m2-perl 5.22.1 2",
    "m2-sed 4.2.2 3",
    "m2-tar 1.28 4",
    "m2-tftp-hpa 5.2 2",
    "m2-time 1.7 2",
    "m2-ttyrec 1.0.8 2",
    "m2-tzcode 2015.e 2",
    "m2-unzip 6.0 3",
    "m2-util-linux 2.26.2 2",
    "m2-which 2.21 3",
    "m2-zip 3.0 2",
    "m2-zlib 1.2.8 4",
    "m2w64-binutils 2.25.1 5",
    "m2w64-bzip2 1.0.6 6",
    "m2w64-crt-git 5.0.0.4636.2595836 2",
    "m2w64-gcc 5.3.0 6",
    "m2w64-gcc-ada 5.3.0 6",
    "m2w64-gcc-fortran 5.3.0 6",
    "m2w64-gcc-libgfortran 5.3.0 6",
    "m2w64-gcc-libs 5.3.0 7",
    "m2w64-gcc-libs-core 5.3.0 7",
    "m2w64-gcc-objc 5.3.0 6",
    "m2w64-gmp 6.1.0 2",
    "m2w64-headers-git 5.0.0.4636.c0ad18a 2",
    "m2w64-isl 0.16.1 2",
    "m2w64-libiconv 1.14 6",
    "m2w64-libmangle-git 5.0.0.4509.2e5a9a2 2",
    "m2w64-libwinpthread-git 5.0.0.4634.697f757 2",
    "m2w64-make 4.1.2351.a80a8b8 2",
    "m2w64-mpc 1.0.3 3",
    "m2w64-mpfr 3.1.4 4",
    "m2w64-pkg-config 0.29.1 2",
    "m2w64-toolchain 5.3.0 7",
    "m2w64-tools-git 5.0.0.4592.90b8472 2",
    "m2w64-windows-default-manifest 6.4 3",
    "m2w64-winpthreads-git 5.0.0.4634.697f757 2",
    "m2w64-zlib 1.2.8 10",
    "msys2-conda-epoch 20160418 1",
    "openmp 5.0.0 vc14_1",
    "posix 1.0.0 2",
    "vc 14.1 h869be7e_1",
    "vs2015_runtime 14.16.27012 h30e32a0_2",
    "vs2017_win-64 19.16.27038 h2e3bad8_2",
    "vswhere 2.7.1 h21ff451_0"
   ],
   "host": [
    "cairo 1.16.0 h8a5e50b_1003",
    "certifi 2020.4.5.1 py36h9f0ad1d_0",
    "gettext 0.19.8.1 hb01d8f6_1002",
    "glib 2.64.2 he4de6d7_0",
    "icu 64.2 he025d50_1",
    "libffi 3.2.1 h6538335_1007",
    "libflang 5.0.0 h6538335_20180525",
    "libiconv 1.15 hfa6e2cd_1006",
    "libpng 1.6.37 hfe6a214_1",
    "llvm-meta 5.0.0 0",
    "m2w64-gcc-libgfortran 5.3.0 6",
    "m2w64-gcc-libs 5.3.0 7",
    "m2w64-gcc-libs-core 5.3.0 7",
    "m2w64-gmp 6.1.0 2",
    "m2w64-libwinpthread-git 5.0.0.4634.697f757 2",
    "msys2-conda-epoch 20160418 1",
    "openmp 5.0.0 vc14_1",
    "pcre 8.44 h6538335_0",
    "pip 20.0.2 py_2",
    "pixman 0.38.0 hfa6e2cd_1003",
    "pycairo 1.19.1 py36h4e8e208_3",
    "python 3.6.10 he025d50_1009_cpython",
    "python-igraph 0.8.0 py36h6a23ca4_1",
    "python_abi 3.6 1_cp36m",
    "setuptools 46.1.3 py36h9f0ad1d_0",
    "setuptools-scm 3.5.0 py_1",
    "setuptools_scm 3.5.0 1",
    "texttable 1.6.2 py_0",
    "vc 14.1 h869be7e_1",
    "vs2015_runtime 14.16.27012 h30e32a0_2",
    "wheel 0.34.2 py_1",
    "wincertstore 0.2 py36_1003",
    "zlib 1.2.11 h2fa13f4_1006"
   ],
   "run": [
    "libflang >=5.0.0",
    "python >=3.6,<3.7.0a0",
    "python-igraph",
    "python_abi 3.6.* *_cp36m",
    "setuptools",
    "vc >=14.1,<15.0a0",
    "vs2015_runtime >=14.16.27012"
   ]
  },
  "source": {
   "fn": "leidenalg-0.8.0.tar.gz",
   "patches": [
    "patches/0001-remove-pyproject.toml.patch"
   ],
   "sha256": "ebab74ce92615b614bef9ec36a7318c45db928bd795ed262c4a10f4d009196ef",
   "url": "https://pypi.io/packages/source/l/leidenalg/leidenalg-0.8.0.tar.gz"
  },
  "test": {
   "imports": [
    "igraph",
    "leidenalg"
   ]
  }
 },
 "version": "0.8.0"
}