{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.18.11",
  "conda_private": false,
  "conda_version": "4.8.2",
  "description": "ALM can be used for Extraction of harmonic and anharmonic force constants\nbased on the supercell approach. It is applicable to any crystal structure\nand low-dimensional systems. Features accurate treatment of translational\nand rotational invariance and Interface to VASP, Quantum-ESPRESSO, and xTAPP.\n",
  "dev_url": "https://github.com/ttadano/ALM",
  "doc_url": "http://alm.readthedocs.io/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "jochym",
    "ttadano"
   ]
  },
  "home": "https://github.com/ttadano/ALM",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "LICENSE.txt",
  "root_pkgs": [
   "anaconda-client 1.7.2 py_0",
   "attrs 19.3.0 py_0",
   "beautifulsoup4 4.8.2 py37_0",
   "bzip2 1.0.8 h0b31af3_2",
   "ca-certificates 2019.11.28 hecc5488_0",
   "certifi 2019.11.28 py37_0",
   "cffi 1.13.2 py37h33e799b_0",
   "chardet 3.0.4 py37_1003",
   "click 7.0 py_0",
   "clyent 1.2.2 py_1",
   "conda 4.8.2 py37_0",
   "conda-build 3.18.11 py37_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 2.5.4 py37_0",
   "conda-package-handling 1.6.0 py37h0b31af3_1",
   "cryptography 2.8 py37hafa8578_1",
   "decorator 4.4.1 py_0",
   "filelock 3.0.10 py_0",
   "glob2 0.7 py_0",
   "icu 64.2 h6de7cb9_1",
   "idna 2.8 py37_1000",
   "importlib_metadata 1.5.0 py37_0",
   "inflect 4.1.0 py37_0",
   "ipython_genutils 0.2.0 py_1",
   "jaraco.itertools 5.0.0 py_0",
   "jinja2 2.11.1 py_0",
   "jq 1.6 h1de35cc_1000",
   "jsonschema 3.2.0 py37_0",
   "jupyter_core 4.6.1 py37_0",
   "libarchive 3.3.3 h8912c15_1007",
   "libcxx 9.0.1 1",
   "libffi 3.2.1 h6de7cb9_1006",
   "libiconv 1.15 h01d97ff_1005",
   "liblief 0.9.0 h3e78482_1",
   "libxml2 2.9.10 h53d96d6_0",
   "lz4-c 1.8.3 h6de7cb9_1001",
   "lzo 2.10 h1de35cc_1000",
   "markupsafe 1.1.1 py37h0b31af3_0",
   "more-itertools 8.2.0 py_0",
   "nbformat 5.0.4 py_0",
   "ncurses 6.1 h0a44026_1002",
   "oniguruma 6.9.3 h01d97ff_0",
   "openssl 1.1.1d h0b31af3_0",
   "pkginfo 1.5.0.1 py_0",
   "psutil 5.6.7 py37h0b31af3_0",
   "py-lief 0.9.0 py37h0ceac7d_1",
   "pycosat 0.6.3 py37h0b31af3_1002",
   "pycparser 2.19 py37_1",
   "pyopenssl 19.1.0 py37_0",
   "pyrsistent 0.15.7 py37h0b31af3_0",
   "pysocks 1.7.1 py37_0",
   "python 3.7.6 h5c2c468_2",
   "python-dateutil 2.8.1 py_0",
   "python-libarchive-c 2.9 py37_0",
   "python.app 1.2 py37h0b31af3_1201",
   "pytz 2019.3 py_0",
   "pyyaml 5.3 py37h0b31af3_0",
   "readline 8.0 hcfe32e1_0",
   "requests 2.22.0 py37_1",
   "ripgrep 11.0.2 h01d97ff_3",
   "ruamel_yaml 0.15.80 py37h0b31af3_1000",
   "setuptools 45.1.0 py37_0",
   "shyaml 0.6.1 py_0",
   "six 1.14.0 py37_0",
   "soupsieve 1.9.4 py37_0",
   "sqlite 3.30.1 h93121df_0",
   "tk 8.6.10 hbbe82c9_0",
   "tqdm 4.42.1 py_0",
   "traitlets 4.3.3 py37_0",
   "urllib3 1.25.7 py37_0",
   "xz 5.2.4 h1de35cc_1001",
   "yaml 0.2.2 h0b31af3_1",
   "zipp 2.1.0 py_0",
   "zlib 1.2.11 h0b31af3_1006",
   "zstd 1.4.4 he7fca8b_1"
  ],
  "summary": "Software for calculating harmonic and anharmonic interatomic force constants in solids and molecules.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode_10.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.9",
  "boost": "1.70.0",
  "c_compiler": "clang",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "cxx_compiler_version": "9",
  "extend_keys": [
   "pin_run_as_build",
   "extend_keys",
   "ignore_build_only_deps",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "liblapack": "3.8.0 *netlib",
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "macos_min_version": "10.9",
  "numpy": "1.14",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "boost": {
    "max_pin": "x.x.x"
   },
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.8",
  "r_base": "3.5",
  "target_platform": "osx-64"
 },
 "files": [
  "lib/python3.8/site-packages/alm-1.0.2-py3.8.egg-info/PKG-INFO",
  "lib/python3.8/site-packages/alm/__init__.py",
  "lib/python3.8/site-packages/alm/_alm.cpython-38-darwin.so",
  "lib/python3.8/site-packages/alm/alm.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py38hc667688_0",
  "build_number": 0,
  "depends": [
   "libcxx >=9.0.1",
   "liblapack >=3.8.0,<3.9.0a0",
   "llvm-openmp >=9.0.1",
   "numpy >=1.14.6,<2.0a0",
   "python >=3.8,<3.9.0a0",
   "spglib"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "alm",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1581062502474,
  "version": "2.0.0_dev.1"
 },
 "metadata_version": 1,
 "name": "alm",
 "raw_recipe": "{% set name = \"ALM\" %}\n{% set version = \"2.0.0_dev.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/jochym/{{ name }}/archive/v{{ version }}.tar.gz\n  sha256: 02aea008925df240d38cc23e08a14694a80186f4d7475464e337200132888ac4\n  patches:\n    - use_external_spglib.patch\n\nbuild:\n  number: 0\n  skip: True  # [win or py<35]\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - llvm-openmp  # [osx]\n    - libgomp      # [linux and not aarch64]\n  host:\n    - python\n    - liblapack\n    - numpy\n    - boost\n    - eigen\n    - spglib >=1.11.2.1\n    - setuptools\n  run:\n    - python    \n    - {{ pin_compatible('numpy') }}\n    \ntest:\n  source_files:\n    - test/*.dat\n    - test/*.py\n  requires:\n    - numpy\n  imports:\n    - alm\n  commands:\n    - cd test\n    - python Si_fitting.py\n    - python SiC_fitting.py\n\nabout:\n  home: https://github.com/ttadano/ALM\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: 'Software for calculating harmonic and anharmonic interatomic force constants in solids and molecules.'\n\n  description: |\n    ALM can be used for Extraction of harmonic and anharmonic force constants \n    based on the supercell approach. It is applicable to any crystal structure\n    and low-dimensional systems. Features accurate treatment of translational \n    and rotational invariance and Interface to VASP, Quantum-ESPRESSO, and xTAPP.\n  doc_url: http://alm.readthedocs.io/\n  dev_url: https://github.com/ttadano/ALM\n\nextra:\n  recipe-maintainers:\n    - jochym\n    - ttadano\n",
 "rendered_recipe": {
  "about": {
   "description": "ALM can be used for Extraction of harmonic and anharmonic force constants\nbased on the supercell approach. It is applicable to any crystal structure\nand low-dimensional systems. Features accurate treatment of translational\nand rotational invariance and Interface to VASP, Quantum-ESPRESSO, and xTAPP.\n",
   "dev_url": "https://github.com/ttadano/ALM",
   "doc_url": "http://alm.readthedocs.io/",
   "home": "https://github.com/ttadano/ALM",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Software for calculating harmonic and anharmonic interatomic force constants in solids and molecules."
  },
  "build": {
   "number": "0",
   "string": "py38hc667688_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "jochym",
    "ttadano"
   ]
  },
  "package": {
   "name": "alm",
   "version": "2.0.0_dev.1"
  },
  "requirements": {
   "build": [
    "cctools 927.0.2 h5ba7a2e_4",
    "clang 9.0.1 default_hf57f61e_0",
    "clang_osx-64 9.0.1 h05bbb7f_0",
    "clangxx 9.0.1 default_hf57f61e_0",
    "clangxx_osx-64 9.0.1 h05bbb7f_0",
    "compiler-rt 9.0.1 h6a512c6_0",
    "compiler-rt_osx-64 9.0.1 h6a512c6_0",
    "ld64 450.3 h3c32e8a_4",
    "libcxx 9.0.1 1",
    "libllvm9 9.0.1 ha1b3eb9_0",
    "llvm-openmp 9.0.1 h28b9765_2",
    "tapi 1000.10.8 ha1b3eb9_4"
   ],
   "host": [
    "boost 1.70.0 py38hbf1eeb5_1",
    "boost-cpp 1.70.0 h75728bb_2",
    "bzip2 1.0.8 h0b31af3_2",
    "ca-certificates 2019.11.28 hecc5488_0",
    "certifi 2019.11.28 py38_0",
    "eigen 3.3.7 ha1b3eb9_1001",
    "icu 64.2 h6de7cb9_1",
    "libblas 3.8.0 7_h4bb4525_netlib",
    "libcblas 3.8.0 7_h4bb4525_netlib",
    "libcxx 9.0.1 1",
    "libffi 3.2.1 h6de7cb9_1006",
    "libgfortran 4.0.0 2",
    "liblapack 3.8.0 7_h4bb4525_netlib",
    "llvm-openmp 9.0.1 h28b9765_2",
    "ncurses 6.1 h0a44026_1002",
    "numpy 1.14.6 py38hde6bac1_1201",
    "openssl 1.1.1d h0b31af3_0",
    "python 3.8.1 hf2284b6_2",
    "readline 8.0 hcfe32e1_0",
    "setuptools 45.1.0 py38_0",
    "spglib 1.14.1 py38h3b54f70_0",
    "sqlite 3.30.1 h93121df_0",
    "tk 8.6.10 hbbe82c9_0",
    "xz 5.2.4 h1de35cc_1001",
    "zlib 1.2.11 h0b31af3_1006"
   ],
   "run": [
    "libcxx >=9.0.1",
    "liblapack >=3.8.0,<3.9.0a0",
    "llvm-openmp >=9.0.1",
    "numpy >=1.14.6,<2.0a0",
    "python >=3.8,<3.9.0a0",
    "spglib"
   ]
  },
  "source": {
   "patches": [
    "use_external_spglib.patch"
   ],
   "sha256": "02aea008925df240d38cc23e08a14694a80186f4d7475464e337200132888ac4",
   "url": "https://github.com/jochym/ALM/archive/v2.0.0_dev.1.tar.gz"
  },
  "test": {
   "commands": [
    "cd test",
    "python Si_fitting.py",
    "python SiC_fitting.py"
   ],
   "imports": [
    "alm"
   ],
   "requires": [
    "numpy"
   ],
   "source_files": [
    "test/*.dat",
    "test/*.py"
   ]
  }
 },
 "version": "2.0.0_dev.1"
}