{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.14.2",
  "conda_private": false,
  "conda_version": "4.5.11",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "jschueller"
   ]
  },
  "home": "https://software.sandia.gov/opt++/",
  "identifiers": [],
  "keywords": [],
  "license": "LGPL",
  "license_file": "COPYRIGHT",
  "root_pkgs": [
   "traitlets 4.3.2 py36_0",
   "libstdcxx-ng 7.2.0 hdf63c60_3",
   "requests 2.19.1 py36_1",
   "pyopenssl 18.0.0 py36_0",
   "pycparser 2.18 py_1",
   "python 3.6.6 h5001a0f_0",
   "conda 4.5.11 py36_0",
   "bzip2 1.0.6 h470a237_2",
   "filelock 3.0.4 py_1",
   "git 2.18.0 pl526hbb17d3c_1",
   "tk 8.6.8 0",
   "libedit 3.1.20170329 haf1bffa_1",
   "idna 2.7 py36_2",
   "readline 7.0 haf1bffa_1",
   "anaconda-client 1.7.1 py_0",
   "xz 5.2.4 h470a237_1",
   "ncurses 6.1 hfc679d8_1",
   "pycosat 0.6.3 py36h470a237_1",
   "sqlite 3.24.0 h2f33b56_1",
   "jsonschema 2.6.0 py36_2",
   "libiconv 1.15 h470a237_3",
   "yaml 0.1.7 h470a237_1",
   "certifi 2018.8.24 py36_1",
   "krb5 1.14.6 0",
   "psutil 5.4.7 py36h470a237_1",
   "chardet 3.0.4 py36_3",
   "zlib 1.2.11 h470a237_3",
   "wheel 0.31.1 py36_1",
   "tini 0.18.0 h470a237_1",
   "pyyaml 3.13 py36h470a237_1",
   "conda-build 3.14.2 py36_0",
   "curl 7.61.0 h93b3f91_2",
   "decorator 4.3.0 py_0",
   "glob2 0.6 py_0",
   "pytz 2018.5 py_0",
   "jinja2 2.10 py_1",
   "cryptography 2.3.1 py36hdffb7b8_0",
   "nbformat 4.4.0 py_1",
   "conda-env 2.6.0 1",
   "cryptography-vectors 2.3.1 py36_0",
   "python-dateutil 2.7.3 py_0",
   "urllib3 1.23 py36_1",
   "pkginfo 1.4.2 py_1",
   "patchelf 0.9 hfc679d8_2",
   "perl 5.26.2 h470a237_0",
   "ruamel_yaml 0.15.63 py36h470a237_0",
   "setuptools 40.2.0 py36_0",
   "markupsafe 1.0 py36h470a237_1",
   "beautifulsoup4 4.6.3 py36_0",
   "ipython_genutils 0.2.0 py_1",
   "asn1crypto 0.24.0 py36_3",
   "libffi 3.2.1 hfc679d8_5",
   "jupyter_core 4.4.0 py_0",
   "cffi 1.11.5 py36h5e8e0c9_1",
   "pysocks 1.6.8 py36_2",
   "expat 2.2.5 hfc679d8_2",
   "six 1.11.0 py36_1",
   "libssh2 1.8.0 h5b517e9_2",
   "gettext 0.19.8.1 h5e8e0c9_1",
   "pip 18.0 py36_1",
   "clyent 1.2.2 py_1",
   "libgcc-ng 7.2.0 hdf63c60_3",
   "gosu 1.10 0",
   "conda-forge-ci-setup 2.0.5 py36_0",
   "click 6.7 py36_0",
   "openssl 1.0.2p h14c3975_0",
   "ca-certificates 2018.03.07 0"
  ],
  "summary": "An Object-Oriented Nonlinear Optimization Library",
  "tags": []
 },
 "conda_build_config": {
  "c_compiler": "toolchain_c",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "toolchain_cxx",
  "docker_image": "condaforge/linux-anvil",
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": "numpy",
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x.x",
    "min_pin": "x.x.x"
   }
  },
  "python": "3.6",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "files": [
  "include/opt++/AppLauncher.h",
  "include/opt++/Appl_Data.h",
  "include/opt++/Appl_Data_NPSOL.h",
  "include/opt++/BoolVector.h",
  "include/opt++/BoundConstraint.h",
  "include/opt++/CGProblem.h",
  "include/opt++/CompoundConstraint.h",
  "include/opt++/Constraint.h",
  "include/opt++/ConstraintBase.h",
  "include/opt++/GenSet.h",
  "include/opt++/GenSetBase.h",
  "include/opt++/GenSetBox2d.h",
  "include/opt++/GenSetMin.h",
  "include/opt++/GenSetStd.h",
  "include/opt++/LSQNLF.h",
  "include/opt++/LinearConstraint.h",
  "include/opt++/LinearEquation.h",
  "include/opt++/LinearInequality.h",
  "include/opt++/NIPSProblem.h",
  "include/opt++/NLF.h",
  "include/opt++/NLFAPP.h",
  "include/opt++/NLP.h",
  "include/opt++/NLP0.h",
  "include/opt++/NLP1.h",
  "include/opt++/NLP2.h",
  "include/opt++/NLPBase.h",
  "include/opt++/NPSOLProblem.h",
  "include/opt++/NewtonProblem.h",
  "include/opt++/NonLinearConstraint.h",
  "include/opt++/NonLinearEquation.h",
  "include/opt++/NonLinearInequality.h",
  "include/opt++/Opt.h",
  "include/opt++/OptBCEllipsoid.h",
  "include/opt++/OptBCFDNewton.h",
  "include/opt++/OptBCNewton.h",
  "include/opt++/OptBCNewtonLike.h",
  "include/opt++/OptBCQNewton.h",
  "include/opt++/OptBaNewton.h",
  "include/opt++/OptBaQNewton.h",
  "include/opt++/OptCG.h",
  "include/opt++/OptConstrFDNewton.h",
  "include/opt++/OptConstrNewton.h",
  "include/opt++/OptConstrNewtonLike.h",
  "include/opt++/OptConstrQNewton.h",
  "include/opt++/OptDHNIPS.h",
  "include/opt++/OptDirect.h",
  "include/opt++/OptFDNIPS.h",
  "include/opt++/OptFDNewton.h",
  "include/opt++/OptGSS.h",
  "include/opt++/OptLBFGS.h",
  "include/opt++/OptNIPS.h",
  "include/opt++/OptNIPSLike.h",
  "include/opt++/OptNPSOL.h",
  "include/opt++/OptNewton.h",
  "include/opt++/OptNewtonLike.h",
  "include/opt++/OptPDS.h",
  "include/opt++/OptQNIPS.h",
  "include/opt++/OptQNewton.h",
  "include/opt++/Opt_PARAMS.h",
  "include/opt++/OptppArray.h",
  "include/opt++/OptppExceptions.h",
  "include/opt++/OptppFatalError.h",
  "include/opt++/OptppSmartPtr.h",
  "include/opt++/PDSProblem.h",
  "include/opt++/Problem.h",
  "include/opt++/TOLS.h",
  "include/opt++/VariableList.h",
  "include/opt++/abbrev_copyright.h",
  "include/opt++/cblas.h",
  "include/opt++/common.h",
  "include/opt++/controlw.h",
  "include/opt++/globals.h",
  "include/opt++/include.h",
  "include/opt++/ioformat.h",
  "include/opt++/myexcept.h",
  "include/opt++/newmat.h",
  "include/opt++/newmatap.h",
  "include/opt++/newmatio.h",
  "include/opt++/newmatnl.h",
  "include/opt++/newmatrc.h",
  "include/opt++/newmatrm.h",
  "include/opt++/pds.h",
  "include/opt++/precisio.h",
  "include/opt++/proto.h",
  "include/opt++/solution.h",
  "include/opt++/tmt.h",
  "lib/libnewmat.so",
  "lib/libnewmat.so.0",
  "lib/libnewmat.so.0.0.0",
  "lib/libopt.so",
  "lib/libopt.so.0",
  "lib/libopt.so.0.0.0"
 ],
 "index": {
  "arch": "x86_64",
  "build": "blas_openblashfc679d8_200",
  "build_number": 200,
  "depends": [
   "blas 1.1 openblas",
   "libgcc-ng >=4.9",
   "libstdcxx-ng >=4.9"
  ],
  "features": "blas_openblas",
  "license": "LGPL",
  "name": "optpp",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1536563399888,
  "version": "2.4"
 },
 "metadata_version": 1,
 "name": "optpp",
 "raw_recipe": "{% set version = \"2.4\" %}\n{% set variant = \"openblas\" %}\n\npackage:\n  name: optpp\n  version: {{ version }}\n\nsource:\n  fn: optpp-{{ version }}.tar.gz\n  url: https://software.sandia.gov/opt++/downloads/optpp-{{ version }}.tar.gz\n  sha256: 7a0c8ba5e15d5e74f94b08f5dc65a13d64d2f7bbd1acbc153c09dd2425eb66cd\n\nbuild:\n  number: 200\n  features:\n    - blas_{{ variant }}  # [not win]\n  # msvc is unsupported, but maybe we can add a custom cmake script later\n  # investigate failure on osx too with clang/libc++\n  skip: true  # [not linux]\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - blas 1.1 {{ variant }}  # [not win]\n  run:\n    - blas 1.1 {{ variant }}  # [not win]\n\ntest:\n  commands:\n    - test -f ${PREFIX}/include/opt++/Opt.h  # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\opt++\\\\Opt.h exit 1  # [win]\n    - conda inspect linkages -p ${PREFIX} optpp  # [not win]\n    - conda inspect objects -p ${PREFIX} optpp  # [osx]\n\nabout:\n  home: https://software.sandia.gov/opt++/\n  license: LGPL\n  license_file: COPYRIGHT\n  summary: An Object-Oriented Nonlinear Optimization Library\n\nextra:\n  recipe-maintainers:\n    - jschueller\n",
 "rendered_recipe": {
  "about": {
   "home": "https://software.sandia.gov/opt++/",
   "license": "LGPL",
   "license_file": "COPYRIGHT",
   "summary": "An Object-Oriented Nonlinear Optimization Library"
  },
  "build": {
   "features": [
    "blas_openblas"
   ],
   "number": "200",
   "string": "blas_openblashfc679d8_200"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "jschueller"
   ]
  },
  "package": {
   "name": "optpp",
   "version": "2.4"
  },
  "requirements": {
   "build": [
    "toolchain 2.1.6 0",
    "toolchain_c_linux-64 2.1.6 0",
    "toolchain_cxx_linux-64 2.1.6 0"
   ],
   "host": [
    "blas 1.1 openblas",
    "libgcc-ng 7.2.0 hdf63c60_3",
    "libgfortran 3.0.0 1",
    "libstdcxx-ng 7.2.0 hdf63c60_3",
    "openblas 0.3.3 ha44fe06_0"
   ],
   "run": [
    "blas 1.1 openblas",
    "libgcc-ng >=4.9",
    "libstdcxx-ng >=4.9"
   ]
  },
  "source": {
   "fn": "optpp-2.4.tar.gz",
   "sha256": "7a0c8ba5e15d5e74f94b08f5dc65a13d64d2f7bbd1acbc153c09dd2425eb66cd",
   "url": "https://software.sandia.gov/opt++/downloads/optpp-2.4.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/include/opt++/Opt.h",
    "conda inspect linkages -p ${PREFIX} optpp"
   ]
  }
 },
 "version": "2.4"
}