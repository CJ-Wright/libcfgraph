{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.17.8",
  "conda_private": false,
  "conda_version": "4.6.4",
  "description": "If you are an administrator running a Kubernetes cluster on AWS, you already\nneed to manage AWS IAM credentials to provision and update the cluster. By using\nAWS IAM Authenticator for Kubernetes, you avoid having to manage a separate\ncredential for Kubernetes access. AWS IAM also provides a number of nice\nproperties such as an out of band audit trail (via CloudTrail) and 2FA/MFA enforcement.\n\nIf you are building a Kubernetes installer on AWS, AWS IAM Authenticator for\nKubernetes can simplify your bootstrap process. You won't need to somehow\nsmuggle your initial admin credential securely out of your newly installed\ncluster. Instead, you can create a dedicated KubernetesAdmin role at cluster\nprovisioning time and set up Authenticator to allow cluster administrator logins.\n",
  "dev_url": "https://github.com/kubernetes-sigs/aws-iam-authenticator",
  "doc_url": "https://github.com/kubernetes-sigs/aws-iam-authenticator",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "edisongustavo"
   ]
  },
  "home": "https://github.com/kubernetes-sigs/aws-iam-authenticator",
  "identifiers": [],
  "keywords": [],
  "license": "Apache 2.0",
  "license_family": "Apache",
  "license_file": "LICENSE",
  "root_pkgs": [
   "anaconda-client 1.7.2 py_0",
   "asn1crypto 0.24.0 py36_0",
   "attrs 18.2.0 py_0",
   "beautifulsoup4 4.7.1 py36_1001",
   "bzip2 1.0.6 hfa6e2cd_1002",
   "ca-certificates 2018.11.29 ha4d7672_0",
   "certifi 2018.11.29 py36_1000",
   "cffi 1.11.5 py36h945400d_0",
   "chardet 3.0.4 py36h420ce6e_1",
   "click 7.0 py_0",
   "clyent 1.2.2 py_1",
   "conda 4.6.4 py36_0",
   "conda-build 3.17.8 py36_0",
   "conda-env 2.6.0 h36134e3_1",
   "conda-forge-ci-setup 2.1.4 py36_0",
   "console_shortcut 0.1.1 h6bb2dd7_3",
   "cryptography 2.5 py36h7a1dbc1_0",
   "decorator 4.3.2 py_0",
   "filelock 3.0.10 py_0",
   "glob2 0.6 py_0",
   "idna 2.6 py36h148d497_1",
   "ipython_genutils 0.2.0 py_1",
   "jinja2 2.10 py_1",
   "jsonschema 3.0.0a3 py36_1000",
   "jupyter_core 4.4.0 py_0",
   "libarchive 3.3.3 h0643e63_2",
   "libiconv 1.15 hfa6e2cd_1004",
   "liblief 0.9.0 ha925a31_2",
   "libxml2 2.9.8 h9ce36c8_1005",
   "lz4-c 1.8.3 he025d50_1001",
   "lzo 2.10 hfa6e2cd_1000",
   "markupsafe 1.1.0 py36hfa6e2cd_1000",
   "menuinst 1.4.14 py36hfa6e2cd_0",
   "nbformat 4.4.0 py_1",
   "openssl 1.1.1a hfa6e2cd_1000",
   "pip 10.0.1 py36_0",
   "pkginfo 1.5.0.1 py_0",
   "psutil 5.5.1 py36hfa6e2cd_0",
   "py-lief 0.9.0 py36ha925a31_2",
   "pycosat 0.6.3 py36h413d8a4_0",
   "pycparser 2.18 py36hd053e01_1",
   "pyopenssl 18.0.0 py36_0",
   "pyrsistent 0.14.10 py36hfa6e2cd_0",
   "pysocks 1.6.8 py36_0",
   "python 3.6.5 h0c2934d_0",
   "python-dateutil 2.8.0 py_0",
   "python-libarchive-c 2.8 py36_1004",
   "pytz 2018.9 py_0",
   "pywin32 223 py36hfa6e2cd_1",
   "pyyaml 3.13 py36hfa6e2cd_1001",
   "requests 2.18.4 py36h4371aae_1",
   "ruamel_yaml 0.15.37 py36hfa6e2cd_2",
   "setuptools 39.2.0 py36_0",
   "six 1.11.0 py36h4db2310_1",
   "soupsieve 1.8 py36_0",
   "tqdm 4.31.1 py_0",
   "traitlets 4.3.2 py36_1000",
   "urllib3 1.22 py36h276f60a_0",
   "vc 14.1 h0510ff6_4",
   "vs2008_express_vc_python_patch 1.0.0 0",
   "vs2015_runtime 14.15.26706 h3a45250_0",
   "wheel 0.31.1 py36_0",
   "wincertstore 0.2 py36h7fe50ca_0",
   "win_inet_pton 1.0.1 py36he67d7fd_1",
   "xz 5.2.4 h2fa13f4_1001",
   "yaml 0.1.7 hc54c509_2",
   "zlib 1.2.11 h2fa13f4_1004",
   "zstd 1.3.3 vc14_1"
  ],
  "summary": "A tool to use AWS IAM credentials to authenticate to a Kubernetes cluster",
  "tags": []
 },
 "conda_build_config": {
  "c_compiler": "vs2015",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "vs2015",
  "extend_keys": [
   "ignore_version",
   "ignore_build_only_deps",
   "extend_keys",
   "pin_run_as_build"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x.x",
    "min_pin": "x.x.x"
   }
  },
  "python": "3.6",
  "r_base": "3.4",
  "target_platform": "win-64",
  "vc": "14"
 },
 "files": [
  "Library/bin/aws-iam-authenticator.exe"
 ],
 "index": {
  "arch": "x86_64",
  "build": "0",
  "build_number": 0,
  "depends": [],
  "license": "Apache 2.0",
  "license_family": "Apache",
  "name": "aws-iam-authenticator",
  "platform": "win",
  "subdir": "win-64",
  "timestamp": 1550695271421,
  "version": "1.11.5"
 },
 "metadata_version": 1,
 "name": "aws-iam-authenticator",
 "raw_recipe": "{% set name = \"aws-iam-authenticator\" %}\n{% set version = \"1.11.5\" %}\n{% set version_date = \"2018-12-06\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://amazon-eks.s3-us-west-2.amazonaws.com/{{ version }}/{{ version_date }}/bin/linux/amd64/aws-iam-authenticator  # [linux]\n  sha256: a46c66eb14ad08204f2f588b32dc50b10e9a8a0cc48ddf0966596d3c07abe059  # [linux]\n\n  url: https://amazon-eks.s3-us-west-2.amazonaws.com/{{ version }}/{{ version_date }}/bin/darwin/amd64/aws-iam-authenticator  # [osx]\n  sha256: ef60d7ea5108b4de19f7fe59514643a7665df6832f94be620405138d8f60dd18  # [osx]\n\n  url: https://amazon-eks.s3-us-west-2.amazonaws.com/{{ version }}/{{ version_date }}/bin/windows/amd64/aws-iam-authenticator.exe  # [win]\n  sha256: 4ca7b218c0dec3cb1a396ca6f206bc882071918a6599e6c24ecca486d1fec30d  # [win]\n\nbuild:\n  number: 0\n\ntest:\n  commands:\n    - aws-iam-authenticator -h  # [unix]\n    - aws-iam-authenticator.exe -h  # [win]\n\nabout:\n  home: https://github.com/kubernetes-sigs/aws-iam-authenticator\n  license: Apache 2.0\n  license_family: Apache\n  license_file: LICENSE\n  summary: 'A tool to use AWS IAM credentials to authenticate to a Kubernetes cluster'\n\n  description: |\n    If you are an administrator running a Kubernetes cluster on AWS, you already \n    need to manage AWS IAM credentials to provision and update the cluster. By using \n    AWS IAM Authenticator for Kubernetes, you avoid having to manage a separate\n    credential for Kubernetes access. AWS IAM also provides a number of nice\n    properties such as an out of band audit trail (via CloudTrail) and 2FA/MFA enforcement.\n\n    If you are building a Kubernetes installer on AWS, AWS IAM Authenticator for \n    Kubernetes can simplify your bootstrap process. You won't need to somehow \n    smuggle your initial admin credential securely out of your newly installed \n    cluster. Instead, you can create a dedicated KubernetesAdmin role at cluster \n    provisioning time and set up Authenticator to allow cluster administrator logins.\n  doc_url: https://github.com/kubernetes-sigs/aws-iam-authenticator\n  dev_url: https://github.com/kubernetes-sigs/aws-iam-authenticator\n\nextra:\n  recipe-maintainers:\n    - edisongustavo\n",
 "rendered_recipe": {
  "about": {
   "description": "If you are an administrator running a Kubernetes cluster on AWS, you already\nneed to manage AWS IAM credentials to provision and update the cluster. By using\nAWS IAM Authenticator for Kubernetes, you avoid having to manage a separate\ncredential for Kubernetes access. AWS IAM also provides a number of nice\nproperties such as an out of band audit trail (via CloudTrail) and 2FA/MFA enforcement.\n\nIf you are building a Kubernetes installer on AWS, AWS IAM Authenticator for\nKubernetes can simplify your bootstrap process. You won't need to somehow\nsmuggle your initial admin credential securely out of your newly installed\ncluster. Instead, you can create a dedicated KubernetesAdmin role at cluster\nprovisioning time and set up Authenticator to allow cluster administrator logins.\n",
   "dev_url": "https://github.com/kubernetes-sigs/aws-iam-authenticator",
   "doc_url": "https://github.com/kubernetes-sigs/aws-iam-authenticator",
   "home": "https://github.com/kubernetes-sigs/aws-iam-authenticator",
   "license": "Apache 2.0",
   "license_family": "Apache",
   "license_file": "LICENSE",
   "summary": "A tool to use AWS IAM credentials to authenticate to a Kubernetes cluster"
  },
  "build": {
   "number": "0",
   "string": "0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "edisongustavo"
   ]
  },
  "package": {
   "name": "aws-iam-authenticator",
   "version": "1.11.5"
  },
  "source": {
   "sha256": "4ca7b218c0dec3cb1a396ca6f206bc882071918a6599e6c24ecca486d1fec30d",
   "url": "https://amazon-eks.s3-us-west-2.amazonaws.com/1.11.5/2018-12-06/bin/windows/amd64/aws-iam-authenticator.exe"
  },
  "test": {
   "commands": [
    "aws-iam-authenticator.exe -h"
   ]
  }
 },
 "version": "1.11.5"
}