{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.18.7",
  "conda_private": false,
  "conda_version": "4.7.5",
  "description": "HEALPix is a Hierarchical, Equal Area, and iso-Latitude Pixelation of the sphere designed to support efficiently (1)\nlocal operations on the pixel set, (2) a hierarchical tree structure for multi-resolution applications, and (3)\nthe global Fast Spherical Harmonic transform. HEALPix based mathematical software meets the challenges presented\nby high resolution and large volume data sets, such as the WMAP and Planck CMB mission products.\n",
  "dev_url": "https://sourceforge.net/projects/healpix/",
  "doc_url": "http://healpix.sf.net/documentation.php",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "giacomov",
    "jasercion",
    "Areustle",
    "beckermr"
   ]
  },
  "home": "https://sourceforge.net/projects/healpix/",
  "identifiers": [],
  "keywords": [],
  "license": "GPL-2.0",
  "license_family": "GPL",
  "license_file": "COPYING",
  "root_pkgs": [
   "py-lief 0.9.0 py37he1b5a44_1",
   "liblief 0.9.0 hf8a498c_1",
   "attrs 19.1.0 py_0",
   "clyent 1.2.2 py_1",
   "libiconv 1.15 h516909a_1005",
   "xz 5.2.4 h14c3975_1001",
   "patch 2.7.6 h14c3975_1001",
   "bzip2 1.0.6 h14c3975_1002",
   "tqdm 4.32.2 py_0",
   "icu 58.2 hf484d3e_1000",
   "patchelf 0.10 he1b5a44_0",
   "libffi 3.2.1 he1b5a44_1006",
   "pycparser 2.19 py37_1",
   "libgcc-ng 9.1.0 hdf63c60_0",
   "conda-package-handling 1.3.11 py37_0",
   "jsonschema 3.0.1 py37_0",
   "pyopenssl 19.0.0 py37_0",
   "anaconda-client 1.7.2 py_0",
   "python-dateutil 2.8.0 py_0",
   "glob2 0.7 py_0",
   "libarchive 3.3.3 hb44662c_1005",
   "libcurl 7.64.1 hda55be3_0",
   "pip 19.1.1 py37_0",
   "conda 4.7.5 py37_0",
   "ruamel_yaml 0.15.71 py37h14c3975_1000",
   "soupsieve 1.9.2 py37_0",
   "python-libarchive-c 2.8 py37_1004",
   "pyyaml 5.1.1 py37h516909a_0",
   "pycosat 0.6.3 py37h14c3975_1001",
   "zstd 1.4.0 h3b9ef0a_0",
   "jupyter_core 4.4.0 py_0",
   "expat 2.2.5 he1b5a44_1003",
   "certifi 2019.6.16 py37_0",
   "ncurses 6.1 hf484d3e_1002",
   "psutil 5.6.3 py37h516909a_0",
   "six 1.12.0 py37_1000",
   "cryptography 2.7 py37h72c5cf5_0",
   "pysocks 1.7.0 py37_0",
   "jinja2 2.10.1 py_0",
   "tini 0.18.0 h14c3975_1001",
   "pkginfo 1.5.0.1 py_0",
   "pytz 2019.1 py_0",
   "gettext 0.19.8.1 hc5be6a0_1002",
   "readline 8.0 hf8c457e_0",
   "idna 2.8 py37_1000",
   "traitlets 4.3.2 py37_1000",
   "decorator 4.4.0 py_0",
   "libstdcxx-ng 9.1.0 hdf63c60_0",
   "tk 8.6.9 hed695b0_1002",
   "git 2.22.0 pl526hce37bd2_0",
   "nbformat 4.4.0 py_1",
   "pyrsistent 0.15.3 py37h516909a_0",
   "curl 7.64.1 hf8cf82a_0",
   "requests 2.22.0 py37_0",
   "ipython_genutils 0.2.0 py_1",
   "asn1crypto 0.24.0 py37_1003",
   "lz4-c 1.8.3 he1b5a44_1001",
   "markupsafe 1.1.1 py37h14c3975_0",
   "libedit 3.1.20170329 hf8c457e_1001",
   "setuptools 41.0.1 py37_0",
   "openssl 1.1.1c h516909a_0",
   "beautifulsoup4 4.7.1 py37_1001",
   "gosu 1.10 h81701ea_1001",
   "chardet 3.0.4 py37_1003",
   "_libgcc_mutex 0.1 main",
   "wheel 0.33.4 py37_0",
   "ca-certificates 2019.6.16 hecc5488_0",
   "filelock 3.0.10 py_0",
   "python 3.7.3 h33d41f4_1",
   "krb5 1.16.3 h05b26f9_1001",
   "zlib 1.2.11 h14c3975_1004",
   "libxml2 2.9.9 h13577e0_1",
   "libssh2 1.8.2 h22169c7_2",
   "sqlite 3.29.0 hcee41ef_0",
   "cffi 1.12.3 py37h8022711_0",
   "perl 5.26.2 h516909a_1006",
   "urllib3 1.24.3 py37_0",
   "yaml 0.1.7 h14c3975_1001",
   "lzo 2.10 h14c3975_1000",
   "conda-build 3.18.7 py37_1",
   "click 7.0 py_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 2.3.1 py37_0"
  ],
  "summary": "Software for pixelization, hierarchical indexation, synthesis, analysis, and visualization of data on the sphere.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/opt/MacOSX10.10.sdk",
  "c_compiler": "gcc",
  "c_compiler_version": "7",
  "cfitsio": "3.470",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "7",
  "docker_image": "condaforge/linux-anvil-comp7",
  "extend_keys": [
   "pin_run_as_build",
   "extend_keys",
   "ignore_build_only_deps",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "fortran_compiler_version": "7",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "files": [
  "bin/alice3",
  "bin/alm2map_cxx",
  "bin/anafast_cxx",
  "bin/calc_powspec",
  "bin/hotspots_cxx",
  "bin/hpxtest",
  "bin/map2tga",
  "bin/median_filter_cxx",
  "bin/mult_alm",
  "bin/rotalm_cxx",
  "bin/smoothing_cxx",
  "bin/syn_alm_cxx",
  "bin/udgrade_cxx",
  "bin/udgrade_harmonic_cxx",
  "include/healpix_cxx/alloc_utils.h",
  "include/healpix_cxx/alm.h",
  "include/healpix_cxx/alm_fitsio.h",
  "include/healpix_cxx/alm_healpix_tools.h",
  "include/healpix_cxx/alm_powspec_tools.h",
  "include/healpix_cxx/announce.h",
  "include/healpix_cxx/arr.h",
  "include/healpix_cxx/bluestein.h",
  "include/healpix_cxx/bstream.h",
  "include/healpix_cxx/c_utils.h",
  "include/healpix_cxx/colour.h",
  "include/healpix_cxx/compress_utils.h",
  "include/healpix_cxx/datatypes.h",
  "include/healpix_cxx/error_handling.h",
  "include/healpix_cxx/fftpack.h",
  "include/healpix_cxx/fftpack_support.h",
  "include/healpix_cxx/fitshandle.h",
  "include/healpix_cxx/geom_utils.h",
  "include/healpix_cxx/healpix_base.h",
  "include/healpix_cxx/healpix_data_io.h",
  "include/healpix_cxx/healpix_map.h",
  "include/healpix_cxx/healpix_map_fitsio.h",
  "include/healpix_cxx/healpix_tables.h",
  "include/healpix_cxx/levels_facilities.h",
  "include/healpix_cxx/linear_map.h",
  "include/healpix_cxx/ls_fft.h",
  "include/healpix_cxx/ls_image.h",
  "include/healpix_cxx/lsconstants.h",
  "include/healpix_cxx/math_utils.h",
  "include/healpix_cxx/moc.h",
  "include/healpix_cxx/moc_fitsio.h",
  "include/healpix_cxx/moc_query.h",
  "include/healpix_cxx/openmp_support.h",
  "include/healpix_cxx/paramfile.h",
  "include/healpix_cxx/planck_rng.h",
  "include/healpix_cxx/pointing.h",
  "include/healpix_cxx/powspec.h",
  "include/healpix_cxx/powspec_fitsio.h",
  "include/healpix_cxx/rangeset.h",
  "include/healpix_cxx/rotmatrix.h",
  "include/healpix_cxx/safe_cast.h",
  "include/healpix_cxx/safe_ptr.h",
  "include/healpix_cxx/share_utils.h",
  "include/healpix_cxx/sharp.h",
  "include/healpix_cxx/sharp_almhelpers.h",
  "include/healpix_cxx/sharp_complex_hacks.h",
  "include/healpix_cxx/sharp_core.h",
  "include/healpix_cxx/sharp_cxx.h",
  "include/healpix_cxx/sharp_geomhelpers.h",
  "include/healpix_cxx/sharp_internal.h",
  "include/healpix_cxx/sharp_lowlevel.h",
  "include/healpix_cxx/sharp_vecsupport.h",
  "include/healpix_cxx/sharp_vecutil.h",
  "include/healpix_cxx/sharp_ylmgen_c.h",
  "include/healpix_cxx/sort_utils.h",
  "include/healpix_cxx/sse_utils.h",
  "include/healpix_cxx/sse_utils_cxx.h",
  "include/healpix_cxx/string_utils.h",
  "include/healpix_cxx/trafos.h",
  "include/healpix_cxx/vec3.h",
  "include/healpix_cxx/walltime_c.h",
  "include/healpix_cxx/walltimer.h",
  "include/healpix_cxx/wigner.h",
  "include/healpix_cxx/xcomplex.h",
  "lib/libc_utils.a",
  "lib/libcxxsupport.a",
  "lib/libfftpack.a",
  "lib/libhealpix_cxx.a",
  "lib/libsharp.a"
 ],
 "index": {
  "arch": "x86_64",
  "build": "h589c746_1001",
  "build_number": 1001,
  "depends": [
   "cfitsio >=3.470,<3.471.0a0",
   "libgcc-ng >=7.3.0",
   "libstdcxx-ng >=7.3.0"
  ],
  "license": "GPL-2.0",
  "license_family": "GPL",
  "name": "healpix_cxx",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1563074941935,
  "version": "3.31"
 },
 "metadata_version": 1,
 "name": "healpix_cxx",
 "raw_recipe": "{% set name = \"healpix_cxx\" %}\n{% set version = \"3.31\" %}\n{% set sha256 = \"ddf437442b6d5ae7d75c9afaafc4ec43921f903c976e25db3c5ed5185a181542\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: Healpix_{{version}}_2016Aug26.tar.gz\n  url: https://downloads.sourceforge.net/project/healpix/Healpix_{{version}}/Healpix_{{version}}_2016Aug26.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1001\n  skip: true  # [win]\n\nrequirements:\n  build:\n    - autoconf\n    - {{ compiler('fortran') }}\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - cfitsio\n  run:\n    - cfitsio\n\ntest:\n  commands:\n    - test -f ${PREFIX}/lib/libhealpix_cxx.a\n    - test -f ${PREFIX}/lib/libc_utils.a\n    - test -f ${PREFIX}/lib/libcxxsupport.a\n    - test -f ${PREFIX}/lib/libfftpack.a\n    - test -f ${PREFIX}/lib/libsharp.a\n    - test -d ${PREFIX}/include/healpix_cxx\n    - conda inspect linkages -p $PREFIX healpix_cxx  # [not win]\n    - conda inspect objects -p $PREFIX healpix_cxx  # [osx]\n\n    # Test executables\n    - syn_alm_cxx fwhm_arcmin=60 infile=cl.fits rand_seed=1234 nlmax=512 outfile=\\!test.alm polarisation=true\n    - alm2map_cxx nlmax=512 infile=test.alm outfile=\\!test.fits nside=256 polarisation=true\n    - map2tga test.fits test.tga -bar -title \"Synthesized Map\"\n    - anafast_cxx nlmax=512 infile=test.fits outfile_alms=\\!test2.alm outfile=\\!test_cl.fits polarisation=true iter_order=3\n    - alm2map_cxx nlmax=512 infile=test2.alm outfile=\\!test2.fits nside=256 polarisation=true\n    - map2tga test2.fits test2.tga -bar -title \"Reconstructed Map\"\n    - udgrade_cxx infile=test2.fits outfile=\\!test3.fits polarisation=false nside=8\n    - map2tga test3.fits test3.tga -bar -title \"Downgraded Map\"\n    - map2tga test3.fits test4.tga -bar -interpol -title \"Downgraded, Interpolated Map\"\n    - alm2map_cxx nlmax=512 infile=test.alm outfile=!test4.fits nside=317 polarisation=true\n    - map2tga test4.fits test5.tga -bar -title \"Synthesized Map (Nside=317)\"\n    - median_filter_cxx test.fits '!test5.fits' 60\n    - map2tga test5.fits test6.tga -bar -title \"Median-filtered map (1 degree)\"\n    - smoothing_cxx nlmax=512 infile=test.fits outfile=\\!test7.fits polarisation=true fwhm_arcmin=300\n    - alice3 ell=200 kernel_steps=200 steps=400 in=test7.fits nside=256 out=\\!test_alice3\n    - map2tga test_alice3_background.fits test_alice1.tga -pal 0 -bar -interpol -title \"Alice background texture\"\n    - map2tga test_alice3_texture.fits test_alice2.tga -pal 0 -bar -interpol -title \"Alice convolved texture\"\n    - map2tga test_alice3_mod_texture.fits test_alice3.tga -pal 0 -bar -interpol -title \"Alice modulated convolved texture\"\n\n  files:\n    - cl.fits\n\nabout:\n  home: https://sourceforge.net/projects/healpix/\n  license: GPL-2.0\n  license_family: GPL\n  license_file: COPYING\n  summary: 'Software for pixelization, hierarchical indexation, synthesis, analysis, and visualization of data on the sphere.'\n  description: |\n    HEALPix is a Hierarchical, Equal Area, and iso-Latitude Pixelation of the sphere designed to support efficiently (1)\n    local operations on the pixel set, (2) a hierarchical tree structure for multi-resolution applications, and (3)\n    the global Fast Spherical Harmonic transform. HEALPix based mathematical software meets the challenges presented\n    by high resolution and large volume data sets, such as the WMAP and Planck CMB mission products.\n  doc_url: http://healpix.sf.net/documentation.php\n  dev_url: https://sourceforge.net/projects/healpix/\n\nextra:\n  recipe-maintainers:\n    - giacomov\n    - jasercion\n    - Areustle\n    - beckermr\n",
 "rendered_recipe": {
  "about": {
   "description": "HEALPix is a Hierarchical, Equal Area, and iso-Latitude Pixelation of the sphere designed to support efficiently (1)\nlocal operations on the pixel set, (2) a hierarchical tree structure for multi-resolution applications, and (3)\nthe global Fast Spherical Harmonic transform. HEALPix based mathematical software meets the challenges presented\nby high resolution and large volume data sets, such as the WMAP and Planck CMB mission products.\n",
   "dev_url": "https://sourceforge.net/projects/healpix/",
   "doc_url": "http://healpix.sf.net/documentation.php",
   "home": "https://sourceforge.net/projects/healpix/",
   "license": "GPL-2.0",
   "license_family": "GPL",
   "license_file": "COPYING",
   "summary": "Software for pixelization, hierarchical indexation, synthesis, analysis, and visualization of data on the sphere."
  },
  "build": {
   "number": "1001",
   "string": "h589c746_1001"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "Areustle",
    "beckermr",
    "giacomov",
    "jasercion"
   ]
  },
  "package": {
   "name": "healpix_cxx",
   "version": "3.31"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 main",
    "autoconf 2.69 pl526h14c3975_9",
    "binutils_impl_linux-64 2.31.1 h6176602_1",
    "binutils_linux-64 2.31.1 h6176602_7",
    "gcc_impl_linux-64 7.3.0 habb00fd_1",
    "gcc_linux-64 7.3.0 h553295d_7",
    "gfortran_impl_linux-64 7.3.0 hdf63c60_1",
    "gfortran_linux-64 7.3.0 h553295d_7",
    "gxx_impl_linux-64 7.3.0 hdf63c60_1",
    "gxx_linux-64 7.3.0 h553295d_7",
    "libgcc-ng 9.1.0 hdf63c60_0",
    "libgfortran-ng 7.3.0 hdf63c60_0",
    "libstdcxx-ng 9.1.0 hdf63c60_0",
    "m4 1.4.18 h14c3975_1001",
    "perl 5.26.2 h516909a_1006"
   ],
   "host": [
    "_libgcc_mutex 0.1 main",
    "bzip2 1.0.6 h14c3975_1002",
    "ca-certificates 2019.6.16 hecc5488_0",
    "cfitsio 3.470 hb60a0a2_1",
    "krb5 1.16.3 h05b26f9_1001",
    "libcurl 7.64.1 hda55be3_0",
    "libedit 3.1.20170329 hf8c457e_1001",
    "libgcc-ng 9.1.0 hdf63c60_0",
    "libgfortran-ng 7.3.0 hdf63c60_0",
    "libssh2 1.8.2 h22169c7_2",
    "libstdcxx-ng 9.1.0 hdf63c60_0",
    "ncurses 6.1 hf484d3e_1002",
    "openssl 1.1.1c h516909a_0",
    "tk 8.6.9 hed695b0_1002",
    "zlib 1.2.11 h516909a_1005"
   ],
   "run": [
    "cfitsio >=3.470,<3.471.0a0",
    "libgcc-ng >=7.3.0",
    "libstdcxx-ng >=7.3.0"
   ]
  },
  "source": {
   "fn": "Healpix_3.31_2016Aug26.tar.gz",
   "sha256": "ddf437442b6d5ae7d75c9afaafc4ec43921f903c976e25db3c5ed5185a181542",
   "url": "https://downloads.sourceforge.net/project/healpix/Healpix_3.31/Healpix_3.31_2016Aug26.tar.gz"
  },
  "test": {
   "commands": [
    "test -f ${PREFIX}/lib/libhealpix_cxx.a",
    "test -f ${PREFIX}/lib/libc_utils.a",
    "test -f ${PREFIX}/lib/libcxxsupport.a",
    "test -f ${PREFIX}/lib/libfftpack.a",
    "test -f ${PREFIX}/lib/libsharp.a",
    "test -d ${PREFIX}/include/healpix_cxx",
    "conda inspect linkages -p $PREFIX healpix_cxx",
    "syn_alm_cxx fwhm_arcmin=60 infile=cl.fits rand_seed=1234 nlmax=512 outfile=\\!test.alm polarisation=true",
    "alm2map_cxx nlmax=512 infile=test.alm outfile=\\!test.fits nside=256 polarisation=true",
    "map2tga test.fits test.tga -bar -title \"Synthesized Map\"",
    "anafast_cxx nlmax=512 infile=test.fits outfile_alms=\\!test2.alm outfile=\\!test_cl.fits polarisation=true iter_order=3",
    "alm2map_cxx nlmax=512 infile=test2.alm outfile=\\!test2.fits nside=256 polarisation=true",
    "map2tga test2.fits test2.tga -bar -title \"Reconstructed Map\"",
    "udgrade_cxx infile=test2.fits outfile=\\!test3.fits polarisation=false nside=8",
    "map2tga test3.fits test3.tga -bar -title \"Downgraded Map\"",
    "map2tga test3.fits test4.tga -bar -interpol -title \"Downgraded, Interpolated Map\"",
    "alm2map_cxx nlmax=512 infile=test.alm outfile=!test4.fits nside=317 polarisation=true",
    "map2tga test4.fits test5.tga -bar -title \"Synthesized Map (Nside=317)\"",
    "median_filter_cxx test.fits '!test5.fits' 60",
    "map2tga test5.fits test6.tga -bar -title \"Median-filtered map (1 degree)\"",
    "smoothing_cxx nlmax=512 infile=test.fits outfile=\\!test7.fits polarisation=true fwhm_arcmin=300",
    "alice3 ell=200 kernel_steps=200 steps=400 in=test7.fits nside=256 out=\\!test_alice3",
    "map2tga test_alice3_background.fits test_alice1.tga -pal 0 -bar -interpol -title \"Alice background texture\"",
    "map2tga test_alice3_texture.fits test_alice2.tga -pal 0 -bar -interpol -title \"Alice convolved texture\"",
    "map2tga test_alice3_mod_texture.fits test_alice3.tga -pal 0 -bar -interpol -title \"Alice modulated convolved texture\""
   ],
   "files": [
    "cl.fits"
   ]
  }
 },
 "version": "3.31"
}