{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.18.11",
  "conda_private": false,
  "conda_version": "4.7.12",
  "description": "nestly is a collection of functions designed to ease running software\nwith combinatorial choices of parameters. It can easily do so for\n\"cartesian products\" of parameter choices, but can do much more--\narbitrary \"backwards-looking\" dependencies can be used.\n\nThe vision here is that we take a fixed set of parameters and generate\na single type of output for each defined combination, which can then\nbe combined in some way for comparison and retrieval. We would like to\nset things up tidily with nested directories for output reflecting\nnested parameter choices.\n",
  "dev_url": "https://github.com/fhcrc/nestly",
  "doc_url": "http://nestly.readthedocs.org/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "cswarth"
   ]
  },
  "home": "https://github.com/fhcrc/nestly",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "LICENSE",
  "root_pkgs": [
   "anaconda-client 1.7.2 py_0",
   "asn1crypto 1.2.0 py36_0",
   "attrs 19.3.0 py_0",
   "beautifulsoup4 4.8.1 py36_0",
   "bzip2 1.0.8 hfa6e2cd_1",
   "ca-certificates 2019.9.11 hecc5488_0",
   "certifi 2019.9.11 py36_0",
   "cffi 1.13.2 py36hb32ad35_0",
   "chardet 3.0.4 py36_1003",
   "click 7.0 py_0",
   "clyent 1.2.2 py_1",
   "conda 4.7.12 py36_0",
   "conda-build 3.18.11 py36_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 2.5.3 py36_0",
   "conda-package-handling 1.6.0 py36h2fa13f4_0",
   "console_shortcut 0.1.1 3",
   "cryptography 2.7 py36hb32ad35_0",
   "decorator 4.4.1 py_0",
   "filelock 3.0.10 py_0",
   "glob2 0.7 py_0",
   "idna 2.8 py36_1000",
   "importlib_metadata 0.23 py36_0",
   "ipython_genutils 0.2.0 py_1",
   "jinja2 2.10.3 py_0",
   "jsonschema 3.1.1 py36_0",
   "jupyter_core 4.5.0 py_0",
   "libarchive 3.3.3 h4890af2_1006",
   "libiconv 1.15 hfa6e2cd_1005",
   "liblief 0.9.0 ha925a31_2",
   "libxml2 2.9.10 h9ce36c8_0",
   "lz4-c 1.8.3 he025d50_1001",
   "lzo 2.10 hfa6e2cd_1000",
   "m2w64-gcc-libgfortran 5.3.0 6",
   "m2w64-gcc-libs 5.3.0 7",
   "m2w64-gcc-libs-core 5.3.0 7",
   "m2w64-gmp 6.1.0 2",
   "m2w64-libwinpthread-git 5.0.0.4634.697f757 2",
   "markupsafe 1.1.1 py36hfa6e2cd_0",
   "menuinst 1.4.16 py36_0",
   "more-itertools 7.2.0 py_0",
   "msys2-conda-epoch 20160418 1",
   "nbformat 4.4.0 py_1",
   "openssl 1.1.1c hfa6e2cd_0",
   "pip 19.3.1 py36_0",
   "pkginfo 1.5.0.1 py_0",
   "powershell_shortcut 0.0.1 2",
   "psutil 5.6.3 py36hfa6e2cd_0",
   "py-lief 0.9.0 py36ha925a31_2",
   "pycosat 0.6.3 py36hfa6e2cd_1002",
   "pycparser 2.19 py36_1",
   "pyopenssl 19.0.0 py36_0",
   "pyrsistent 0.15.5 py36hfa6e2cd_0",
   "pysocks 1.7.1 py36_0",
   "python 3.6.7 he025d50_1005",
   "python-dateutil 2.8.1 py_0",
   "python-libarchive-c 2.9 py36_0",
   "pytz 2019.3 py_0",
   "pywin32 225 py36hfa6e2cd_0",
   "pyyaml 5.1.2 py36hfa6e2cd_0",
   "requests 2.22.0 py36_1",
   "ripgrep 11.0.2 h301d43c_3",
   "ruamel_yaml 0.15.71 py36hfa6e2cd_1000",
   "setuptools 41.6.0 py36_1",
   "six 1.12.0 py36_1001",
   "soupsieve 1.9.4 py36_0",
   "sqlite 3.27.2 he774522_0",
   "tqdm 4.36.1 py_0",
   "traitlets 4.3.3 py36_0",
   "urllib3 1.25.6 py36_0",
   "vc 14.1 h0510ff6_4",
   "vs2008_express_vc_python_patch 1.0.0 0",
   "vs2015_runtime 14.15.26706 h3a45250_0",
   "wheel 0.33.6 py36_0",
   "wincertstore 0.2 py36_1003",
   "win_inet_pton 1.1.0 py36_0",
   "xz 5.2.4 h2fa13f4_1001",
   "yaml 0.1.7 hc54c509_2",
   "zipp 0.6.0 py_0",
   "zlib 1.2.11 h2fa13f4_1006",
   "zstd 1.4.0 hd8a0e53_0"
  ],
  "summary": "A collection of functions designed to make running software with combinatorial choices of parameters easier.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "vs2017",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "vs2017",
  "extend_keys": [
   "extend_keys",
   "pin_run_as_build",
   "ignore_build_only_deps",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.8",
  "r_base": "3.4",
  "target_platform": "win-64",
  "vc": "14"
 },
 "files": [
  "Lib/site-packages/nestly-0.6.1-py3.8.egg-info/PKG-INFO",
  "Lib/site-packages/nestly/__init__.py",
  "Lib/site-packages/nestly/_py3.py",
  "Lib/site-packages/nestly/core.py",
  "Lib/site-packages/nestly/scons.py",
  "Lib/site-packages/nestly/scripts/__init__.py",
  "Lib/site-packages/nestly/scripts/nestagg.py",
  "Lib/site-packages/nestly/scripts/nestrun.py",
  "Lib/site-packages/nestly/test/__init__.py",
  "Lib/site-packages/nestly/test/test_core.py",
  "Lib/site-packages/nestly/test/test_scons.py",
  "Scripts/nestagg-script.py",
  "Scripts/nestagg.exe",
  "Scripts/nestrun-script.py",
  "Scripts/nestrun.exe"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py38_1000",
  "build_number": 1000,
  "depends": [
   "python >=3.8,<3.9.0a0"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "nestly",
  "platform": "win",
  "subdir": "win-64",
  "timestamp": 1572830518307,
  "version": "0.6.1"
 },
 "metadata_version": 1,
 "name": "nestly",
 "raw_recipe": "{% set name = \"nestly\" %}\n{% set version = \"0.6.1\" %}\n{% set sha256 = \"7f74a33a6ba4064ee6a7c0115eb39e517b07d64bdbc37330f365573ed0a0c43f\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1000\n  script: python setup.py install --single-version-externally-managed --record record.txt\n  entry_points:\n    - nestrun = nestly.scripts.nestrun:main\n    - nestagg = nestly.scripts.nestagg:main\n  \nrequirements:\n  build:\n    - python\n    - setuptools\n  run:\n    - python\n\ntest:\n  imports:\n    - nestly\n  commands:\n    - nestrun --help\n    - nestagg --help \n\nabout:\n  home: https://github.com/fhcrc/nestly\n  license: MIT\n  license_file: LICENSE\n  license_family: MIT\n  summary: 'A collection of functions designed to make running software with combinatorial choices of parameters easier.'\n  description: |\n    nestly is a collection of functions designed to ease running software\n    with combinatorial choices of parameters. It can easily do so for\n    \"cartesian products\" of parameter choices, but can do much more--\n    arbitrary \"backwards-looking\" dependencies can be used.\n\n    The vision here is that we take a fixed set of parameters and generate\n    a single type of output for each defined combination, which can then\n    be combined in some way for comparison and retrieval. We would like to\n    set things up tidily with nested directories for output reflecting\n    nested parameter choices.\n\n  doc_url: http://nestly.readthedocs.org/\n  dev_url: https://github.com/fhcrc/nestly\n\nextra:\n  recipe-maintainers:\n    - cswarth\n",
 "rendered_recipe": {
  "about": {
   "description": "nestly is a collection of functions designed to ease running software\nwith combinatorial choices of parameters. It can easily do so for\n\"cartesian products\" of parameter choices, but can do much more--\narbitrary \"backwards-looking\" dependencies can be used.\n\nThe vision here is that we take a fixed set of parameters and generate\na single type of output for each defined combination, which can then\nbe combined in some way for comparison and retrieval. We would like to\nset things up tidily with nested directories for output reflecting\nnested parameter choices.\n",
   "dev_url": "https://github.com/fhcrc/nestly",
   "doc_url": "http://nestly.readthedocs.org/",
   "home": "https://github.com/fhcrc/nestly",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "A collection of functions designed to make running software with combinatorial choices of parameters easier."
  },
  "build": {
   "entry_points": [
    "nestagg = nestly.scripts.nestagg:main",
    "nestrun = nestly.scripts.nestrun:main"
   ],
   "number": "1000",
   "script": "python setup.py install --single-version-externally-managed --record record.txt",
   "string": "py38_1000"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "cswarth"
   ]
  },
  "package": {
   "name": "nestly",
   "version": "0.6.1"
  },
  "requirements": {
   "build": [
    "ca-certificates 2019.9.11 hecc5488_0",
    "certifi 2019.9.11 py38_0",
    "openssl 1.1.1c hfa6e2cd_0",
    "python 3.8.0 hc9e8b01_1",
    "setuptools 41.6.0 py38_1",
    "sqlite 3.30.1 hfa6e2cd_0",
    "vc 14.1 h0510ff6_4",
    "vs2015_runtime 14.16.27012 hf0eaf9b_0",
    "wincertstore 0.2 py38_1003"
   ],
   "run": [
    "python >=3.8,<3.9.0a0"
   ]
  },
  "source": {
   "fn": "nestly-0.6.1.tar.gz",
   "sha256": "7f74a33a6ba4064ee6a7c0115eb39e517b07d64bdbc37330f365573ed0a0c43f",
   "url": "https://pypi.io/packages/source/n/nestly/nestly-0.6.1.tar.gz"
  },
  "test": {
   "commands": [
    "nestrun --help",
    "nestagg --help"
   ],
   "imports": [
    "nestly"
   ]
  }
 },
 "version": "0.6.1"
}