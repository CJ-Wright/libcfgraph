{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.17.5",
  "conda_private": false,
  "conda_version": "4.5.12",
  "description": "Go is expressive, concise, clean, and efficient. Its concurrency mechanisms\nmake it easy to write programs that get the most out of multicore and\nnetworked machines, while its novel type system enables flexible and\nmodular program construction. Go compiles quickly to machine code yet has\nthe convenience of garbage collection and the power of run-time reflection.\nIt's a fast, statically typed, compiled language that feels like a\ndynamically typed, interpreted language.\n",
  "dev_url": "https://go.googlesource.com/go",
  "doc_url": "https://golang.org/doc",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "nehaljwani",
    "scopatz",
    "sodre"
   ]
  },
  "home": "http://golang.org",
  "identifiers": [],
  "keywords": [],
  "license": "BSD-Style",
  "license_family": "BSD",
  "license_file": "go/LICENSE",
  "root_pkgs": [
   "anaconda-client 1.7.1 py_0",
   "asn1crypto 0.24.0 py36_0",
   "attrs 18.2.0 py_0",
   "beautifulsoup4 4.7.1 py36_1001",
   "bzip2 1.0.6 hfa6e2cd_1002",
   "ca-certificates 2018.11.29 ha4d7672_0",
   "certifi 2018.11.29 py36_1000",
   "cffi 1.11.5 py36h945400d_0",
   "chardet 3.0.4 py36h420ce6e_1",
   "click 7.0 py_0",
   "clyent 1.2.2 py_1",
   "conda 4.5.12 py36_1000",
   "conda-build 3.17.5 py36_0",
   "conda-env 2.6.0 h36134e3_1",
   "conda-forge-ci-setup 2.1.1 py36_1",
   "console_shortcut 0.1.1 h6bb2dd7_3",
   "cryptography 2.3.1 py36h74b6da3_1000",
   "decorator 4.3.0 py_0",
   "filelock 3.0.10 py_0",
   "glob2 0.6 py_0",
   "idna 2.6 py36h148d497_1",
   "ipython_genutils 0.2.0 py_1",
   "jinja2 2.10 py_1",
   "jsonschema 3.0.0a3 py36_1000",
   "jupyter_core 4.4.0 py_0",
   "libarchive 3.3.3 h798a506_0",
   "libiconv 1.15 hfa6e2cd_1004",
   "liblief 0.9.0 ha925a31_2",
   "libxml2 2.9.8 h9ce36c8_1005",
   "lz4-c 1.8.3 he025d50_1001",
   "lzo 2.10 hfa6e2cd_1000",
   "markupsafe 1.1.0 py36hfa6e2cd_1000",
   "menuinst 1.4.14 py36hfa6e2cd_0",
   "nbformat 4.4.0 py_1",
   "openssl 1.0.2p hfa6e2cd_1002",
   "pip 10.0.1 py36_0",
   "pkginfo 1.5.0.1 py_0",
   "psutil 5.4.8 py36hfa6e2cd_1000",
   "py-lief 0.9.0 py36ha925a31_2",
   "pycosat 0.6.3 py36h413d8a4_0",
   "pycparser 2.18 py36hd053e01_1",
   "pyopenssl 18.0.0 py36_0",
   "pyrsistent 0.14.9 py36hfa6e2cd_1000",
   "pysocks 1.6.8 py36_0",
   "python 3.6.5 h0c2934d_0",
   "python-dateutil 2.7.5 py_0",
   "python-libarchive-c 2.8 py36_1004",
   "pytz 2018.9 py_0",
   "pywin32 223 py36hfa6e2cd_1",
   "pyyaml 3.13 py36hfa6e2cd_1001",
   "requests 2.18.4 py36h4371aae_1",
   "ruamel_yaml 0.15.37 py36hfa6e2cd_2",
   "setuptools 39.2.0 py36_0",
   "six 1.11.0 py36h4db2310_1",
   "soupsieve 1.7.1 py36_1000",
   "tqdm 4.29.1 py_0",
   "traitlets 4.3.2 py36_1000",
   "urllib3 1.22 py36h276f60a_0",
   "vc 14.1 h0510ff6_4",
   "vs2008_express_vc_python_patch 1.0.0 0",
   "vs2015_runtime 14.15.26706 h3a45250_0",
   "wheel 0.31.1 py36_0",
   "wincertstore 0.2 py36h7fe50ca_0",
   "win_inet_pton 1.0.1 py36he67d7fd_1",
   "xz 5.2.4 h2fa13f4_1001",
   "yaml 0.1.7 hc54c509_2",
   "zlib 1.2.11 h2fa13f4_1004"
  ],
  "summary": "The Go Programming Language",
  "tags": []
 },
 "conda_build_config": {
  "c_compiler": "vs2015",
  "cgo": "false",
  "cgo_var": "nocgo",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "conda_goarch": "amd64",
  "conda_gofile": "Mach-O",
  "conda_goos": "darwin",
  "conda_goplatform": "osx-64",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "vs2015",
  "fortran_compiler": "gfortran",
  "go14_compiler": "go1.4-bootstrap",
  "ignore_build_only_deps": "python",
  "lua": "5",
  "m2w64_c_compiler": "m2w64-toolchain",
  "m2w64_cxx_compiler": "m2w64-toolchain",
  "m2w64_fortran_compiler": "m2w64-toolchain",
  "nocgo": "true",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x.x",
    "min_pin": "x.x.x"
   }
  },
  "python": "3.6",
  "r_base": "3.4",
  "target_platform": "win-64",
  "vc": "14",
  "zip_keys": [
   [
    "conda_goplatform",
    "conda_goos",
    "conda_gofile"
   ],
   [
    "cgo",
    "nocgo",
    "cgo_var"
   ]
  ]
 },
 "files": [],
 "index": {
  "arch": "x86_64",
  "build": "hb30d042_1001",
  "build_number": 1001,
  "depends": [
   "go-nocgo_win-64 1.9.7 h0113038_1001"
  ],
  "license": "BSD-Style",
  "license_family": "BSD",
  "name": "go",
  "platform": "win",
  "subdir": "win-64",
  "timestamp": 1548081368533,
  "version": "1.9.7"
 },
 "metadata_version": 1,
 "name": "go",
 "raw_recipe": "{% set name = \"go\" %}\n{% set version = \"1.9.7\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  - url: https://storage.googleapis.com/golang/go{{ version }}.src.tar.gz\n    sha256: 582814fa45e8ecb0859a208e517b48aa0ad951e3b36c7fff203d834e0ef27722\n    folder: go\n    #patches:\n    #  - 0001-addr2line.diff  # [linux]\n\nbuild:\n  number: 1001\n  binary_relocation: False\n  detect_binary_files_with_prefix: False\n  force_ignore_keys:    # [win]\n    - c_compiler        # [win]\n    - cxx_compiler      # [win]\n    - fortran_compiler  # [win]\n  # test data links to these DSOs\n  missing_dso_whitelist:\n    - /usr/lib/libSystem.B.dylib\n    - /usr/lib/libgcc_s.1.dylib\n    - libc.so.6\n\noutputs:\n  - name: {{ name }}-{{ cgo_var }}\n    script: build-core.sh   # [not win]\n    script: build-core.bat  # [win]\n    requirements:\n      build:\n        - {{ compiler('go14') }}\n        - {{ compiler('c') }}              # [unix and cgo]\n        - {{ compiler('cxx') }}            # [unix and cgo]\n        - {{ compiler('fortran') }}        # [unix and cgo]\n        - {{ compiler('m2w64_c') }}        # [win and cgo]\n        - {{ compiler('m2w64_cxx') }}      # [win and cgo]\n        - {{ compiler('m2w64_fortran') }}  # [win and cgo]\n\n        - perl     # [not win]\n        - m2-sed   # [win]\n        - m2-grep  # [win]\n    test:\n      requires:\n        - {{ compiler('c') }}              # [unix and cgo]\n        - {{ compiler('m2w64_c') }}        # [win and cgo]\n      files:\n        - hello.go\n        - hello-c.go  # [cgo]\n      commands:\n        # Environment checks\n        - go env\n        - test $(go env GOROOT) = ${CONDA_PREFIX}/go         # [unix]\n        - cmd /c if x%GOROOT% NEQ x%CONDA_PREFIX%\\go exit 1  # [win]\n\n        - test $(go env CGO_ENABLED) -eq {{ cgo }}  # [unix]\n\n        # Test go can actually compile and run a basic program\n        - go run hello.go\n\n        # Test cgo is working properly\n        - go run hello-c.go    # [cgo]\n\n  - name: {{ name }}-{{ cgo_var }}_{{ target_platform }}   # [cgo]\n  - name: {{ name }}-{{ cgo_var }}_{{ conda_goplatform }}  # [nocgo]\n    script: build-{{ cgo_var }}-platform.sh   # [unix]\n    script: build-{{ cgo_var }}-platform.bat  # [win]\n    requirements:\n      build:\n        - sed      # [osx]\n        - m2-sed   # [win]\n      run:\n        - {{ pin_subpackage(\"go-\"+cgo_var, exact=True) }}\n    test:\n      files:\n        - hello.go\n        - hello-c.go\n      requires:\n        - {{ compiler('c') }}              # [unix and cgo]\n        - {{ compiler('m2w64_c') }}        # [win and cgo]\n        - posix    # [win]\n        - m2-file  # [win]\n        - m2-grep  # [win]\n      commands:\n        - go env\n\n        # Check that the file types match what is expected for each platform\n        ## https://stackoverflow.com/questions/2768608/batch-equivalent-of-bash-backticks#2768660\n        - go build hello.go\n        - file hello`go env GOEXE` | grep '{{ conda_gofile }}'  # [unix and nocgo]\n        - for /f \"usebackq tokens=*\" %%a in (`go env GOEXE`) do file hello%%a | grep '{{ conda_gofile }}'  # [win and nocgo]\n\n        - go build hello-c.go  # [cgo]\n  - name: {{ name }}                                         # [nocgo]\n    requirements:                                            # [nocgo]\n      run:                                                   # [nocgo]\n        - {{ pin_subpackage(name+\"-nocgo_\"+target_platform,  # [nocgo]\n                            exact=True) }}                   # [nocgo]\n    test:                                                    # [nocgo]\n      commands:                                              # [nocgo]\n        - go version                                         # [nocgo]\n\n\nabout:\n  home: http://golang.org\n  license: BSD-Style\n  license_family: BSD\n  license_file: go/LICENSE\n  summary: 'The Go Programming Language'\n  description: |\n    Go is expressive, concise, clean, and efficient. Its concurrency mechanisms\n    make it easy to write programs that get the most out of multicore and\n    networked machines, while its novel type system enables flexible and\n    modular program construction. Go compiles quickly to machine code yet has\n    the convenience of garbage collection and the power of run-time reflection.\n    It's a fast, statically typed, compiled language that feels like a\n    dynamically typed, interpreted language.\n  doc_url: https://golang.org/doc\n  dev_url: https://go.googlesource.com/go\n\nextra:\n  recipe-maintainers:\n    - nehaljwani\n    - scopatz\n    - sodre\n",
 "rendered_recipe": {
  "about": {
   "description": "Go is expressive, concise, clean, and efficient. Its concurrency mechanisms\nmake it easy to write programs that get the most out of multicore and\nnetworked machines, while its novel type system enables flexible and\nmodular program construction. Go compiles quickly to machine code yet has\nthe convenience of garbage collection and the power of run-time reflection.\nIt's a fast, statically typed, compiled language that feels like a\ndynamically typed, interpreted language.\n",
   "dev_url": "https://go.googlesource.com/go",
   "doc_url": "https://golang.org/doc",
   "home": "http://golang.org",
   "license": "BSD-Style",
   "license_family": "BSD",
   "license_file": "go/LICENSE",
   "summary": "The Go Programming Language"
  },
  "build": {
   "binary_relocation": false,
   "detect_binary_files_with_prefix": false,
   "force_ignore_keys": [
    "c_compiler",
    "cxx_compiler",
    "fortran_compiler"
   ],
   "missing_dso_whitelist": [
    "/usr/lib/libSystem.B.dylib",
    "/usr/lib/libgcc_s.1.dylib",
    "libc.so.6"
   ],
   "number": "1001",
   "string": "hb30d042_1001"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "nehaljwani",
    "scopatz",
    "sodre"
   ]
  },
  "package": {
   "name": "go",
   "version": "1.9.7"
  },
  "requirements": {
   "run": [
    "go-nocgo_win-64 1.9.7 h0113038_1001"
   ]
  },
  "source": [
   {
    "folder": "go",
    "sha256": "582814fa45e8ecb0859a208e517b48aa0ad951e3b36c7fff203d834e0ef27722",
    "url": "https://storage.googleapis.com/golang/go1.9.7.src.tar.gz"
   }
  ]
 },
 "version": "1.9.7"
}