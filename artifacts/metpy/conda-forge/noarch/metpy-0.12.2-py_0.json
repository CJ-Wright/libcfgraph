{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.19.2",
  "conda_private": false,
  "conda_version": "4.8.3",
  "description": "The space MetPy aims for is GEMPAK (and maybe NCL)-like functionality,\nin a way that plugs easily into the existing scientific Python ecosystem\n(numpy, scipy, matplotlib). So, if you take the average GEMPAK script for\na weather map, you need to: read data, calculate a derived field, and\nshow on a map/skew-T. One of the benefits hoped to achieve over GEMPAK\nis to make it easier to use these routines for any meteorological Python\napplication; this means making it easy to pull out the LCL calculation\nand just use that, or re-use the Skew-T with your own data code. MetPy\nalso prides itself on being well-documented and well-tested, so that\non-going maintenance is easily manageable.\n",
  "dev_url": "https://github.com/Unidata/MetPy",
  "doc_url": "https://unidata.github.io/MetPy",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "dopplershift",
    "dcamron"
   ]
  },
  "home": "https://github.com/Unidata/MetPy",
  "identifiers": [],
  "keywords": [],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "license_file": "LICENSE",
  "root_pkgs": [
   "su-exec 0.2 h516909a_1002",
   "gettext 0.19.8.1 hc5be6a0_1002",
   "libssh2 1.9.0 hab1572f_5",
   "openssl 1.1.1g h516909a_1",
   "tqdm 4.48.2 pyh9f0ad1d_0",
   "icu 67.1 he1b5a44_0",
   "requests 2.24.0 pyh9f0ad1d_0",
   "conda-package-handling 1.6.0 py37h8f50634_2",
   "pycparser 2.20 pyh9f0ad1d_2",
   "certifi 2020.6.20 py37hc8dfbb8_0",
   "_openmp_mutex 4.5 1_gnu",
   "libev 4.33 h516909a_0",
   "pycosat 0.6.3 py37h8f50634_1004",
   "brotlipy 0.7.0 py37h8f50634_1000",
   "git 2.28.0 pl526h5e3e691_0",
   "patch 2.7.6 h14c3975_1001",
   "soupsieve 2.0.1 py37hc8dfbb8_0",
   "sqlite 3.32.3 hcee41ef_1",
   "_libgcc_mutex 0.1 conda_forge",
   "cffi 1.14.1 py37h2b28604_0",
   "tk 8.6.10 hed695b0_0",
   "idna 2.10 pyh9f0ad1d_0",
   "pysocks 1.7.1 py37hc8dfbb8_1",
   "zstd 1.4.5 h6597ccf_2",
   "libxml2 2.9.10 h72b56ed_2",
   "anaconda-client 1.7.2 py_0",
   "ncurses 6.2 he1b5a44_1",
   "ipython_genutils 0.2.0 py_1",
   "curl 7.71.1 he644dc0_4",
   "libedit 3.1.20191231 h46ee950_1",
   "pcre 8.44 he1b5a44_0",
   "lz4-c 1.9.2 he1b5a44_1",
   "python_abi 3.7 1_cp37m",
   "libstdcxx-ng 9.3.0 hdf63c60_14",
   "liblief 0.10.1 he1b5a44_0",
   "tini 0.18.0 h14c3975_1001",
   "pip 20.2.1 py_0",
   "jsonschema 3.2.0 py37hc8dfbb8_1",
   "zlib 1.2.11 h516909a_1006",
   "setuptools 49.2.1 py37hc8dfbb8_0",
   "pytz 2020.1 pyh9f0ad1d_0",
   "urllib3 1.25.10 py_0",
   "python-libarchive-c 2.9 py37_0",
   "ruamel_yaml 0.15.80 py37h8f50634_1001",
   "traitlets 4.3.3 py37hc8dfbb8_1",
   "python-dateutil 2.8.1 py_0",
   "python 3.7.8 h6f2ec95_1_cpython",
   "glob2 0.7 py_0",
   "conda-build 3.19.2 py37hc8dfbb8_2",
   "ld_impl_linux-64 2.34 hc38a660_9",
   "jupyter_core 4.6.3 py37hc8dfbb8_1",
   "readline 8.0 he28a2e2_2",
   "importlib_metadata 1.7.0 0",
   "libnghttp2 1.41.0 hab1572f_1",
   "nbformat 5.0.7 py_0",
   "cryptography 3.0 py37hb09aad4_0",
   "libgomp 9.3.0 h24d8f2e_14",
   "psutil 5.7.2 py37h8f50634_0",
   "decorator 4.4.2 py_0",
   "beautifulsoup4 4.9.1 py37hc8dfbb8_0",
   "c-ares 1.16.1 h516909a_0",
   "zipp 3.1.0 py_0",
   "libgcc-ng 9.3.0 h24d8f2e_14",
   "bzip2 1.0.8 h516909a_2",
   "attrs 19.3.0 py_0",
   "libiconv 1.15 h516909a_1006",
   "krb5 1.17.1 hfafb76e_2",
   "pyrsistent 0.16.0 py37h8f50634_0",
   "expat 2.2.9 he1b5a44_2",
   "libarchive 3.3.3 h3a8160c_1008",
   "yaml 0.2.5 h516909a_0",
   "wheel 0.34.2 py_1",
   "markupsafe 1.1.1 py37h8f50634_1",
   "py-lief 0.10.1 py37h3340039_0",
   "six 1.15.0 pyh9f0ad1d_0",
   "libffi 3.2.1 he1b5a44_1007",
   "patchelf 0.11 he1b5a44_0",
   "chardet 3.0.4 py37hc8dfbb8_1006",
   "pyyaml 5.3.1 py37h8f50634_0",
   "pyopenssl 19.1.0 py_1",
   "conda 4.8.3 py37hc8dfbb8_1",
   "libcurl 7.71.1 hcdd3856_4",
   "jinja2 2.11.2 pyh9f0ad1d_0",
   "lzo 2.10 h14c3975_1000",
   "clyent 1.2.2 py_1",
   "pkginfo 1.5.0.1 py_0",
   "importlib-metadata 1.7.0 py37hc8dfbb8_0",
   "ca-certificates 2020.6.20 hecda079_0",
   "ripgrep 12.1.1 h516909a_0",
   "xz 5.2.5 h516909a_1",
   "perl 5.26.2 h516909a_1006",
   "filelock 3.0.12 pyh9f0ad1d_0",
   "jq 1.6 h14c3975_1000",
   "oniguruma 6.9.3 h516909a_0",
   "click 7.1.2 pyh9f0ad1d_0",
   "conda-env 2.6.0 1",
   "shyaml 0.6.1 py_0",
   "conda-forge-ci-setup 3.1.8 py37he227a23_0"
  ],
  "summary": "MetPy is a collection of tools in Python for reading, visualizing and performing calculations with weather data.",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "docker_image": "condaforge/linux-anvil-comp7",
  "extend_keys": [
   "extend_keys",
   "ignore_build_only_deps",
   "pin_run_as_build",
   "ignore_version"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "files": [
  "site-packages/MetPy-0.12.2.dist-info/INSTALLER",
  "site-packages/MetPy-0.12.2.dist-info/LICENSE",
  "site-packages/MetPy-0.12.2.dist-info/METADATA",
  "site-packages/MetPy-0.12.2.dist-info/RECORD",
  "site-packages/MetPy-0.12.2.dist-info/REQUESTED",
  "site-packages/MetPy-0.12.2.dist-info/WHEEL",
  "site-packages/MetPy-0.12.2.dist-info/direct_url.json",
  "site-packages/MetPy-0.12.2.dist-info/zip-safe",
  "site-packages/metpy/__init__.py",
  "site-packages/metpy/_vendor/__init__.py",
  "site-packages/metpy/_vendor/xarray.py",
  "site-packages/metpy/_version.py",
  "site-packages/metpy/calc/__init__.py",
  "site-packages/metpy/calc/basic.py",
  "site-packages/metpy/calc/cross_sections.py",
  "site-packages/metpy/calc/indices.py",
  "site-packages/metpy/calc/kinematics.py",
  "site-packages/metpy/calc/thermo.py",
  "site-packages/metpy/calc/tools.py",
  "site-packages/metpy/calc/turbulence.py",
  "site-packages/metpy/cbook.py",
  "site-packages/metpy/constants.py",
  "site-packages/metpy/deprecation.py",
  "site-packages/metpy/future.py",
  "site-packages/metpy/interpolate/__init__.py",
  "site-packages/metpy/interpolate/geometry.py",
  "site-packages/metpy/interpolate/grid.py",
  "site-packages/metpy/interpolate/one_dimension.py",
  "site-packages/metpy/interpolate/points.py",
  "site-packages/metpy/interpolate/slices.py",
  "site-packages/metpy/interpolate/tools.py",
  "site-packages/metpy/io/__init__.py",
  "site-packages/metpy/io/_nexrad_msgs/__init__.py",
  "site-packages/metpy/io/_nexrad_msgs/msg18.py",
  "site-packages/metpy/io/_nexrad_msgs/msg3.py",
  "site-packages/metpy/io/_tools.py",
  "site-packages/metpy/io/gini.py",
  "site-packages/metpy/io/metar.py",
  "site-packages/metpy/io/metar_parse.peg",
  "site-packages/metpy/io/metar_parser.py",
  "site-packages/metpy/io/nexrad.py",
  "site-packages/metpy/io/station_data.py",
  "site-packages/metpy/package_tools.py",
  "site-packages/metpy/pandas.py",
  "site-packages/metpy/plots/__init__.py",
  "site-packages/metpy/plots/_mpl.py",
  "site-packages/metpy/plots/_static/metpy_150x150.png",
  "site-packages/metpy/plots/_static/metpy_75x75.png",
  "site-packages/metpy/plots/_static/unidata_150x150.png",
  "site-packages/metpy/plots/_static/unidata_75x75.png",
  "site-packages/metpy/plots/_util.py",
  "site-packages/metpy/plots/cartopy_utils.py",
  "site-packages/metpy/plots/colortable_files/Carbone42.tbl",
  "site-packages/metpy/plots/colortable_files/NWS8bitVel.tbl",
  "site-packages/metpy/plots/colortable_files/NWSReflectivity.tbl",
  "site-packages/metpy/plots/colortable_files/NWSReflectivityExpanded.tbl",
  "site-packages/metpy/plots/colortable_files/NWSSpectrumWidth.tbl",
  "site-packages/metpy/plots/colortable_files/NWSStormClearReflectivity.tbl",
  "site-packages/metpy/plots/colortable_files/NWSVelocity.tbl",
  "site-packages/metpy/plots/colortable_files/WVCIMSS.tbl",
  "site-packages/metpy/plots/colortable_files/ir_bd.tbl",
  "site-packages/metpy/plots/colortable_files/ir_drgb.tbl",
  "site-packages/metpy/plots/colortable_files/ir_rgbv.tbl",
  "site-packages/metpy/plots/colortable_files/ir_tpc.tbl",
  "site-packages/metpy/plots/colortable_files/ir_tv1.tbl",
  "site-packages/metpy/plots/colortable_files/precipitation.tbl",
  "site-packages/metpy/plots/colortable_files/rainbow.tbl",
  "site-packages/metpy/plots/colortable_files/viridis.tbl",
  "site-packages/metpy/plots/colortable_files/wv_tpc.tbl",
  "site-packages/metpy/plots/ctables.py",
  "site-packages/metpy/plots/declarative.py",
  "site-packages/metpy/plots/fonts/wx_symbols.ttf",
  "site-packages/metpy/plots/fonts/wx_symbols_license.md",
  "site-packages/metpy/plots/mapping.py",
  "site-packages/metpy/plots/nexrad_tables/cc_table.tbl",
  "site-packages/metpy/plots/nexrad_tables/et_table.tbl",
  "site-packages/metpy/plots/nexrad_tables/hmc_table.tbl",
  "site-packages/metpy/plots/nexrad_tables/kdp_table.tbl",
  "site-packages/metpy/plots/nexrad_tables/lcr_tabl.tbl",
  "site-packages/metpy/plots/nexrad_tables/ml_table.tbl",
  "site-packages/metpy/plots/nexrad_tables/osw_table.tbl",
  "site-packages/metpy/plots/nexrad_tables/precip_table.tbl",
  "site-packages/metpy/plots/nexrad_tables/ref_table.tbl",
  "site-packages/metpy/plots/nexrad_tables/ref_table8.tbl",
  "site-packages/metpy/plots/nexrad_tables/spw_table.tbl",
  "site-packages/metpy/plots/nexrad_tables/srm_table.tbl",
  "site-packages/metpy/plots/nexrad_tables/ulr_table.tbl",
  "site-packages/metpy/plots/nexrad_tables/vad_table.tbl",
  "site-packages/metpy/plots/nexrad_tables/vel_table.tbl",
  "site-packages/metpy/plots/nexrad_tables/vel_table8.tbl",
  "site-packages/metpy/plots/nexrad_tables/vil_table.tbl",
  "site-packages/metpy/plots/nexrad_tables/vwp_table.tbl",
  "site-packages/metpy/plots/nexrad_tables/zdr_table.tbl",
  "site-packages/metpy/plots/skewt.py",
  "site-packages/metpy/plots/station_plot.py",
  "site-packages/metpy/plots/wx_symbols.py",
  "site-packages/metpy/testing.py",
  "site-packages/metpy/units.py",
  "site-packages/metpy/xarray.py"
 ],
 "index": {
  "arch": null,
  "build": "py_0",
  "build_number": 0,
  "depends": [
   "cartopy >=0.15.0",
   "matplotlib-base >=2.1.0",
   "numpy >=1.16",
   "pandas >=0.22.0",
   "pint >=0.10.1",
   "pooch >=0.1",
   "pyproj >=1.9.4",
   "python >=3.6",
   "scipy >=1.0",
   "traitlets >=4.3.0",
   "xarray >=0.13.0"
  ],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "name": "metpy",
  "noarch": "python",
  "platform": null,
  "subdir": "noarch",
  "timestamp": 1596751098083,
  "version": "0.12.2"
 },
 "metadata_version": 1,
 "name": "metpy",
 "raw_recipe": "{% set name = \"MetPy\" %}\n{% set version = \"0.12.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 54993d3a9b7f9986d64cc9783ad6947b1d95e3877bc99fa368c3bb1d6f381282\n\nbuild:\n  noarch: python\n  script: {{ PYTHON }} -m pip install . --no-deps -vv\n  number: 0\n\nrequirements:\n  host:\n    - python >=3.6\n    - setuptools\n    - pip\n    - setuptools_scm\n\n  run:\n    - python >=3.6\n    - matplotlib-base >=2.1.0\n    - numpy >=1.16\n    - scipy >=1.0\n    - pint >=0.10.1\n    - xarray >=0.13.0\n    - pooch >=0.1\n    - traitlets >=4.3.0\n    - pandas >=0.22.0\n    - pyproj >=1.9.4\n    - cartopy >=0.15.0\n\ntest:\n  imports:\n    - metpy.calc\n    - metpy.interpolate\n    - metpy.io\n    - metpy.plots\n    - metpy.units\n\nabout:\n  home: https://github.com/Unidata/MetPy\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: MetPy is a collection of tools in Python for reading, visualizing and performing calculations with weather data.\n  description: |\n    The space MetPy aims for is GEMPAK (and maybe NCL)-like functionality,\n    in a way that plugs easily into the existing scientific Python ecosystem\n    (numpy, scipy, matplotlib). So, if you take the average GEMPAK script for\n    a weather map, you need to: read data, calculate a derived field, and\n    show on a map/skew-T. One of the benefits hoped to achieve over GEMPAK\n    is to make it easier to use these routines for any meteorological Python\n    application; this means making it easy to pull out the LCL calculation\n    and just use that, or re-use the Skew-T with your own data code. MetPy\n    also prides itself on being well-documented and well-tested, so that\n    on-going maintenance is easily manageable.\n  doc_url: https://unidata.github.io/MetPy\n  dev_url: https://github.com/Unidata/MetPy\n\nextra:\n  recipe-maintainers:\n    - dopplershift\n    - dcamron\n",
 "rendered_recipe": {
  "about": {
   "description": "The space MetPy aims for is GEMPAK (and maybe NCL)-like functionality,\nin a way that plugs easily into the existing scientific Python ecosystem\n(numpy, scipy, matplotlib). So, if you take the average GEMPAK script for\na weather map, you need to: read data, calculate a derived field, and\nshow on a map/skew-T. One of the benefits hoped to achieve over GEMPAK\nis to make it easier to use these routines for any meteorological Python\napplication; this means making it easy to pull out the LCL calculation\nand just use that, or re-use the Skew-T with your own data code. MetPy\nalso prides itself on being well-documented and well-tested, so that\non-going maintenance is easily manageable.\n",
   "dev_url": "https://github.com/Unidata/MetPy",
   "doc_url": "https://unidata.github.io/MetPy",
   "home": "https://github.com/Unidata/MetPy",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "MetPy is a collection of tools in Python for reading, visualizing and performing calculations with weather data."
  },
  "build": {
   "noarch": "python",
   "number": "0",
   "script": "/home/conda/feedstock_root/build_artifacts/metpy_1596750986974/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/bin/python -m pip install . --no-deps -vv",
   "string": "py_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "dcamron",
    "dopplershift"
   ]
  },
  "package": {
   "name": "metpy",
   "version": "0.12.2"
  },
  "requirements": {
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 1_gnu",
    "ca-certificates 2020.6.20 hecda079_0",
    "certifi 2020.6.20 py38h32f6830_0",
    "ld_impl_linux-64 2.34 hc38a660_9",
    "libffi 3.2.1 he1b5a44_1007",
    "libgcc-ng 9.3.0 h24d8f2e_14",
    "libgomp 9.3.0 h24d8f2e_14",
    "libstdcxx-ng 9.3.0 hdf63c60_14",
    "ncurses 6.2 he1b5a44_1",
    "openssl 1.1.1g h516909a_1",
    "pip 20.2.1 py_0",
    "python 3.8.5 h4d41432_2_cpython",
    "python_abi 3.8 1_cp38",
    "readline 8.0 he28a2e2_2",
    "setuptools 49.2.1 py38h32f6830_0",
    "setuptools-scm 4.1.2 pyh9f0ad1d_0",
    "setuptools_scm 4.1.2 0",
    "sqlite 3.32.3 hcee41ef_1",
    "tk 8.6.10 hed695b0_0",
    "toml 0.10.1 pyh9f0ad1d_0",
    "wheel 0.34.2 py_1",
    "xz 5.2.5 h516909a_1",
    "zlib 1.2.11 h516909a_1006"
   ],
   "run": [
    "cartopy >=0.15.0",
    "matplotlib-base >=2.1.0",
    "numpy >=1.16",
    "pandas >=0.22.0",
    "pint >=0.10.1",
    "pooch >=0.1",
    "pyproj >=1.9.4",
    "python >=3.6",
    "scipy >=1.0",
    "traitlets >=4.3.0",
    "xarray >=0.13.0"
   ]
  },
  "source": {
   "sha256": "54993d3a9b7f9986d64cc9783ad6947b1d95e3877bc99fa368c3bb1d6f381282",
   "url": "https://pypi.io/packages/source/M/MetPy/MetPy-0.12.2.tar.gz"
  },
  "test": {
   "imports": [
    "metpy.calc",
    "metpy.interpolate",
    "metpy.io",
    "metpy.plots",
    "metpy.units"
   ]
  }
 },
 "version": "0.12.2"
}