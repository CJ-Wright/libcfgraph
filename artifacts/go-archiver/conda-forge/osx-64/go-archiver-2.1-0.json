{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.15.1",
  "conda_private": false,
  "conda_version": "4.5.11",
  "description": "Easily create and extract .zip, .tar, .tar.gz, .tar.bz2, .tar.xz,\n.tar.lz4, .tar.sz, and .rar (extract-only) files with Go. Package\narchiver makes it trivially easy to make and extract common archive\nformats. Simply name the input and output file(s). Files are put into the\nroot of the archive; directories are recursively added, preserving\nstructure.\n",
  "dev_url": "https://github.com/mholt/archiver",
  "doc_url": "https://godoc.org/github.com/mholt/archiver",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "nehaljwani"
   ]
  },
  "home": "https://github.com/mholt/archiver",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "/Users/travis/miniconda3/conda-bld/go-archiver_1537688032556/work/LICENSE",
  "root_pkgs": [
   "anaconda-client 1.7.2 py36_0",
   "asn1crypto 0.24.0 py36_0",
   "beautifulsoup4 4.6.3 py36_0",
   "ca-certificates 2018.03.07 0",
   "certifi 2018.8.24 py36_1",
   "cffi 1.11.5 py36h6174b99_1",
   "chardet 3.0.4 py36_1",
   "click 6.7 py36hec950be_0",
   "clyent 1.2.2 py36_1",
   "conda 4.5.11 py36_0",
   "conda-build 3.15.1 py36_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 2.0.6 py36_0",
   "cryptography 2.3.1 py36hdbc3d79_0",
   "decorator 4.3.0 py36_0",
   "filelock 3.0.8 py36_0",
   "glob2 0.6 py36_0",
   "idna 2.7 py36_0",
   "ipython_genutils 0.2.0 py36h241746c_0",
   "jinja2 2.10 py36_0",
   "jsonschema 2.6.0 py36hb385e00_0",
   "jupyter_core 4.4.0 py36_0",
   "libcxx 4.0.1 h579ed51_0",
   "libcxxabi 4.0.1 hebd6815_0",
   "libedit 3.1.20170329 hb402a30_2",
   "libffi 3.2.1 h475c297_4",
   "markupsafe 1.0 py36h1de35cc_1",
   "nbformat 4.4.0 py36h827af21_0",
   "ncurses 6.1 h0a44026_0",
   "openssl 1.0.2p h1de35cc_0",
   "pip 10.0.1 py36_0",
   "pkginfo 1.4.2 py36_1",
   "psutil 5.4.7 py36h1de35cc_0",
   "pycosat 0.6.3 py36h1de35cc_0",
   "pycparser 2.18 py36_1",
   "pyopenssl 18.0.0 py36_0",
   "pysocks 1.6.8 py36_0",
   "python 3.6.6 hc167b69_0",
   "python-dateutil 2.7.3 py36_0",
   "python.app 2 py36_8",
   "pytz 2018.5 py36_0",
   "pyyaml 3.13 py36h1de35cc_0",
   "readline 7.0 h1de35cc_5",
   "requests 2.19.1 py36_0",
   "ruamel_yaml 0.15.46 py36h1de35cc_0",
   "setuptools 40.2.0 py36_0",
   "six 1.11.0 py36_1",
   "sqlite 3.24.0 ha441bb4_0",
   "tk 8.6.8 ha441bb4_0",
   "tqdm 4.26.0 py36h28b3542_0",
   "traitlets 4.3.2 py36h65bd3ce_0",
   "urllib3 1.23 py36_0",
   "wheel 0.31.1 py36_0",
   "xz 5.2.4 h1de35cc_4",
   "yaml 0.1.7 hc338f04_2",
   "zlib 1.2.11 hf3cbc9b_2"
  ],
  "summary": "Make and extract common archive formats such as .zip, and .tar.gz",
  "tags": []
 },
 "conda_build_config": {
  "CONDA_BUILD_SYSROOT": "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk",
  "MACOSX_DEPLOYMENT_TARGET": "10.9",
  "build_number_decrement": "0",
  "c_compiler": "clang",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "clangxx",
  "docker_image": "condaforge/linux-anvil",
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": "python",
  "lua": "5",
  "macos_machine": "x86_64-apple-darwin13.4.0",
  "macos_min_version": "10.9",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x.x",
    "min_pin": "x.x.x"
   }
  },
  "python": "3.6",
  "r_base": "3.5",
  "target_platform": "osx-64"
 },
 "files": [
  "bin/archiver"
 ],
 "index": {
  "arch": "x86_64",
  "build": "0",
  "build_number": 0,
  "depends": [],
  "license": "MIT",
  "license_family": "MIT",
  "name": "go-archiver",
  "platform": "osx",
  "subdir": "osx-64",
  "timestamp": 1537688128674,
  "version": "2.1"
 },
 "metadata_version": 1,
 "name": "go-archiver",
 "raw_recipe": "{% set name = \"go-archiver\" %}\n{% set version = \"2.1\" %}\n{% set sha256 = \"78dd79e2b5bd76f5b70120f603a2660e63bbcc2ab30c4e66640a2e4961f94c54\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://github.com/mholt/archiver/archive/v{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  binary_relocation: False\n  detect_binary_files_with_prefix: False\n\nrequirements:\n  build:\n    - go\n    - git\n\ntest:\n  commands:\n    - test -f $PREFIX/bin/archiver  # [unix]\n    - archiver -h || true  # [unix]\n    - if not exist \"%LIBRARY_BIN%\\\\archiver.exe\" exit 1  # [win]\n    - archiver -h || exit 0  # [win]\n\nabout:\n  home: https://github.com/mholt/archiver\n  license: MIT\n  license_family: MIT\n  license_file: '{{ environ[\"SRC_DIR\"] }}/LICENSE'\n  summary: 'Make and extract common archive formats such as .zip, and .tar.gz'\n  description: |\n      Easily create and extract .zip, .tar, .tar.gz, .tar.bz2, .tar.xz,\n      .tar.lz4, .tar.sz, and .rar (extract-only) files with Go. Package\n      archiver makes it trivially easy to make and extract common archive\n      formats. Simply name the input and output file(s). Files are put into the\n      root of the archive; directories are recursively added, preserving\n      structure.\n  doc_url: https://godoc.org/github.com/mholt/archiver\n  dev_url: https://github.com/mholt/archiver\n\nextra:\n  recipe-maintainers:\n    - nehaljwani\n",
 "rendered_recipe": {
  "about": {
   "description": "Easily create and extract .zip, .tar, .tar.gz, .tar.bz2, .tar.xz,\n.tar.lz4, .tar.sz, and .rar (extract-only) files with Go. Package\narchiver makes it trivially easy to make and extract common archive\nformats. Simply name the input and output file(s). Files are put into the\nroot of the archive; directories are recursively added, preserving\nstructure.\n",
   "dev_url": "https://github.com/mholt/archiver",
   "doc_url": "https://godoc.org/github.com/mholt/archiver",
   "home": "https://github.com/mholt/archiver",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "/Users/travis/miniconda3/conda-bld/go-archiver_1537688032556/work/LICENSE",
   "summary": "Make and extract common archive formats such as .zip, and .tar.gz"
  },
  "build": {
   "binary_relocation": false,
   "detect_binary_files_with_prefix": false,
   "number": "0",
   "string": "0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "nehaljwani"
   ]
  },
  "package": {
   "name": "go-archiver",
   "version": "2.1"
  },
  "requirements": {
   "build": [
    "ca-certificates 2018.8.24 ha4d7672_0",
    "curl 7.61.0 h93b3f91_2",
    "expat 2.2.5 hfc679d8_2",
    "gettext 0.19.8.1 h1f1d5ed_1",
    "git 2.19.0 pl526hbb17d3c_0",
    "go 1.10.3 hfc679d8_3",
    "go-core 1.10.3 h26a2512_3",
    "go_osx-64 1.10.3 h144c09f_3",
    "krb5 1.14.6 0",
    "libgfortran 3.0.0 1",
    "libiconv 1.15 h470a237_3",
    "libssh2 1.8.0 h5b517e9_2",
    "openssl 1.0.2p h470a237_0",
    "perl 5.26.2 h16c6ff1_0",
    "tk 8.6.8 ha92aebf_0",
    "zlib 1.2.11 h470a237_3"
   ]
  },
  "source": {
   "fn": "go-archiver-2.1.tar.gz",
   "sha256": "78dd79e2b5bd76f5b70120f603a2660e63bbcc2ab30c4e66640a2e4961f94c54",
   "url": "https://github.com/mholt/archiver/archive/v2.1.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/bin/archiver",
    "archiver -h || true"
   ]
  }
 },
 "version": "2.1"
}