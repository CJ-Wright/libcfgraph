{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.15.1",
  "conda_private": false,
  "conda_version": "4.5.11",
  "description": "Easily create and extract .zip, .tar, .tar.gz, .tar.bz2, .tar.xz,\n.tar.lz4, .tar.sz, and .rar (extract-only) files with Go. Package\narchiver makes it trivially easy to make and extract common archive\nformats. Simply name the input and output file(s). Files are put into the\nroot of the archive; directories are recursively added, preserving\nstructure.\n",
  "dev_url": "https://github.com/mholt/archiver",
  "doc_url": "https://godoc.org/github.com/mholt/archiver",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "nehaljwani"
   ]
  },
  "home": "https://github.com/mholt/archiver",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "src/github.com/mholt/archiver/LICENSE",
  "root_pkgs": [
   "anaconda-client 1.7.1 py_0",
   "asn1crypto 0.24.0 py36_0",
   "attrs 18.2.0 py_0",
   "beautifulsoup4 4.6.3 py36_1000",
   "ca-certificates 2018.11.29 ha4d7672_0",
   "certifi 2018.11.29 py36_1000",
   "cffi 1.11.5 py36h945400d_0",
   "chardet 3.0.4 py36h420ce6e_1",
   "click 7.0 py_0",
   "clyent 1.2.2 py_1",
   "conda 4.5.11 py36_1000",
   "conda-build 3.15.1 py36_0",
   "conda-env 2.6.0 h36134e3_1",
   "conda-forge-ci-setup 2.1.1 py36_0",
   "console_shortcut 0.1.1 h6bb2dd7_3",
   "cryptography 2.3.1 py36h74b6da3_1000",
   "decorator 4.3.0 py_0",
   "filelock 3.0.10 py_0",
   "glob2 0.6 py_0",
   "idna 2.6 py36h148d497_1",
   "ipython_genutils 0.2.0 py_1",
   "jinja2 2.10 py_1",
   "jsonschema 3.0.0a3 py36_1000",
   "jupyter_core 4.4.0 py_0",
   "markupsafe 1.1.0 py36hfa6e2cd_1000",
   "menuinst 1.4.14 py36hfa6e2cd_0",
   "nbformat 4.4.0 py_1",
   "openssl 1.0.2p hfa6e2cd_1001",
   "pip 10.0.1 py36_0",
   "pkginfo 1.4.2 py_1",
   "psutil 5.4.8 py36hfa6e2cd_1000",
   "pycosat 0.6.3 py36h413d8a4_0",
   "pycparser 2.18 py36hd053e01_1",
   "pyopenssl 18.0.0 py36_0",
   "pyrsistent 0.14.7 py36hfa6e2cd_1000",
   "pysocks 1.6.8 py36_0",
   "python 3.6.5 h0c2934d_0",
   "python-dateutil 2.7.5 py_0",
   "pytz 2018.7 py_0",
   "pywin32 223 py36hfa6e2cd_1",
   "pyyaml 3.13 py36hfa6e2cd_1001",
   "requests 2.18.4 py36h4371aae_1",
   "ruamel_yaml 0.15.37 py36hfa6e2cd_2",
   "setuptools 39.2.0 py36_0",
   "six 1.11.0 py36h4db2310_1",
   "tqdm 4.28.1 py_0",
   "traitlets 4.3.2 py36_1000",
   "urllib3 1.22 py36h276f60a_0",
   "vc 14.1 h0510ff6_4",
   "vs2008_express_vc_python_patch 1.0.0 0",
   "vs2015_runtime 14.15.26706 h3a45250_0",
   "wheel 0.31.1 py36_0",
   "wincertstore 0.2 py36h7fe50ca_0",
   "win_inet_pton 1.0.1 py36he67d7fd_1",
   "yaml 0.1.7 hc54c509_2"
  ],
  "summary": "Make and extract common archive formats such as .zip, and .tar.gz",
  "tags": []
 },
 "conda_build_config": {
  "c_compiler": "vs2015",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "vs2015",
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": "python",
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x.x",
    "min_pin": "x.x.x"
   }
  },
  "python": "3.6",
  "r_base": "3.4",
  "target_platform": "win-64",
  "vc": "14"
 },
 "files": [
  "Library/bin/arc.exe"
 ],
 "index": {
  "arch": "x86_64",
  "build": "0",
  "build_number": 0,
  "depends": [],
  "license": "MIT",
  "license_family": "MIT",
  "name": "go-archiver",
  "platform": "win",
  "subdir": "win-64",
  "timestamp": 1543738167435,
  "version": "3.1.0"
 },
 "metadata_version": 1,
 "name": "go-archiver",
 "raw_recipe": "{% set name = \"go-archiver\" %}\n{% set version = \"3.1.0\" %}\n{% set sha256 = \"a58ec07f7d383cd0a1b0734a9c16da4c0716e386a6df6860d041405dd4f73c6a\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://github.com/mholt/archiver/archive/v{{ version }}.tar.gz\n  folder: src/github.com/mholt/archiver\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 0\n  binary_relocation: False\n  detect_binary_files_with_prefix: False\n\nrequirements:\n  build:\n    - go\n    - git\n\ntest:\n  commands:\n    - test -f $PREFIX/bin/arc  # [unix]\n    - arc -h || true  # [unix]\n    - if not exist \"%LIBRARY_BIN%\\\\arc.exe\" exit 1  # [win]\n    - arc -h || exit 0  # [win]\n\nabout:\n  home: https://github.com/mholt/archiver\n  license: MIT\n  license_family: MIT\n  license_file: src/github.com/mholt/archiver/LICENSE\n  summary: 'Make and extract common archive formats such as .zip, and .tar.gz'\n  description: |\n      Easily create and extract .zip, .tar, .tar.gz, .tar.bz2, .tar.xz,\n      .tar.lz4, .tar.sz, and .rar (extract-only) files with Go. Package\n      archiver makes it trivially easy to make and extract common archive\n      formats. Simply name the input and output file(s). Files are put into the\n      root of the archive; directories are recursively added, preserving\n      structure.\n  doc_url: https://godoc.org/github.com/mholt/archiver\n  dev_url: https://github.com/mholt/archiver\n\nextra:\n  recipe-maintainers:\n    - nehaljwani\n",
 "rendered_recipe": {
  "about": {
   "description": "Easily create and extract .zip, .tar, .tar.gz, .tar.bz2, .tar.xz,\n.tar.lz4, .tar.sz, and .rar (extract-only) files with Go. Package\narchiver makes it trivially easy to make and extract common archive\nformats. Simply name the input and output file(s). Files are put into the\nroot of the archive; directories are recursively added, preserving\nstructure.\n",
   "dev_url": "https://github.com/mholt/archiver",
   "doc_url": "https://godoc.org/github.com/mholt/archiver",
   "home": "https://github.com/mholt/archiver",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "src/github.com/mholt/archiver/LICENSE",
   "summary": "Make and extract common archive formats such as .zip, and .tar.gz"
  },
  "build": {
   "binary_relocation": false,
   "detect_binary_files_with_prefix": false,
   "number": "0",
   "string": "0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "nehaljwani"
   ]
  },
  "package": {
   "name": "go-archiver",
   "version": "3.1.0"
  },
  "requirements": {
   "build": [
    "git 2.19.2 1000",
    "go 1.10.5 0",
    "go-core 1.10.5 h41a7c8f_0",
    "go_win-64 1.10.5 h2df250f_0"
   ]
  },
  "source": {
   "fn": "go-archiver-3.1.0.tar.gz",
   "folder": "src/github.com/mholt/archiver",
   "sha256": "a58ec07f7d383cd0a1b0734a9c16da4c0716e386a6df6860d041405dd4f73c6a",
   "url": "https://github.com/mholt/archiver/archive/v3.1.0.tar.gz"
  },
  "test": {
   "commands": [
    "if not exist \"%LIBRARY_BIN%\\\\arc.exe\" exit 1",
    "arc -h || exit 0"
   ]
  }
 },
 "version": "3.1.0"
}