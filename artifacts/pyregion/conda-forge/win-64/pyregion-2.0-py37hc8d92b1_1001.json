{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.18.11",
  "conda_private": false,
  "conda_version": "4.7.12",
  "description": "pyregion is a python module to parse ds9 region files. It also supports\nciao region files. Please note that the main emphasis of the package is to\nread in the regions files generated by ds9 itself. It reads most of the\nregion files created by ds9. However, it may fail to read some of the\nuser-created (or created by other programs) region files, even if they can\nbe successfully read by ds9.\n",
  "dev_url": "https://github.com/astropy/pyregion",
  "doc_url": "https://pyregion.readthedocs.io",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "mwcraig",
    "bsipocz",
    "cdeil"
   ]
  },
  "home": "https://github.com/astropy/pyregion",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "LICENSE",
  "root_pkgs": [
   "anaconda-client 1.7.2 py_0",
   "asn1crypto 1.2.0 py36_0",
   "attrs 19.3.0 py_0",
   "beautifulsoup4 4.8.1 py36_0",
   "bzip2 1.0.8 hfa6e2cd_1",
   "ca-certificates 2019.9.11 hecc5488_0",
   "certifi 2019.9.11 py36_0",
   "cffi 1.13.2 py36hb32ad35_0",
   "chardet 3.0.4 py36_1003",
   "click 7.0 py_0",
   "clyent 1.2.2 py_1",
   "conda 4.7.12 py36_0",
   "conda-build 3.18.11 py36_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 2.5.3 py36_0",
   "conda-package-handling 1.6.0 py36h2fa13f4_0",
   "console_shortcut 0.1.1 3",
   "cryptography 2.7 py36hb32ad35_0",
   "decorator 4.4.1 py_0",
   "filelock 3.0.10 py_0",
   "glob2 0.7 py_0",
   "idna 2.8 py36_1000",
   "importlib_metadata 0.23 py36_0",
   "ipython_genutils 0.2.0 py_1",
   "jinja2 2.10.3 py_0",
   "jsonschema 3.1.1 py36_0",
   "jupyter_core 4.5.0 py_0",
   "libarchive 3.3.3 h4890af2_1006",
   "libiconv 1.15 hfa6e2cd_1005",
   "liblief 0.9.0 ha925a31_2",
   "libxml2 2.9.10 h9ce36c8_0",
   "lz4-c 1.8.3 he025d50_1001",
   "lzo 2.10 hfa6e2cd_1000",
   "m2w64-gcc-libgfortran 5.3.0 6",
   "m2w64-gcc-libs 5.3.0 7",
   "m2w64-gcc-libs-core 5.3.0 7",
   "m2w64-gmp 6.1.0 2",
   "m2w64-libwinpthread-git 5.0.0.4634.697f757 2",
   "markupsafe 1.1.1 py36hfa6e2cd_0",
   "menuinst 1.4.16 py36_0",
   "more-itertools 7.2.0 py_0",
   "msys2-conda-epoch 20160418 1",
   "nbformat 4.4.0 py_1",
   "openssl 1.1.1c hfa6e2cd_0",
   "pip 19.3.1 py36_0",
   "pkginfo 1.5.0.1 py_0",
   "powershell_shortcut 0.0.1 2",
   "psutil 5.6.4 py36hfa6e2cd_0",
   "py-lief 0.9.0 py36ha925a31_2",
   "pycosat 0.6.3 py36hfa6e2cd_1002",
   "pycparser 2.19 py36_1",
   "pyopenssl 19.0.0 py36_0",
   "pyrsistent 0.15.5 py36hfa6e2cd_0",
   "pysocks 1.7.1 py36_0",
   "python 3.6.7 he025d50_1005",
   "python-dateutil 2.8.1 py_0",
   "python-libarchive-c 2.9 py36_0",
   "pytz 2019.3 py_0",
   "pywin32 225 py36hfa6e2cd_0",
   "pyyaml 5.1.2 py36hfa6e2cd_0",
   "requests 2.22.0 py36_1",
   "ripgrep 11.0.2 h301d43c_3",
   "ruamel_yaml 0.15.71 py36hfa6e2cd_1000",
   "setuptools 41.6.0 py36_1",
   "six 1.13.0 py36_0",
   "soupsieve 1.9.4 py36_0",
   "sqlite 3.27.2 he774522_0",
   "tqdm 4.36.1 py_0",
   "traitlets 4.3.3 py36_0",
   "urllib3 1.25.6 py36_0",
   "vc 14.1 h0510ff6_4",
   "vs2008_express_vc_python_patch 1.0.0 0",
   "vs2015_runtime 14.15.26706 h3a45250_0",
   "wheel 0.33.6 py36_0",
   "wincertstore 0.2 py36_1003",
   "win_inet_pton 1.1.0 py36_0",
   "xz 5.2.4 h2fa13f4_1001",
   "yaml 0.1.7 hc54c509_2",
   "zipp 0.6.0 py_0",
   "zlib 1.2.11 h2fa13f4_1006",
   "zstd 1.4.0 hd8a0e53_0"
  ],
  "summary": "Python parser for ds9 and ciao region files",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "vs2015",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "vs2017",
  "extend_keys": [
   "pin_run_as_build",
   "ignore_version",
   "ignore_build_only_deps",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.14",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7",
  "r_base": "3.4",
  "target_platform": "win-64",
  "vc": "14",
  "zip_keys": [
   [
    "python",
    "c_compiler"
   ]
  ]
 },
 "files": [
  "Lib/site-packages/pyregion-2.0-py3.7.egg-info/PKG-INFO",
  "Lib/site-packages/pyregion-2.0-py3.7.egg-info/not-zip-safe",
  "Lib/site-packages/pyregion/__init__.py",
  "Lib/site-packages/pyregion/_astropy_init.py",
  "Lib/site-packages/pyregion/_compiler.c",
  "Lib/site-packages/pyregion/_compiler.cp37-win_amd64.pyd",
  "Lib/site-packages/pyregion/_region_filter.c",
  "Lib/site-packages/pyregion/_region_filter.cp37-win_amd64.pyd",
  "Lib/site-packages/pyregion/conftest.py",
  "Lib/site-packages/pyregion/core.py",
  "Lib/site-packages/pyregion/cython_version.py",
  "Lib/site-packages/pyregion/ds9_attr_parser.py",
  "Lib/site-packages/pyregion/ds9_region_parser.py",
  "Lib/site-packages/pyregion/mpl_helper.py",
  "Lib/site-packages/pyregion/parser_helper.py",
  "Lib/site-packages/pyregion/physical_coordinate.py",
  "Lib/site-packages/pyregion/region_numbers.py",
  "Lib/site-packages/pyregion/region_to_filter.py",
  "Lib/site-packages/pyregion/tests/__init__.py",
  "Lib/site-packages/pyregion/tests/coveragerc",
  "Lib/site-packages/pyregion/tests/data/sample_fits01.header",
  "Lib/site-packages/pyregion/tests/data/sample_fits02.header",
  "Lib/site-packages/pyregion/tests/data/sample_fits03.header",
  "Lib/site-packages/pyregion/tests/data/sample_fits04.header",
  "Lib/site-packages/pyregion/tests/data/test.header",
  "Lib/site-packages/pyregion/tests/data/test01.reg",
  "Lib/site-packages/pyregion/tests/data/test01_ciao.reg",
  "Lib/site-packages/pyregion/tests/data/test01_ciao_physical.reg",
  "Lib/site-packages/pyregion/tests/data/test01_ds9_physical.reg",
  "Lib/site-packages/pyregion/tests/data/test01_fk4.reg",
  "Lib/site-packages/pyregion/tests/data/test01_fk5.reg",
  "Lib/site-packages/pyregion/tests/data/test01_fk5_degree.reg",
  "Lib/site-packages/pyregion/tests/data/test01_fk5_sexagecimal.reg",
  "Lib/site-packages/pyregion/tests/data/test01_gal.reg",
  "Lib/site-packages/pyregion/tests/data/test01_icrs.reg",
  "Lib/site-packages/pyregion/tests/data/test01_img.reg",
  "Lib/site-packages/pyregion/tests/data/test01_mixed.reg",
  "Lib/site-packages/pyregion/tests/data/test01_print.reg",
  "Lib/site-packages/pyregion/tests/data/test02.reg",
  "Lib/site-packages/pyregion/tests/data/test02_1_fk5.reg",
  "Lib/site-packages/pyregion/tests/data/test02_1_img.reg",
  "Lib/site-packages/pyregion/tests/data/test03_ciao_physical.reg",
  "Lib/site-packages/pyregion/tests/data/test03_fk5.reg",
  "Lib/site-packages/pyregion/tests/data/test03_gal.reg",
  "Lib/site-packages/pyregion/tests/data/test03_icrs.reg",
  "Lib/site-packages/pyregion/tests/data/test03_img.reg",
  "Lib/site-packages/pyregion/tests/data/test04_img.reg",
  "Lib/site-packages/pyregion/tests/data/test_annuli.reg",
  "Lib/site-packages/pyregion/tests/data/test_annuli_ciao.reg",
  "Lib/site-packages/pyregion/tests/data/test_annuli_wcs.reg",
  "Lib/site-packages/pyregion/tests/data/test_context.reg",
  "Lib/site-packages/pyregion/tests/data/test_text.reg",
  "Lib/site-packages/pyregion/tests/setup_package.py",
  "Lib/site-packages/pyregion/tests/test_cube.py",
  "Lib/site-packages/pyregion/tests/test_ds9_attr_parser.py",
  "Lib/site-packages/pyregion/tests/test_ds9_region_parser.py",
  "Lib/site-packages/pyregion/tests/test_get_mask.py",
  "Lib/site-packages/pyregion/tests/test_parser_helper.py",
  "Lib/site-packages/pyregion/tests/test_region.py",
  "Lib/site-packages/pyregion/tests/test_region_numbers.py",
  "Lib/site-packages/pyregion/tests/test_wcs.py",
  "Lib/site-packages/pyregion/version.py",
  "Lib/site-packages/pyregion/wcs_converter.py",
  "Lib/site-packages/pyregion/wcs_helper.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py37hc8d92b1_1001",
  "build_number": 1001,
  "depends": [
   "astropy",
   "numpy >=1.14.6,<2.0a0",
   "pyparsing >=2.0.0",
   "python >=3.7,<3.8.0a0",
   "vc >=14,<15.0a0"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "pyregion",
  "platform": "win",
  "subdir": "win-64",
  "timestamp": 1572987886003,
  "version": "2.0"
 },
 "metadata_version": 1,
 "name": "pyregion",
 "raw_recipe": "{% set name = \"pyregion\" %}\n{% set version = \"2.0\" %}\n{% set hash_type = \"sha256\" %}\n{% set hash_value = \"a8ac5f764b53ec332f6bc43f6f2193ca13e8b7d5a3fb2e20ced6b2ea42a9d094\" %}\n\npackage:\n  name: '{{ name|lower }}'\n  version: '{{ version }}'\n\nsource:\n  fn: '{{ name }}-{{ version }}.tar.gz'\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  '{{ hash_type }}': '{{ hash_value }}'\n\nbuild:\n  number: 1001\n  script: python setup.py install --offline --single-version-externally-managed --record=record.txt\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - python\n    - setuptools\n    - numpy        # [not (py36 and win)]\n    - numpy         # [py36 and win]\n    - cython\n  run:\n    - python\n    - pyparsing >=2.0.0\n    - astropy\n    - {{ pin_compatible('numpy') }}   # [not (py36 and win)]\n    - {{ pin_compatible('numpy') }}   # [py36 and win]\n\ntest:\n  imports:\n    - pyregion\n\nabout:\n  home: https://github.com/astropy/pyregion\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Python parser for ds9 and ciao region files\n  description: |\n    pyregion is a python module to parse ds9 region files. It also supports\n    ciao region files. Please note that the main emphasis of the package is to\n    read in the regions files generated by ds9 itself. It reads most of the\n    region files created by ds9. However, it may fail to read some of the\n    user-created (or created by other programs) region files, even if they can\n    be successfully read by ds9.\n  doc_url: https://pyregion.readthedocs.io\n  dev_url: https://github.com/astropy/pyregion\n\nextra:\n  recipe-maintainers:\n    - mwcraig\n    - bsipocz\n    - cdeil\n",
 "rendered_recipe": {
  "about": {
   "description": "pyregion is a python module to parse ds9 region files. It also supports\nciao region files. Please note that the main emphasis of the package is to\nread in the regions files generated by ds9 itself. It reads most of the\nregion files created by ds9. However, it may fail to read some of the\nuser-created (or created by other programs) region files, even if they can\nbe successfully read by ds9.\n",
   "dev_url": "https://github.com/astropy/pyregion",
   "doc_url": "https://pyregion.readthedocs.io",
   "home": "https://github.com/astropy/pyregion",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Python parser for ds9 and ciao region files"
  },
  "build": {
   "number": "1001",
   "script": "python setup.py install --offline --single-version-externally-managed --record=record.txt",
   "string": "py37hc8d92b1_1001"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "bsipocz",
    "cdeil",
    "mwcraig"
   ]
  },
  "package": {
   "name": "pyregion",
   "version": "2.0"
  },
  "requirements": {
   "build": [
    "vs2015_win-64 14.0.25420 h55c1224_11"
   ],
   "host": [
    "ca-certificates 2019.9.11 hecc5488_0",
    "certifi 2019.9.11 py37_0",
    "cython 0.29.14 py37h6538335_0",
    "intel-openmp 2019.4 245",
    "libblas 3.8.0 14_mkl",
    "libcblas 3.8.0 14_mkl",
    "liblapack 3.8.0 14_mkl",
    "mkl 2019.4 245",
    "numpy 1.14.6 py37hc71023c_1201",
    "openssl 1.1.1c hfa6e2cd_0",
    "python 3.7.3 h510b542_1",
    "setuptools 41.6.0 py37_1",
    "sqlite 3.30.1 hfa6e2cd_0",
    "vc 14.1 h0510ff6_4",
    "vs2015_runtime 14.16.27012 hf0eaf9b_0",
    "wincertstore 0.2 py37_1003"
   ],
   "run": [
    "astropy",
    "numpy >=1.14.6,<2.0a0",
    "pyparsing >=2.0.0",
    "python >=3.7,<3.8.0a0",
    "vc >=14,<15.0a0"
   ]
  },
  "source": {
   "fn": "pyregion-2.0.tar.gz",
   "sha256": "a8ac5f764b53ec332f6bc43f6f2193ca13e8b7d5a3fb2e20ced6b2ea42a9d094",
   "url": "https://pypi.io/packages/source/p/pyregion/pyregion-2.0.tar.gz"
  },
  "test": {
   "imports": [
    "pyregion"
   ]
  }
 },
 "version": "2.0"
}