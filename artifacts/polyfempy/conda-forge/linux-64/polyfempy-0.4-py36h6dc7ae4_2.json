{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.18.6",
  "conda_private": false,
  "conda_version": "4.7.5",
  "description": "PolyFEM is a simple C++ and Python finite element library. We provide a wide set of common PDEs including:\n- Laplace\n- Helmholtz\n- Linear Elasticity\n- Saint-Venant Elasticity\n- Neo-Hookean Elasticity\n- Stokes\n\nPolyFEM simplicity lies on the interface: just pick a problem, select some boundary condition, and solve.\nNo need to construct complicated function spaces, or learn a new scripting language: everything is set-up trough a the Setting python class.\nFor instance, PolyFEM seamlessly integrates quad/hexes and tri/tets of order up to 4, and integrate state-of-the-art techniques such as the adaptive p-refinement.\nThe library is actively used in our research so expect frequent updates, fixes, and new features!\n",
  "dev_url": "https://github.com/polyfem/polyfem-python",
  "doc_url": "https://polyfem.github.io/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "teseoch"
   ]
  },
  "home": "https://polyfem.github.io/",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "LICENSE.txt",
  "root_pkgs": [
   "glob2 0.7 py_0",
   "expat 2.2.5 he1b5a44_1003",
   "chardet 3.0.4 py37_1003",
   "libffi 3.2.1 he1b5a44_1006",
   "pkginfo 1.5.0.1 py_0",
   "nbformat 4.4.0 py_1",
   "libarchive 3.3.3 hb44662c_1005",
   "attrs 19.1.0 py_0",
   "psutil 5.6.3 py37h516909a_0",
   "decorator 4.4.0 py_0",
   "ncurses 6.1 hf484d3e_1002",
   "tk 8.6.9 hed695b0_1002",
   "conda-package-handling 1.3.10 py37_0",
   "libedit 3.1.20170329 hf8c457e_1001",
   "pyrsistent 0.15.2 py37h516909a_0",
   "patchelf 0.10 he1b5a44_0",
   "wheel 0.33.4 py37_0",
   "git 2.22.0 pl526hce37bd2_0",
   "sqlite 3.28.0 h8b20d00_0",
   "cryptography 2.7 py37h72c5cf5_0",
   "libxml2 2.9.9 h13577e0_0",
   "pycparser 2.19 py37_1",
   "jinja2 2.10.1 py_0",
   "ipython_genutils 0.2.0 py_1",
   "gosu 1.10 h81701ea_1001",
   "zstd 1.4.0 h3b9ef0a_0",
   "tqdm 4.32.2 py_0",
   "beautifulsoup4 4.7.1 py37_1001",
   "python-dateutil 2.8.0 py_0",
   "libiconv 1.15 h516909a_1005",
   "pyyaml 5.1.1 py37h516909a_0",
   "filelock 3.0.10 py_0",
   "ca-certificates 2019.6.16 hecc5488_0",
   "cffi 1.12.3 py37h8022711_0",
   "openssl 1.1.1b h14c3975_1",
   "pyopenssl 19.0.0 py37_0",
   "traitlets 4.3.2 py37_1000",
   "libcurl 7.64.1 hda55be3_0",
   "conda-build 3.18.6 py37_0",
   "clyent 1.2.2 py_1",
   "readline 7.0 hf8c457e_1001",
   "soupsieve 1.9.2 py37_0",
   "conda 4.7.5 py37_0",
   "urllib3 1.24.3 py37_0",
   "jsonschema 3.0.1 py37_0",
   "tini 0.18.0 h14c3975_1001",
   "py-lief 0.9.0 py37he1b5a44_1",
   "requests 2.22.0 py37_0",
   "liblief 0.9.0 hf8a498c_1",
   "asn1crypto 0.24.0 py37_1003",
   "markupsafe 1.1.1 py37h14c3975_0",
   "idna 2.8 py37_1000",
   "setuptools 41.0.1 py37_0",
   "pysocks 1.7.0 py37_0",
   "pycosat 0.6.3 py37h14c3975_1001",
   "ruamel_yaml 0.15.71 py37h14c3975_1000",
   "lz4-c 1.8.3 he1b5a44_1001",
   "curl 7.64.1 hf8cf82a_0",
   "icu 58.2 hf484d3e_1000",
   "pip 19.1.1 py37_0",
   "libstdcxx-ng 9.1.0 hdf63c60_0",
   "libgcc-ng 9.1.0 hdf63c60_0",
   "bzip2 1.0.6 h14c3975_1002",
   "zlib 1.2.11 h14c3975_1004",
   "pytz 2019.1 py_0",
   "six 1.12.0 py37_1000",
   "yaml 0.1.7 h14c3975_1001",
   "krb5 1.16.3 h05b26f9_1001",
   "gettext 0.19.8.1 hc5be6a0_1002",
   "jupyter_core 4.4.0 py_0",
   "python-libarchive-c 2.8 py37_1004",
   "xz 5.2.4 h14c3975_1001",
   "certifi 2019.6.16 py37_0",
   "libssh2 1.8.2 h22169c7_2",
   "anaconda-client 1.7.2 py_0",
   "perl 5.26.2 h516909a_1006",
   "lzo 2.10 h14c3975_1000",
   "python 3.7.3 h5b0a415_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 2.3.1 py37_0",
   "click 7.0 py_0"
  ],
  "summary": "Easy-to-use powerfull finite element library based on Polyfem",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "CONDA_BUILD_SYSROOT": "/opt/MacOSX10.10.sdk",
  "c_compiler": "gcc",
  "c_compiler_version": "7",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "7",
  "docker_image": "condaforge/linux-anvil-comp7",
  "extend_keys": [
   "pin_run_as_build",
   "ignore_build_only_deps",
   "ignore_version",
   "extend_keys"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "libblas": "3.8 *netlib",
  "libcblas": "3.8 *netlib",
  "lua": "5",
  "numpy": "1.14",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.6",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "files": [
  "lib/python3.6/site-packages/polyfempy-0.4.dist-info/INSTALLER",
  "lib/python3.6/site-packages/polyfempy-0.4.dist-info/LICENSE",
  "lib/python3.6/site-packages/polyfempy-0.4.dist-info/METADATA",
  "lib/python3.6/site-packages/polyfempy-0.4.dist-info/RECORD",
  "lib/python3.6/site-packages/polyfempy-0.4.dist-info/WHEEL",
  "lib/python3.6/site-packages/polyfempy/Problems.py",
  "lib/python3.6/site-packages/polyfempy/Settings.py",
  "lib/python3.6/site-packages/polyfempy/__init__.py",
  "lib/python3.6/site-packages/polyfempy/polyfempy.cpython-36m-x86_64-linux-gnu.so",
  "lib/python3.6/site-packages/test/__init__.py",
  "lib/python3.6/site-packages/test/test_bending.py",
  "lib/python3.6/site-packages/test/test_gravity.py",
  "lib/python3.6/site-packages/test/test_inflation.py",
  "lib/python3.6/site-packages/test/test_plane_hole.py",
  "lib/python3.6/site-packages/test/test_torsion.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py36h6dc7ae4_2",
  "build_number": 2,
  "depends": [
   "libblas >=3.8.0,<4.0a0",
   "libcblas >=3.8.0,<4.0a0",
   "libgcc-ng >=7.3.0",
   "libstdcxx-ng >=7.3.0",
   "numpy >=1.14.6,<2.0a0",
   "python >=3.6,<3.7.0a0",
   "suitesparse"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "polyfempy",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1561641563783,
  "version": "0.4"
 },
 "metadata_version": 1,
 "name": "polyfempy",
 "raw_recipe": "{% set name = \"polyfempy\" %}\n{% set version = \"0.4\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\n\nsource:\n  url: https://github.com/polyfem/polyfem-python/archive/{{ version }}.tar.gz\n  sha256: 5cc33ca5f6eaadbc0baa6cbd89c112807a01b1a1502736188236bf84fdbcbe5a\n\nbuild:\n  number: 2\n  skip: True  # [py<31]\n  script:\n    - \"{{ PYTHON }} -m pip install . --no-deps -vv\"\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - make\n  host:\n    - python\n    - pip\n    - libblas\n    - libcblas\n    - numpy\n    - suitesparse  # [not ppc64le and not aarch64 and not win]\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - suitesparse  # [not ppc64le and not aarch64 and not win]\n\ntest:\n  imports:\n    - polyfempy\n\nabout:\n  home: https://polyfem.github.io/\n\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n\n  summary: 'Easy-to-use powerfull finite element library based on Polyfem'\n\n  description: |\n    PolyFEM is a simple C++ and Python finite element library. We provide a wide set of common PDEs including:\n    - Laplace\n    - Helmholtz\n    - Linear Elasticity\n    - Saint-Venant Elasticity\n    - Neo-Hookean Elasticity\n    - Stokes\n\n    PolyFEM simplicity lies on the interface: just pick a problem, select some boundary condition, and solve.\n    No need to construct complicated function spaces, or learn a new scripting language: everything is set-up trough a the Setting python class.\n    For instance, PolyFEM seamlessly integrates quad/hexes and tri/tets of order up to 4, and integrate state-of-the-art techniques such as the adaptive p-refinement.\n    The library is actively used in our research so expect frequent updates, fixes, and new features!\n  doc_url: https://polyfem.github.io/\n  dev_url: https://github.com/polyfem/polyfem-python\n\nextra:\n  recipe-maintainers:\n    - teseoch\n",
 "rendered_recipe": {
  "about": {
   "description": "PolyFEM is a simple C++ and Python finite element library. We provide a wide set of common PDEs including:\n- Laplace\n- Helmholtz\n- Linear Elasticity\n- Saint-Venant Elasticity\n- Neo-Hookean Elasticity\n- Stokes\n\nPolyFEM simplicity lies on the interface: just pick a problem, select some boundary condition, and solve.\nNo need to construct complicated function spaces, or learn a new scripting language: everything is set-up trough a the Setting python class.\nFor instance, PolyFEM seamlessly integrates quad/hexes and tri/tets of order up to 4, and integrate state-of-the-art techniques such as the adaptive p-refinement.\nThe library is actively used in our research so expect frequent updates, fixes, and new features!\n",
   "dev_url": "https://github.com/polyfem/polyfem-python",
   "doc_url": "https://polyfem.github.io/",
   "home": "https://polyfem.github.io/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Easy-to-use powerfull finite element library based on Polyfem"
  },
  "build": {
   "number": "2",
   "script": [
    "/home/conda/feedstock_root/build_artifacts/polyfempy_1561640811801/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p/bin/python -m pip install . --no-deps -vv"
   ],
   "string": "py36h6dc7ae4_2"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "teseoch"
   ]
  },
  "package": {
   "name": "polyfempy",
   "version": "0.4"
  },
  "requirements": {
   "build": [
    "binutils_impl_linux-64 2.31.1 h6176602_1",
    "binutils_linux-64 2.31.1 h6176602_7",
    "bzip2 1.0.6 h14c3975_1002",
    "ca-certificates 2019.6.16 hecc5488_0",
    "cmake 3.14.5 hf94ab9c_0",
    "curl 7.64.1 hf8cf82a_0",
    "expat 2.2.5 he1b5a44_1003",
    "gcc_impl_linux-64 7.3.0 habb00fd_1",
    "gcc_linux-64 7.3.0 h553295d_7",
    "gxx_impl_linux-64 7.3.0 hdf63c60_1",
    "gxx_linux-64 7.3.0 h553295d_7",
    "krb5 1.16.3 h05b26f9_1001",
    "libcurl 7.64.1 hda55be3_0",
    "libedit 3.1.20170329 hf8c457e_1001",
    "libgcc-ng 9.1.0 hdf63c60_0",
    "libssh2 1.8.2 h22169c7_2",
    "libstdcxx-ng 9.1.0 hdf63c60_0",
    "libuv 1.29.1 h516909a_0",
    "make 4.2.1 h14c3975_2004",
    "ncurses 6.1 hf484d3e_1002",
    "openssl 1.1.1b h14c3975_1",
    "rhash 1.3.6 h14c3975_1001",
    "tk 8.6.9 hed695b0_1002",
    "xz 5.2.4 h14c3975_1001",
    "zlib 1.2.11 h14c3975_1004"
   ],
   "host": [
    "ca-certificates 2019.6.16 hecc5488_0",
    "certifi 2019.6.16 py36_0",
    "libblas 3.8.0 5_h6e990d7_netlib",
    "libcblas 3.8.0 5_h6e990d7_netlib",
    "libffi 3.2.1 he1b5a44_1006",
    "libgcc-ng 9.1.0 hdf63c60_0",
    "libgfortran-ng 7.3.0 hdf63c60_0",
    "liblapack 3.8.0 5_h6e990d7_netlib",
    "libstdcxx-ng 9.1.0 hdf63c60_0",
    "metis 5.1.0 hf484d3e_1003",
    "ncurses 6.1 hf484d3e_1002",
    "numpy 1.14.6 py36he5ce36f_1201",
    "openssl 1.1.1b h14c3975_1",
    "pip 19.1.1 py36_0",
    "python 3.6.7 h381d211_1004",
    "readline 7.0 hf8c457e_1001",
    "setuptools 41.0.1 py36_0",
    "sqlite 3.28.0 h8b20d00_0",
    "suitesparse 4.5.6 heab0a99_1202",
    "tbb 2019.7 hc9558a2_0",
    "tk 8.6.9 hed695b0_1002",
    "wheel 0.33.4 py36_0",
    "xz 5.2.4 h14c3975_1001",
    "zlib 1.2.11 h14c3975_1004"
   ],
   "run": [
    "libblas >=3.8.0,<4.0a0",
    "libcblas >=3.8.0,<4.0a0",
    "libgcc-ng >=7.3.0",
    "libstdcxx-ng >=7.3.0",
    "numpy >=1.14.6,<2.0a0",
    "python >=3.6,<3.7.0a0",
    "suitesparse"
   ]
  },
  "source": {
   "sha256": "5cc33ca5f6eaadbc0baa6cbd89c112807a01b1a1502736188236bf84fdbcbe5a",
   "url": "https://github.com/polyfem/polyfem-python/archive/0.4.tar.gz"
  },
  "test": {
   "imports": [
    "polyfempy"
   ]
  }
 },
 "version": "0.4"
}