{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.18.11",
  "conda_private": false,
  "conda_version": "4.7.12",
  "description": "PolyFEM is a simple C++ and Python finite element library. We provide a wide set of common PDEs including:<br/>\n- Laplace\n- Helmholtz\n- Linear Elasticity\n- Saint-Venant Elasticity\n- Neo-Hookean Elasticity\n- Stokes<br/>\n\nPolyFEM simplicity lies on the interface: just pick a problem, select some boundary condition, and solve.\nNo need to construct complicated function spaces, or learn a new scripting language: everything is set-up trough a the Setting python class.\nFor instance, PolyFEM seamlessly integrates quad/hexes and tri/tets of order up to 4, and integrate state-of-the-art techniques such as the adaptive p-refinement.\nThe library is actively used in our research so expect frequent updates, fixes, and new features!\n",
  "dev_url": "https://github.com/polyfem/polyfem-python",
  "doc_url": "https://polyfem.github.io/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "teseoch"
   ]
  },
  "home": "https://polyfem.github.io/",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "LICENSE.txt",
  "root_pkgs": [
   "python-libarchive-c 2.9 py37_0",
   "openssl 1.1.1d h516909a_0",
   "pycparser 2.19 py37_1",
   "cryptography 2.8 py37h72c5cf5_0",
   "tini 0.18.0 h14c3975_1001",
   "conda-package-handling 1.6.0 py37h516909a_1",
   "_libgcc_mutex 0.1 main",
   "pyrsistent 0.15.5 py37h516909a_0",
   "xz 5.2.4 h14c3975_1001",
   "ripgrep 11.0.2 h516909a_3",
   "zipp 0.6.0 py_0",
   "conda 4.7.12 py37_0",
   "pytz 2019.3 py_0",
   "soupsieve 1.9.4 py37_0",
   "gosu 1.10 h81701ea_1001",
   "libxml2 2.9.10 hee79883_0",
   "libarchive 3.4.0 hfd892fa_2",
   "importlib_metadata 0.23 py37_0",
   "glob2 0.7 py_0",
   "zlib 1.2.11 h516909a_1006",
   "markupsafe 1.1.1 py37h516909a_0",
   "patch 2.7.6 h14c3975_1001",
   "git 2.23.0 pl526hce37bd2_2",
   "clyent 1.2.2 py_1",
   "nbformat 4.4.0 py_1",
   "sqlite 3.30.1 hcee41ef_0",
   "ncurses 6.1 hf484d3e_1002",
   "jupyter_core 4.6.1 py37_0",
   "traitlets 4.3.3 py37_0",
   "liblief 0.9.0 hf8a498c_1",
   "libedit 3.1.20170329 hf8c457e_1001",
   "six 1.13.0 py37_0",
   "pyopenssl 19.0.0 py37_0",
   "setuptools 41.6.0 py37_1",
   "jinja2 2.10.3 py_0",
   "certifi 2019.9.11 py37_0",
   "filelock 3.0.10 py_0",
   "python-dateutil 2.8.1 py_0",
   "lz4-c 1.8.3 he1b5a44_1001",
   "decorator 4.4.1 py_0",
   "chardet 3.0.4 py37_1003",
   "ipython_genutils 0.2.0 py_1",
   "libcurl 7.65.3 hda55be3_0",
   "asn1crypto 1.2.0 py37_0",
   "krb5 1.16.3 h05b26f9_1001",
   "beautifulsoup4 4.8.1 py37_0",
   "icu 64.2 he1b5a44_1",
   "pysocks 1.7.1 py37_0",
   "ruamel_yaml 0.15.71 py37h14c3975_1000",
   "attrs 19.3.0 py_0",
   "yaml 0.1.7 h14c3975_1001",
   "requests 2.22.0 py37_1",
   "pycosat 0.6.3 py37h516909a_1002",
   "libiconv 1.15 h516909a_1005",
   "patchelf 0.10 he1b5a44_0",
   "tqdm 4.38.0 py_2",
   "libgcc-ng 9.1.0 hdf63c60_0",
   "pkginfo 1.5.0.1 py_0",
   "libstdcxx-ng 9.1.0 hdf63c60_0",
   "gettext 0.19.8.1 hc5be6a0_1002",
   "jsonschema 3.2.0 py37_0",
   "idna 2.8 py37_1000",
   "psutil 5.6.5 py37h516909a_0",
   "perl 5.26.2 h516909a_1006",
   "py-lief 0.9.0 py37he1b5a44_1",
   "ca-certificates 2019.9.11 hecc5488_0",
   "conda-build 3.18.11 py37_0",
   "expat 2.2.5 he1b5a44_1004",
   "tk 8.6.9 hed695b0_1003",
   "readline 8.0 hf8c457e_0",
   "bzip2 1.0.8 h516909a_1",
   "libssh2 1.8.2 h22169c7_2",
   "anaconda-client 1.7.2 py_0",
   "lzo 2.10 h14c3975_1000",
   "urllib3 1.25.7 py37_0",
   "pcre 8.43 he1b5a44_0",
   "cffi 1.13.2 py37h8022711_0",
   "wheel 0.33.6 py37_0",
   "pyyaml 5.1.2 py37h516909a_0",
   "python 3.7.3 h33d41f4_1",
   "libffi 3.2.1 he1b5a44_1006",
   "pip 19.3.1 py37_0",
   "zstd 1.4.4 h3b9ef0a_1",
   "more-itertools 7.2.0 py_0",
   "curl 7.65.3 hf8cf82a_0",
   "click 7.0 py_0",
   "conda-forge-ci-setup 2.5.3 py37_0",
   "conda-env 2.6.0 1"
  ],
  "summary": "Easy-to-use powerfull finite element library based on Polyfem",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "c_compiler_version": "7",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "7",
  "docker_image": "condaforge/linux-anvil-comp7",
  "extend_keys": [
   "ignore_version",
   "ignore_build_only_deps",
   "extend_keys",
   "pin_run_as_build"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "libblas": "3.8 *netlib",
  "libcblas": "3.8 *netlib",
  "lua": "5",
  "numpy": "1.14",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.8",
  "r_base": "3.5",
  "suitesparse": "5.4",
  "target_platform": "linux-64"
 },
 "files": [
  "lib/python3.8/site-packages/polyfempy-0.5.2.dist-info/INSTALLER",
  "lib/python3.8/site-packages/polyfempy-0.5.2.dist-info/LICENSE",
  "lib/python3.8/site-packages/polyfempy-0.5.2.dist-info/METADATA",
  "lib/python3.8/site-packages/polyfempy-0.5.2.dist-info/RECORD",
  "lib/python3.8/site-packages/polyfempy-0.5.2.dist-info/WHEEL",
  "lib/python3.8/site-packages/polyfempy/Problem.py",
  "lib/python3.8/site-packages/polyfempy/Problems.py",
  "lib/python3.8/site-packages/polyfempy/Settings.py",
  "lib/python3.8/site-packages/polyfempy/__init__.py",
  "lib/python3.8/site-packages/polyfempy/polyfempy.cpython-38-x86_64-linux-gnu.so",
  "lib/python3.8/site-packages/test/__init__.py",
  "lib/python3.8/site-packages/test/test_bending.py",
  "lib/python3.8/site-packages/test/test_gravity.py",
  "lib/python3.8/site-packages/test/test_inflation.py",
  "lib/python3.8/site-packages/test/test_plane_hole.py",
  "lib/python3.8/site-packages/test/test_torsion.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py38hb914a97_2",
  "build_number": 2,
  "depends": [
   "libblas >=3.8.0,<4.0a0",
   "libcblas >=3.8.0,<4.0a0",
   "libgcc-ng >=7.3.0",
   "libstdcxx-ng >=7.3.0",
   "numpy >=1.14.6,<2.0a0",
   "python >=3.8,<3.9.0a0",
   "suitesparse >=5.4.0,<6.0a0"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "polyfempy",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1574177264971,
  "version": "0.5.2"
 },
 "metadata_version": 1,
 "name": "polyfempy",
 "raw_recipe": "{% set name = \"polyfempy\" %}\n{% set version = \"0.5.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\n\nsource:\n  url: https://github.com/polyfem/polyfem-python/archive/{{ version }}.tar.gz\n  sha256: e241d24a07efe62da562650cd2651cfe9154cd69077aea9437d1937e8b292eca\n\n\nbuild:\n  number: 2\n  skip: True  # [py<31]\n  script:\n    - set \"CMAKE_GENERATOR=NMake Makefiles\"  # [win]\n    - {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - make\n  host:\n    - python\n    - pip\n    - libblas\n    - libcblas\n    - numpy\n    - suitesparse  # [not ppc64le and not aarch64 and not win]\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n    - suitesparse  # [not ppc64le and not aarch64 and not win]\n\ntest:\n  imports:\n    - polyfempy\n\nabout:\n  home: https://polyfem.github.io/\n\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n\n  summary: 'Easy-to-use powerfull finite element library based on Polyfem'\n\n  description: |\n    PolyFEM is a simple C++ and Python finite element library. We provide a wide set of common PDEs including:<br/>\n    - Laplace\n    - Helmholtz\n    - Linear Elasticity\n    - Saint-Venant Elasticity\n    - Neo-Hookean Elasticity\n    - Stokes<br/>\n\n    PolyFEM simplicity lies on the interface: just pick a problem, select some boundary condition, and solve.\n    No need to construct complicated function spaces, or learn a new scripting language: everything is set-up trough a the Setting python class.\n    For instance, PolyFEM seamlessly integrates quad/hexes and tri/tets of order up to 4, and integrate state-of-the-art techniques such as the adaptive p-refinement.\n    The library is actively used in our research so expect frequent updates, fixes, and new features!\n  doc_url: https://polyfem.github.io/\n  dev_url: https://github.com/polyfem/polyfem-python\n\nextra:\n  recipe-maintainers:\n    - teseoch\n",
 "rendered_recipe": {
  "about": {
   "description": "PolyFEM is a simple C++ and Python finite element library. We provide a wide set of common PDEs including:<br/>\n- Laplace\n- Helmholtz\n- Linear Elasticity\n- Saint-Venant Elasticity\n- Neo-Hookean Elasticity\n- Stokes<br/>\n\nPolyFEM simplicity lies on the interface: just pick a problem, select some boundary condition, and solve.\nNo need to construct complicated function spaces, or learn a new scripting language: everything is set-up trough a the Setting python class.\nFor instance, PolyFEM seamlessly integrates quad/hexes and tri/tets of order up to 4, and integrate state-of-the-art techniques such as the adaptive p-refinement.\nThe library is actively used in our research so expect frequent updates, fixes, and new features!\n",
   "dev_url": "https://github.com/polyfem/polyfem-python",
   "doc_url": "https://polyfem.github.io/",
   "home": "https://polyfem.github.io/",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "Easy-to-use powerfull finite element library based on Polyfem"
  },
  "build": {
   "number": "2",
   "script": [
    "/home/conda/feedstock_root/build_artifacts/polyfempy_1574176476349/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p/bin/python -m pip install . --no-deps -vv"
   ],
   "string": "py38hb914a97_2"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "teseoch"
   ]
  },
  "package": {
   "name": "polyfempy",
   "version": "0.5.2"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 main",
    "binutils_impl_linux-64 2.31.1 h7fc9f1b_2",
    "binutils_linux-64 2.31.1 h6176602_14",
    "bzip2 1.0.8 h516909a_1",
    "ca-certificates 2019.9.11 hecc5488_0",
    "cmake 3.15.5 hf94ab9c_0",
    "curl 7.65.3 hf8cf82a_0",
    "expat 2.2.5 he1b5a44_1004",
    "gcc_impl_linux-64 7.3.0 habb00fd_2",
    "gcc_linux-64 7.3.0 h553295d_14",
    "gxx_impl_linux-64 7.3.0 hdf63c60_2",
    "gxx_linux-64 7.3.0 h553295d_14",
    "krb5 1.16.3 h05b26f9_1001",
    "libcurl 7.65.3 hda55be3_0",
    "libedit 3.1.20170329 hf8c457e_1001",
    "libgcc-ng 9.1.0 hdf63c60_0",
    "libssh2 1.8.2 h22169c7_2",
    "libstdcxx-ng 9.1.0 hdf63c60_0",
    "libuv 1.33.1 h516909a_0",
    "make 4.2.1 h14c3975_2004",
    "ncurses 6.1 hf484d3e_1002",
    "openssl 1.1.1d h516909a_0",
    "rhash 1.3.6 h14c3975_1001",
    "tk 8.6.9 hed695b0_1003",
    "xz 5.2.4 h14c3975_1001",
    "zlib 1.2.11 h516909a_1006"
   ],
   "host": [
    "_libgcc_mutex 0.1 main",
    "ca-certificates 2019.9.11 hecc5488_0",
    "certifi 2019.9.11 py38_0",
    "libblas 3.8.0 7_h6e990d7_netlib",
    "libcblas 3.8.0 7_h6e990d7_netlib",
    "libffi 3.2.1 he1b5a44_1006",
    "libgcc-ng 9.1.0 hdf63c60_0",
    "libgfortran-ng 7.3.0 hdf63c60_2",
    "liblapack 3.8.0 7_h6e990d7_netlib",
    "libstdcxx-ng 9.1.0 hdf63c60_0",
    "metis 5.1.0 he1b5a44_1005",
    "ncurses 6.1 hf484d3e_1002",
    "numpy 1.14.6 py38h95a1406_1201",
    "openssl 1.1.1d h516909a_0",
    "pip 19.3.1 py38_0",
    "python 3.8.0 h357f687_3",
    "readline 8.0 hf8c457e_0",
    "setuptools 41.6.0 py38_1",
    "sqlite 3.30.1 hcee41ef_0",
    "suitesparse 5.4.0 h717dc36_0",
    "tbb 2019.9 hc9558a2_0",
    "tk 8.6.9 hed695b0_1003",
    "wheel 0.33.6 py38_0",
    "xz 5.2.4 h14c3975_1001",
    "zlib 1.2.11 h516909a_1006"
   ],
   "run": [
    "libblas >=3.8.0,<4.0a0",
    "libcblas >=3.8.0,<4.0a0",
    "libgcc-ng >=7.3.0",
    "libstdcxx-ng >=7.3.0",
    "numpy >=1.14.6,<2.0a0",
    "python >=3.8,<3.9.0a0",
    "suitesparse >=5.4.0,<6.0a0"
   ]
  },
  "source": {
   "sha256": "e241d24a07efe62da562650cd2651cfe9154cd69077aea9437d1937e8b292eca",
   "url": "https://github.com/polyfem/polyfem-python/archive/0.5.2.tar.gz"
  },
  "test": {
   "imports": [
    "polyfempy"
   ]
  }
 },
 "version": "0.5.2"
}