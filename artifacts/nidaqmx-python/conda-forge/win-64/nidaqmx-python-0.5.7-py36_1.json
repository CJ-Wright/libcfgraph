{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.15.1",
  "conda_private": false,
  "conda_version": "4.5.11",
  "description": "The nidaqmx package contains an API (Application Programming Interface) for\ninteracting with the NI-DAQmx driver. The package is implemented in Python.\nThis package was created and is supported by NI. The package is implemented\nas a complex, highly object-oriented wrapper around the NI-DAQmx C API using\n the ctypes Python library.\n",
  "dev_url": "https://github.com/ni/nidaqmx-python",
  "doc_url": "http://nidaqmx-python.readthedocs.io/en/latest/",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "carlodri"
   ]
  },
  "home": "https://github.com/ni/nidaqmx-python",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "LICENSE",
  "root_pkgs": [
   "anaconda-client 1.7.1 py_0",
   "asn1crypto 0.24.0 py36_3",
   "beautifulsoup4 4.6.3 py36_0",
   "ca-certificates 2018.8.24 ha4d7672_0",
   "certifi 2018.8.24 py36_0",
   "cffi 1.11.5 py36hfa6e2cd_1",
   "chardet 3.0.4 py36_3",
   "click 6.7 py_1",
   "clyent 1.2.2 py_1",
   "conda 4.5.11 py36_0",
   "conda-build 3.15.1 py36_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 2.0.6 py36_0",
   "console_shortcut 0.1.1 3",
   "cryptography 2.3.1 py36h74b6da3_0",
   "cryptography-vectors 2.3.1 py36_0",
   "decorator 4.3.0 py_0",
   "filelock 3.0.4 py_1",
   "glob2 0.6 py_0",
   "idna 2.7 py36_2",
   "ipython_genutils 0.2.0 py_1",
   "jinja2 2.10 py_1",
   "jsonschema 2.6.0 py36_2",
   "jupyter_core 4.4.0 py_0",
   "markupsafe 1.0 py36hfa6e2cd_1",
   "menuinst 1.4.14 py36_0",
   "nbformat 4.4.0 py_1",
   "openssl 1.0.2p hfa6e2cd_1000",
   "pip 18.0 py36_1",
   "pkginfo 1.4.2 py_1",
   "psutil 5.4.7 py36hfa6e2cd_1",
   "pycosat 0.6.3 py36hfa6e2cd_1",
   "pycparser 2.19 py_0",
   "pyopenssl 18.0.0 py36_0",
   "pysocks 1.6.8 py36_2",
   "python 3.6.6 he025d50_0",
   "python-dateutil 2.7.3 py_0",
   "pytz 2018.5 py_0",
   "pywin32 223 py36hfa6e2cd_0",
   "pyyaml 3.13 py36hfa6e2cd_1",
   "requests 2.19.1 py36_1",
   "ruamel_yaml 0.15.63 py36hfa6e2cd_0",
   "setuptools 40.4.0 py36_0",
   "six 1.11.0 py36_1",
   "tqdm 4.26.0 py_0",
   "traitlets 4.3.2 py36_0",
   "urllib3 1.23 py36_1",
   "vc 14 h0510ff6_3",
   "vs2008_express_vc_python_patch 1.0.0 0",
   "vs2015_runtime 14.0.25123 3",
   "wheel 0.31.1 py36_1",
   "wincertstore 0.2 py36_2",
   "win_inet_pton 1.0.1 py36_2",
   "yaml 0.1.7 vc14_0"
  ],
  "summary": "Python API for interacting with NI-DAQmx",
  "tags": []
 },
 "conda_build_config": {
  "c_compiler": "vs2015",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "vs2015",
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": "python",
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x.x",
    "min_pin": "x.x.x"
   }
  },
  "python": "3.6",
  "r_base": "3.4",
  "target_platform": "win-64",
  "vc": "14"
 },
 "files": [
  "Lib/site-packages/nidaqmx-1.0.0.dev0-py3.6.egg-info/PKG-INFO",
  "Lib/site-packages/nidaqmx/__init__.py",
  "Lib/site-packages/nidaqmx/_lib.py",
  "Lib/site-packages/nidaqmx/_task_modules/__init__.py",
  "Lib/site-packages/nidaqmx/_task_modules/ai_channel_collection.py",
  "Lib/site-packages/nidaqmx/_task_modules/ao_channel_collection.py",
  "Lib/site-packages/nidaqmx/_task_modules/channel_collection.py",
  "Lib/site-packages/nidaqmx/_task_modules/channels/__init__.py",
  "Lib/site-packages/nidaqmx/_task_modules/channels/ai_channel.py",
  "Lib/site-packages/nidaqmx/_task_modules/channels/ao_channel.py",
  "Lib/site-packages/nidaqmx/_task_modules/channels/channel.py",
  "Lib/site-packages/nidaqmx/_task_modules/channels/ci_channel.py",
  "Lib/site-packages/nidaqmx/_task_modules/channels/co_channel.py",
  "Lib/site-packages/nidaqmx/_task_modules/channels/di_channel.py",
  "Lib/site-packages/nidaqmx/_task_modules/channels/do_channel.py",
  "Lib/site-packages/nidaqmx/_task_modules/ci_channel_collection.py",
  "Lib/site-packages/nidaqmx/_task_modules/co_channel_collection.py",
  "Lib/site-packages/nidaqmx/_task_modules/di_channel_collection.py",
  "Lib/site-packages/nidaqmx/_task_modules/do_channel_collection.py",
  "Lib/site-packages/nidaqmx/_task_modules/export_signals.py",
  "Lib/site-packages/nidaqmx/_task_modules/in_stream.py",
  "Lib/site-packages/nidaqmx/_task_modules/out_stream.py",
  "Lib/site-packages/nidaqmx/_task_modules/read_functions.py",
  "Lib/site-packages/nidaqmx/_task_modules/timing.py",
  "Lib/site-packages/nidaqmx/_task_modules/triggering/__init__.py",
  "Lib/site-packages/nidaqmx/_task_modules/triggering/arm_start_trigger.py",
  "Lib/site-packages/nidaqmx/_task_modules/triggering/handshake_trigger.py",
  "Lib/site-packages/nidaqmx/_task_modules/triggering/pause_trigger.py",
  "Lib/site-packages/nidaqmx/_task_modules/triggering/reference_trigger.py",
  "Lib/site-packages/nidaqmx/_task_modules/triggering/start_trigger.py",
  "Lib/site-packages/nidaqmx/_task_modules/triggers.py",
  "Lib/site-packages/nidaqmx/_task_modules/write_functions.py",
  "Lib/site-packages/nidaqmx/constants.py",
  "Lib/site-packages/nidaqmx/error_codes.py",
  "Lib/site-packages/nidaqmx/errors.py",
  "Lib/site-packages/nidaqmx/scale.py",
  "Lib/site-packages/nidaqmx/stream_readers.py",
  "Lib/site-packages/nidaqmx/stream_writers.py",
  "Lib/site-packages/nidaqmx/system/__init__.py",
  "Lib/site-packages/nidaqmx/system/_collections/__init__.py",
  "Lib/site-packages/nidaqmx/system/_collections/device_collection.py",
  "Lib/site-packages/nidaqmx/system/_collections/persisted_channel_collection.py",
  "Lib/site-packages/nidaqmx/system/_collections/persisted_scale_collection.py",
  "Lib/site-packages/nidaqmx/system/_collections/persisted_task_collection.py",
  "Lib/site-packages/nidaqmx/system/_collections/physical_channel_collection.py",
  "Lib/site-packages/nidaqmx/system/_watchdog_modules/__init__.py",
  "Lib/site-packages/nidaqmx/system/_watchdog_modules/expiration_state.py",
  "Lib/site-packages/nidaqmx/system/_watchdog_modules/expiration_states_collection.py",
  "Lib/site-packages/nidaqmx/system/device.py",
  "Lib/site-packages/nidaqmx/system/physical_channel.py",
  "Lib/site-packages/nidaqmx/system/storage/__init__.py",
  "Lib/site-packages/nidaqmx/system/storage/_alternate_task_constructor.py",
  "Lib/site-packages/nidaqmx/system/storage/persisted_channel.py",
  "Lib/site-packages/nidaqmx/system/storage/persisted_scale.py",
  "Lib/site-packages/nidaqmx/system/storage/persisted_task.py",
  "Lib/site-packages/nidaqmx/system/system.py",
  "Lib/site-packages/nidaqmx/system/watchdog.py",
  "Lib/site-packages/nidaqmx/task.py",
  "Lib/site-packages/nidaqmx/tests/__init__.py",
  "Lib/site-packages/nidaqmx/tests/fixtures.py",
  "Lib/site-packages/nidaqmx/tests/helpers.py",
  "Lib/site-packages/nidaqmx/tests/teds/Voltage.ted",
  "Lib/site-packages/nidaqmx/tests/test_channel_creation.py",
  "Lib/site-packages/nidaqmx/tests/test_channels.py",
  "Lib/site-packages/nidaqmx/tests/test_container_operations.py",
  "Lib/site-packages/nidaqmx/tests/test_events.py",
  "Lib/site-packages/nidaqmx/tests/test_export_signals.py",
  "Lib/site-packages/nidaqmx/tests/test_invalid_reads.py",
  "Lib/site-packages/nidaqmx/tests/test_invalid_writes.py",
  "Lib/site-packages/nidaqmx/tests/test_multi_threading.py",
  "Lib/site-packages/nidaqmx/tests/test_power_up_states.py",
  "Lib/site-packages/nidaqmx/tests/test_properties.py",
  "Lib/site-packages/nidaqmx/tests/test_read_write.py",
  "Lib/site-packages/nidaqmx/tests/test_resource_warnings.py",
  "Lib/site-packages/nidaqmx/tests/test_stream_analog_readers_writers.py",
  "Lib/site-packages/nidaqmx/tests/test_stream_counter_readers_writers.py",
  "Lib/site-packages/nidaqmx/tests/test_stream_digital_readers_writers.py",
  "Lib/site-packages/nidaqmx/tests/test_system_collections.py",
  "Lib/site-packages/nidaqmx/tests/test_teds.py",
  "Lib/site-packages/nidaqmx/tests/test_triggers.py",
  "Lib/site-packages/nidaqmx/tests/test_utils.py",
  "Lib/site-packages/nidaqmx/tests/test_watchdog.py",
  "Lib/site-packages/nidaqmx/types.py",
  "Lib/site-packages/nidaqmx/utils.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py36_1",
  "build_number": 1,
  "depends": [
   "numpy",
   "python >=3.6,<3.7.0a0",
   "six"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "nidaqmx-python",
  "platform": "win",
  "subdir": "win-64",
  "timestamp": 1537613374446,
  "version": "0.5.7"
 },
 "metadata_version": 1,
 "name": "nidaqmx-python",
 "raw_recipe": "{% set name = \"nidaqmx-python\" %}\n{% set version = \"0.5.7\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/ni/{{ name }}/archive/{{ version }}.tar.gz\n  sha256: f3d3df29ccfbb4f278648f101efde475f66a0c306fde918c06679dd323574f5b\n\nbuild:\n  number: 1\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv\"\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - numpy\n    - six\n    - enum34  # [py<34]\n\ntest:\n  imports:\n    - nidaqmx\n\nabout:\n  home: https://github.com/ni/nidaqmx-python\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: 'Python API for interacting with NI-DAQmx'\n  description: |\n    The nidaqmx package contains an API (Application Programming Interface) for\n    interacting with the NI-DAQmx driver. The package is implemented in Python.\n    This package was created and is supported by NI. The package is implemented\n    as a complex, highly object-oriented wrapper around the NI-DAQmx C API using\n     the ctypes Python library.\n  doc_url: http://nidaqmx-python.readthedocs.io/en/latest/\n  dev_url: https://github.com/ni/nidaqmx-python\n\nextra:\n  recipe-maintainers:\n    - carlodri\n",
 "rendered_recipe": {
  "about": {
   "description": "The nidaqmx package contains an API (Application Programming Interface) for\ninteracting with the NI-DAQmx driver. The package is implemented in Python.\nThis package was created and is supported by NI. The package is implemented\nas a complex, highly object-oriented wrapper around the NI-DAQmx C API using\n the ctypes Python library.\n",
   "dev_url": "https://github.com/ni/nidaqmx-python",
   "doc_url": "http://nidaqmx-python.readthedocs.io/en/latest/",
   "home": "https://github.com/ni/nidaqmx-python",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Python API for interacting with NI-DAQmx"
  },
  "build": {
   "number": "1",
   "script": "C:\\bld\\nidaqmx-python_1537613328068\\_h_env\\python.exe -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv",
   "string": "py36_1"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "carlodri"
   ]
  },
  "package": {
   "name": "nidaqmx-python",
   "version": "0.5.7"
  },
  "requirements": {
   "host": [
    "certifi 2018.8.24 py36_0",
    "pip 18.0 py36_1",
    "python 3.6.6 he025d50_0",
    "setuptools 40.4.0 py36_0",
    "vc 14 0",
    "vs2015_runtime 14.0.25420 0",
    "wheel 0.31.1 py36_1",
    "wincertstore 0.2 py36_2"
   ],
   "run": [
    "numpy",
    "python >=3.6,<3.7.0a0",
    "six"
   ]
  },
  "source": {
   "sha256": "f3d3df29ccfbb4f278648f101efde475f66a0c306fde918c06679dd323574f5b",
   "url": "https://github.com/ni/nidaqmx-python/archive/0.5.7.tar.gz"
  },
  "test": {
   "imports": [
    "nidaqmx"
   ]
  }
 },
 "version": "0.5.7"
}