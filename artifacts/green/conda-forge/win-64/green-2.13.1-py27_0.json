{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.17.8",
  "conda_private": false,
  "conda_version": "4.6.4",
  "description": "Green - A clean, colorful, fast python test runner.\nFeatures --------\n- **Clean** - Low redundancy in output. Result statistics for each test is vertically aligned. - **Colorful** - Terminal output makes good use of color when the terminal supports it. - **Fast** - Tests run in independent processes.  (One per processor by default.  Does *not* play nicely with `gevent`) - **Powerful** - Multi-target + auto-discovery. - **Traditional** - Use the normal `unittest` classes and methods for your unit tests. - **Descriptive** - Multiple verbosity levels, from just dots to full docstring output. - **Convenient** - Bash-completion and ZSH-completion of options and test targets. - **Thorough** - Built-in, optional integration with\n  [coverage](http://nedbatchelder.com/code/coverage/).\n- **Embedded** - Can be run with a setup command without in-site installation. - **Modern** - Supports Python 2.7, and 3.4+. Additionally, [PyPy](http://pypy.org) is supported on a best-effort basis. - **Portable** - macOS, Linux, and BSDs are fully supported.  Windows is supported on a best-effort basis. - **Living** - This project grows and changes.  See the\n",
  "dev_url": "https://github.com/CleanCut/green",
  "doc_url": "https://github.com/CleanCut/green#green",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ReimarBauer"
   ]
  },
  "home": "https://github.com/CleanCut/green",
  "identifiers": [],
  "keywords": [],
  "license": "MIT",
  "license_family": "MIT",
  "license_file": "C:\\projects\\green-feedstock\\recipe/LICENSE",
  "root_pkgs": [
   "anaconda-client 1.7.2 py_0",
   "asn1crypto 0.24.0 py36_0",
   "attrs 18.2.0 py_0",
   "beautifulsoup4 4.7.1 py36_1001",
   "bzip2 1.0.6 hfa6e2cd_1002",
   "ca-certificates 2018.11.29 ha4d7672_0",
   "certifi 2018.11.29 py36_1000",
   "cffi 1.11.5 py36h945400d_0",
   "chardet 3.0.4 py36h420ce6e_1",
   "click 7.0 py_0",
   "clyent 1.2.2 py_1",
   "conda 4.6.4 py36_0",
   "conda-build 3.17.8 py36_0",
   "conda-env 2.6.0 h36134e3_1",
   "conda-forge-ci-setup 2.1.4 py36_0",
   "console_shortcut 0.1.1 h6bb2dd7_3",
   "cryptography 2.5 py36h7a1dbc1_0",
   "decorator 4.3.2 py_0",
   "filelock 3.0.10 py_0",
   "glob2 0.6 py_0",
   "idna 2.6 py36h148d497_1",
   "ipython_genutils 0.2.0 py_1",
   "jinja2 2.10 py_1",
   "jsonschema 3.0.0a3 py36_1000",
   "jupyter_core 4.4.0 py_0",
   "libarchive 3.3.3 h0643e63_2",
   "libiconv 1.15 hfa6e2cd_1004",
   "liblief 0.9.0 ha925a31_2",
   "libxml2 2.9.8 h9ce36c8_1005",
   "lz4-c 1.8.3 he025d50_1001",
   "lzo 2.10 hfa6e2cd_1000",
   "markupsafe 1.1.0 py36hfa6e2cd_1000",
   "menuinst 1.4.14 py36hfa6e2cd_0",
   "nbformat 4.4.0 py_1",
   "openssl 1.1.1a hfa6e2cd_1000",
   "pip 10.0.1 py36_0",
   "pkginfo 1.5.0.1 py_0",
   "psutil 5.5.1 py36hfa6e2cd_0",
   "py-lief 0.9.0 py36ha925a31_2",
   "pycosat 0.6.3 py36h413d8a4_0",
   "pycparser 2.18 py36hd053e01_1",
   "pyopenssl 18.0.0 py36_0",
   "pyrsistent 0.14.10 py36hfa6e2cd_0",
   "pysocks 1.6.8 py36_0",
   "python 3.6.5 h0c2934d_0",
   "python-dateutil 2.8.0 py_0",
   "python-libarchive-c 2.8 py36_1004",
   "pytz 2018.9 py_0",
   "pywin32 223 py36hfa6e2cd_1",
   "pyyaml 3.13 py36hfa6e2cd_1001",
   "requests 2.18.4 py36h4371aae_1",
   "ruamel_yaml 0.15.37 py36hfa6e2cd_2",
   "setuptools 39.2.0 py36_0",
   "six 1.11.0 py36h4db2310_1",
   "soupsieve 1.8 py36_0",
   "tqdm 4.31.1 py_0",
   "traitlets 4.3.2 py36_1000",
   "urllib3 1.22 py36h276f60a_0",
   "vc 14.1 h0510ff6_4",
   "vs2008_express_vc_python_patch 1.0.0 0",
   "vs2015_runtime 14.15.26706 h3a45250_0",
   "wheel 0.31.1 py36_0",
   "wincertstore 0.2 py36h7fe50ca_0",
   "win_inet_pton 1.0.1 py36he67d7fd_1",
   "xz 5.2.4 h2fa13f4_1001",
   "yaml 0.1.7 hc54c509_2",
   "zlib 1.2.11 h2fa13f4_1004",
   "zstd 1.3.3 vc14_1"
  ],
  "summary": "Green is a clean, colorful, fast python test runner",
  "tags": []
 },
 "conda_build_config": {
  "c_compiler": "vs2015",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "vs2015",
  "extend_keys": [
   "extend_keys",
   "ignore_version",
   "ignore_build_only_deps",
   "pin_run_as_build"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x.x",
    "min_pin": "x.x.x"
   }
  },
  "python": "2.7",
  "r_base": "3.4",
  "target_platform": "win-64",
  "vc": "14"
 },
 "files": [
  "Lib/site-packages/green-2.13.1-py2.7.egg-info/PKG-INFO",
  "Lib/site-packages/green/VERSION",
  "Lib/site-packages/green/__init__.py",
  "Lib/site-packages/green/__main__.py",
  "Lib/site-packages/green/cmdline.py",
  "Lib/site-packages/green/command.py",
  "Lib/site-packages/green/config.py",
  "Lib/site-packages/green/djangorunner.py",
  "Lib/site-packages/green/examples.py",
  "Lib/site-packages/green/exceptions.py",
  "Lib/site-packages/green/loader.py",
  "Lib/site-packages/green/output.py",
  "Lib/site-packages/green/process.py",
  "Lib/site-packages/green/result.py",
  "Lib/site-packages/green/runner.py",
  "Lib/site-packages/green/shell_completion.sh",
  "Lib/site-packages/green/suite.py",
  "Lib/site-packages/green/test/__init__.py",
  "Lib/site-packages/green/test/test_cmdline.py",
  "Lib/site-packages/green/test/test_command.py",
  "Lib/site-packages/green/test/test_config.py",
  "Lib/site-packages/green/test/test_djangorunner.py",
  "Lib/site-packages/green/test/test_load_tests.py",
  "Lib/site-packages/green/test/test_loader.py",
  "Lib/site-packages/green/test/test_output.py",
  "Lib/site-packages/green/test/test_process.py",
  "Lib/site-packages/green/test/test_result.py",
  "Lib/site-packages/green/test/test_runner.py",
  "Lib/site-packages/green/test/test_suite.py",
  "Lib/site-packages/green/test/test_version.py",
  "Lib/site-packages/green/test/test_windows.py",
  "Lib/site-packages/green/version.py",
  "Scripts/green-script.py",
  "Scripts/green.exe",
  "Scripts/green2-script.py",
  "Scripts/green2.7-script.py",
  "Scripts/green2.7.exe",
  "Scripts/green2.exe"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py27_0",
  "build_number": 0,
  "depends": [
   "colorama",
   "coverage",
   "get_terminal_size",
   "mock",
   "python >=2.7,<2.8.0a0",
   "python-termstyle",
   "unidecode"
  ],
  "license": "MIT",
  "license_family": "MIT",
  "name": "green",
  "platform": "win",
  "subdir": "win-64",
  "timestamp": 1550547026632,
  "version": "2.13.1"
 },
 "metadata_version": 1,
 "name": "green",
 "raw_recipe": "{% set name = \"green\" %}\n{% set version = \"2.13.1\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}-{{ version }}.tar.gz\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: ea6e2699a2e58df834d2c845fb2b076c12d4835daecfcb658c6bd5583ebf4b7d\n\nbuild:\n  number: 0\n  entry_points:\n    - green = green.cmdline:main\n  script: python setup.py install --single-version-externally-managed --record record.txt\n\nrequirements:\n  build:\n    - python\n    - setuptools\n\n  run:\n    - python\n    - colorama\n    - python-termstyle\n    - unidecode\n    - mock  # [py2k]\n    - coverage\n    - get_terminal_size\n\ntest:\n  imports:\n    - green\n  commands:\n    - green -h\n\nabout:\n  home: https://github.com/CleanCut/green\n  license: MIT\n  license_family: MIT\n  license_file: '{{ environ[\"RECIPE_DIR\"] }}/LICENSE'\n  summary: 'Green is a clean, colorful, fast python test runner'\n  description: >\n    Green - A clean, colorful, fast python test runner.\n\n    Features\n    --------\n\n    - **Clean** - Low redundancy in output. Result statistics for each test is vertically aligned.\n    - **Colorful** - Terminal output makes good use of color when the terminal supports it.\n    - **Fast** - Tests run in independent processes.  (One per processor by default.  Does *not* play nicely with `gevent`)\n    - **Powerful** - Multi-target + auto-discovery.\n    - **Traditional** - Use the normal `unittest` classes and methods for your unit tests.\n    - **Descriptive** - Multiple verbosity levels, from just dots to full docstring output.\n    - **Convenient** - Bash-completion and ZSH-completion of options and test targets.\n    - **Thorough** - Built-in, optional integration with\n      [coverage](http://nedbatchelder.com/code/coverage/).\n    - **Embedded** - Can be run with a setup command without in-site installation.\n    - **Modern** - Supports Python 2.7, and 3.4+. Additionally, [PyPy](http://pypy.org) is supported on a best-effort basis.\n    - **Portable** - macOS, Linux, and BSDs are fully supported.  Windows is supported on a best-effort basis.\n    - **Living** - This project grows and changes.  See the\n  doc_url: https://github.com/CleanCut/green#green\n  dev_url: https://github.com/CleanCut/green\n\nextra:\n  recipe-maintainers:\n    - ReimarBauer\n",
 "rendered_recipe": {
  "about": {
   "description": "Green - A clean, colorful, fast python test runner.\nFeatures --------\n- **Clean** - Low redundancy in output. Result statistics for each test is vertically aligned. - **Colorful** - Terminal output makes good use of color when the terminal supports it. - **Fast** - Tests run in independent processes.  (One per processor by default.  Does *not* play nicely with `gevent`) - **Powerful** - Multi-target + auto-discovery. - **Traditional** - Use the normal `unittest` classes and methods for your unit tests. - **Descriptive** - Multiple verbosity levels, from just dots to full docstring output. - **Convenient** - Bash-completion and ZSH-completion of options and test targets. - **Thorough** - Built-in, optional integration with\n  [coverage](http://nedbatchelder.com/code/coverage/).\n- **Embedded** - Can be run with a setup command without in-site installation. - **Modern** - Supports Python 2.7, and 3.4+. Additionally, [PyPy](http://pypy.org) is supported on a best-effort basis. - **Portable** - macOS, Linux, and BSDs are fully supported.  Windows is supported on a best-effort basis. - **Living** - This project grows and changes.  See the\n",
   "dev_url": "https://github.com/CleanCut/green",
   "doc_url": "https://github.com/CleanCut/green#green",
   "home": "https://github.com/CleanCut/green",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "C:\\projects\\green-feedstock\\recipe/LICENSE",
   "summary": "Green is a clean, colorful, fast python test runner"
  },
  "build": {
   "entry_points": [
    "green = green.cmdline:main"
   ],
   "number": "0",
   "script": "python setup.py install --single-version-externally-managed --record record.txt",
   "string": "py27_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "ReimarBauer"
   ]
  },
  "package": {
   "name": "green",
   "version": "2.13.1"
  },
  "requirements": {
   "build": [
    "certifi 2018.11.29 py27_1000",
    "python 2.7.15 h2880e7c_1006",
    "setuptools 40.8.0 py27_0",
    "vc 9 0",
    "vs2008_runtime 9.0.30729.6161 0",
    "wincertstore 0.2 py27_1002"
   ],
   "run": [
    "colorama",
    "coverage",
    "get_terminal_size",
    "mock",
    "python >=2.7,<2.8.0a0",
    "python-termstyle",
    "unidecode"
   ]
  },
  "source": {
   "fn": "green-2.13.1.tar.gz",
   "sha256": "ea6e2699a2e58df834d2c845fb2b076c12d4835daecfcb658c6bd5583ebf4b7d",
   "url": "https://pypi.io/packages/source/g/green/green-2.13.1.tar.gz"
  },
  "test": {
   "commands": [
    "green -h"
   ],
   "imports": [
    "green"
   ]
  }
 },
 "version": "2.13.1"
}