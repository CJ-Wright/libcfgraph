{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.18.11",
  "conda_private": false,
  "conda_version": "4.8.0",
  "description": "A set of tools for creating and manipulating meshes for the climate\ncomponents based on the Model for Prediction Across Scales (MPAS) framework\n",
  "dev_url": "https://github.com/MPAS-Dev/MPAS-Tools/",
  "doc_url": "https://github.com/MPAS-Dev/MPAS-Tools/README.md",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "xylar",
    "jhkennedy"
   ]
  },
  "home": "https://github.com/MPAS-Dev/MPAS-Tools/",
  "identifiers": [],
  "keywords": [],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "license_file": "LICENSE",
  "root_pkgs": [
   "traitlets 4.3.3 py37_0",
   "liblief 0.9.0 hf8a498c_1",
   "_libgcc_mutex 0.1 conda_forge",
   "libssh2 1.8.2 h22169c7_2",
   "tk 8.6.10 hed695b0_0",
   "asn1crypto 1.3.0 py37_0",
   "python-libarchive-c 2.9 py37_0",
   "pycosat 0.6.3 py37h516909a_1002",
   "tqdm 4.41.1 py_0",
   "patchelf 0.10 he1b5a44_0",
   "psutil 5.6.7 py37h516909a_0",
   "libffi 3.2.1 he1b5a44_1006",
   "gettext 0.19.8.1 hc5be6a0_1002",
   "pcre 8.43 he1b5a44_0",
   "more-itertools 8.1.0 py_0",
   "importlib_metadata 1.4.0 py37_0",
   "nbformat 5.0.3 py_0",
   "ncurses 6.1 hf484d3e_1002",
   "icu 64.2 he1b5a44_1",
   "ld_impl_linux-64 2.33.1 h53a641e_7",
   "libgcc-ng 9.2.0 h24d8f2e_2",
   "patch 2.7.6 h14c3975_1001",
   "filelock 3.0.10 py_0",
   "conda-build 3.18.11 py37_0",
   "cryptography 2.8 py37h72c5cf5_1",
   "yaml 0.2.2 h516909a_1",
   "gosu 1.10 h81701ea_1001",
   "libgomp 9.2.0 h24d8f2e_2",
   "libxml2 2.9.10 hee79883_0",
   "xz 5.2.4 h14c3975_1001",
   "pysocks 1.7.1 py37_0",
   "zstd 1.4.4 h3b9ef0a_1",
   "glob2 0.7 py_0",
   "bzip2 1.0.8 h516909a_2",
   "pyrsistent 0.15.7 py37h516909a_0",
   "ipython_genutils 0.2.0 py_1",
   "setuptools 45.1.0 py37_0",
   "libiconv 1.15 h516909a_1005",
   "cffi 1.13.2 py37h8022711_0",
   "requests 2.22.0 py37_1",
   "lz4-c 1.8.3 he1b5a44_1001",
   "decorator 4.4.1 py_0",
   "_openmp_mutex 4.5 0_gnu",
   "pkginfo 1.5.0.1 py_0",
   "wheel 0.33.6 py37_0",
   "certifi 2019.11.28 py37_0",
   "curl 7.65.3 hf8cf82a_0",
   "beautifulsoup4 4.8.2 py37_0",
   "readline 8.0 hf8c457e_0",
   "zlib 1.2.11 h516909a_1006",
   "sqlite 3.30.1 hcee41ef_0",
   "jsonschema 3.2.0 py37_0",
   "libedit 3.1.20170329 hf8c457e_1001",
   "libarchive 3.3.3 hc47fbbf_1007",
   "lzo 2.10 h14c3975_1000",
   "clyent 1.2.2 py_1",
   "zipp 2.0.0 py_2",
   "krb5 1.16.4 h2fd8d38_0",
   "chardet 3.0.4 py37_1003",
   "anaconda-client 1.7.2 py_0",
   "tini 0.18.0 h14c3975_1001",
   "ripgrep 11.0.2 h516909a_3",
   "attrs 19.3.0 py_0",
   "six 1.14.0 py37_0",
   "pyopenssl 19.1.0 py37_0",
   "idna 2.8 py37_1000",
   "python 3.7.6 h357f687_2",
   "openssl 1.1.1d h516909a_0",
   "pycparser 2.19 py37_1",
   "conda-package-handling 1.6.0 py37h516909a_1",
   "soupsieve 1.9.4 py37_0",
   "pytz 2019.3 py_0",
   "ruamel_yaml 0.15.80 py37h516909a_1000",
   "pyyaml 5.3 py37h516909a_0",
   "perl 5.26.2 h516909a_1006",
   "pip 20.0.1 py37_0",
   "py-lief 0.9.0 py37he1b5a44_1",
   "python-dateutil 2.8.1 py_0",
   "jupyter_core 4.6.1 py37_0",
   "conda 4.8.0 py37_1",
   "libstdcxx-ng 9.2.0 hdf63c60_2",
   "git 2.24.0 pl526hce37bd2_1",
   "libcurl 7.65.3 hda55be3_0",
   "urllib3 1.25.7 py37_0",
   "jinja2 2.10.3 py_0",
   "expat 2.2.5 he1b5a44_1004",
   "markupsafe 1.1.1 py37h516909a_0",
   "ca-certificates 2019.11.28 hecc5488_0",
   "conda-forge-ci-setup 2.5.4 py37_0",
   "conda-env 2.6.0 1",
   "click 7.0 py_0"
  ],
  "summary": "Mesh tools for Model for Prediction Across Scales (MPAS)",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "gcc",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "gxx",
  "cxx_compiler_version": "7",
  "docker_image": "condaforge/linux-anvil-comp7",
  "extend_keys": [
   "pin_run_as_build",
   "ignore_version",
   "extend_keys",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "hdf5": "1.10.5",
  "ignore_build_only_deps": [
   "python",
   "numpy"
  ],
  "libnetcdf": "4.7.3",
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.7",
  "r_base": "3.5",
  "target_platform": "linux-64"
 },
 "files": [
  "bin/MpasCellCuller.x",
  "bin/MpasMaskCreator.x",
  "bin/MpasMeshConverter.x",
  "bin/add_critical_land_blockages_to_mask.py",
  "bin/add_land_locked_cells_to_mask.py",
  "bin/create_SCRIP_file_from_MPAS_mesh.py",
  "bin/create_landice_grid_from_generic_MPAS_grid.py",
  "bin/define_cullMask.py",
  "bin/interpolate_to_mpasli_grid.py",
  "bin/mark_domain_boundaries_dirichlet.py",
  "bin/mark_horns_for_culling.py",
  "bin/merge_grids",
  "bin/moc_southern_boundary_extractor.py",
  "bin/paraview_vtk_field_extractor.py",
  "bin/planar_hex",
  "bin/set_lat_lon_fields_in_planar_grid.py",
  "bin/split_grids",
  "bin/translate_planar_grid",
  "bin/widen_transect_edge_masks.py",
  "lib/python3.7/site-packages/mpas_tools-0.0.6.dist-info/INSTALLER",
  "lib/python3.7/site-packages/mpas_tools-0.0.6.dist-info/METADATA",
  "lib/python3.7/site-packages/mpas_tools-0.0.6.dist-info/RECORD",
  "lib/python3.7/site-packages/mpas_tools-0.0.6.dist-info/WHEEL",
  "lib/python3.7/site-packages/mpas_tools/__init__.py",
  "lib/python3.7/site-packages/mpas_tools/__main__.py",
  "lib/python3.7/site-packages/mpas_tools/conversion.py",
  "lib/python3.7/site-packages/mpas_tools/io.py",
  "lib/python3.7/site-packages/mpas_tools/merge_grids.py",
  "lib/python3.7/site-packages/mpas_tools/ocean/__init__.py",
  "lib/python3.7/site-packages/mpas_tools/ocean/coastline_alteration.py",
  "lib/python3.7/site-packages/mpas_tools/planar_hex.py",
  "lib/python3.7/site-packages/mpas_tools/split_grids.py",
  "lib/python3.7/site-packages/mpas_tools/tests/__init__.py",
  "lib/python3.7/site-packages/mpas_tools/tests/test_conversion.py",
  "lib/python3.7/site-packages/mpas_tools/translate.py",
  "lib/python3.7/site-packages/mpas_tools/viz.py"
 ],
 "index": {
  "arch": "x86_64",
  "build": "py37h05a2ad5_0",
  "build_number": 0,
  "depends": [
   "backports.tempfile",
   "dask",
   "future",
   "geometric_features",
   "hdf5 >=1.10.5,<1.10.6.0a0",
   "libgcc-ng >=7.3.0",
   "libnetcdf >=4.7.3,<5.0a0",
   "libstdcxx-ng >=7.3.0",
   "netcdf4",
   "numpy",
   "pyevtk",
   "python >=3.7,<3.8.0a0",
   "scipy",
   "xarray"
  ],
  "license": "BSD-3-Clause",
  "license_family": "BSD",
  "name": "mpas_tools",
  "platform": "linux",
  "subdir": "linux-64",
  "timestamp": 1579809283018,
  "version": "0.0.6"
 },
 "metadata_version": 1,
 "name": "mpas_tools",
 "raw_recipe": "{% set name = \"mpas_tools\" %}\n{% set version = \"0.0.6\" %}\n\npackage:\n  name: '{{ name|lower }}'\n  version: '{{ version }}'\n\nsource:\n  url: https://github.com/MPAS-Dev/MPAS-Tools/archive/{{ version }}.tar.gz\n  sha256: 67a20aba8d313f6e43944b9c6e8e0b3a7a64c10f8f21e30146ea48da32720bf1\n\nbuild:\n  number: 0\n  skip: true  # [win]\n  entry_points:\n    - planar_hex = mpas_tools.planar_hex:main\n    - translate_planar_grid = mpas_tools.translate:main\n    - merge_grids = mpas_tools.merge_grids:main\n    - split_grids = mpas_tools.split_grids:main\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - cmake\n  host:\n    - python\n    - hdf5\n    - libnetcdf\n    - setuptools\n    - pip\n    - netcdf4\n    - openmp  # [osx]\n  run:\n    - python\n    - netcdf4\n    - hdf5\n    - libnetcdf\n    - numpy\n    - scipy\n    - xarray\n    - dask\n    - geometric_features\n    - pyevtk\n    - future\n    - backports.tempfile\n\ntest:\n  requires:\n    - pytest\n  source_files:\n    - mesh_tools/mesh_conversion_tools/test/Arctic_Ocean.geojson\n    - mesh_tools/mesh_conversion_tools/test/mesh.QU.1920km.151026.nc\n    - mesh_tools/mesh_conversion_tools/test/land_mask_final.nc\n    - conda_package/mpas_tools/tests/*\n  commands:\n    - planar_hex --nx=10 --ny=20 --dc=1000. --outFileName='periodic_mesh_10x20_1km.nc'\n    - translate_planar_grid -f 'periodic_mesh_10x20_1km.nc' -x 1000. -y 2000.\n    - translate_planar_grid -f 'periodic_mesh_10x20_1km.nc' -c\n    - planar_hex --nx=20 --ny=40 --dc=1000. --outFileName='periodic_mesh_20x40_1km.nc'\n    - translate_planar_grid -f 'periodic_mesh_10x20_1km.nc' -d 'periodic_mesh_20x40_1km.nc'\n    - MpasMeshConverter.x mesh_tools/mesh_conversion_tools/test/mesh.QU.1920km.151026.nc mesh.nc\n    - MpasCellCuller.x mesh.nc culled_mesh.nc -m mesh_tools/mesh_conversion_tools/test/land_mask_final.nc\n    - MpasMaskCreator.x mesh.nc arctic_mask.nc -f mesh_tools/mesh_conversion_tools/test/Arctic_Ocean.geojson\n    - planar_hex --nx=30 --ny=20 --dc=1000. --npx --npy --outFileName='nonperiodic_mesh_30x20_1km.nc'\n    - MpasCellCuller.x nonperiodic_mesh_30x20_1km.nc culled_nonperiodic_mesh_30x20_1km.nc\n    - python -m pytest conda_package/mpas_tools/tests\n    - mark_horns_for_culling.py --help\n    - set_lat_lon_fields_in_planar_grid.py --help\n    - create_SCRIP_file_from_MPAS_mesh.py --help\n    - create_landice_grid_from_generic_MPAS_grid.py --help\n    - define_cullMask.py --help\n    - interpolate_to_mpasli_grid.py --help\n    - mark_domain_boundaries_dirichlet.py --help\n    - add_land_locked_cells_to_mask.py --help\n    - widen_transect_edge_masks.py --help\n    - add_critical_land_blockages_to_mask.py --help\n    - paraview_vtk_field_extractor.py -f mesh_tools/mesh_conversion_tools/test/mesh.QU.1920km.151026.nc -v latCell,lonCell --ignore_time -o vtk_test\n    - split_grids --help\n    - merge_grids --help\n\nabout:\n  home: https://github.com/MPAS-Dev/MPAS-Tools/\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Mesh tools for Model for Prediction Across Scales (MPAS)\n  description: |\n    A set of tools for creating and manipulating meshes for the climate\n    components based on the Model for Prediction Across Scales (MPAS) framework\n  doc_url: 'https://github.com/MPAS-Dev/MPAS-Tools/README.md'\n  dev_url: 'https://github.com/MPAS-Dev/MPAS-Tools/'\n\nextra:\n  recipe-maintainers:\n    - xylar\n    - jhkennedy\n",
 "rendered_recipe": {
  "about": {
   "description": "A set of tools for creating and manipulating meshes for the climate\ncomponents based on the Model for Prediction Across Scales (MPAS) framework\n",
   "dev_url": "https://github.com/MPAS-Dev/MPAS-Tools/",
   "doc_url": "https://github.com/MPAS-Dev/MPAS-Tools/README.md",
   "home": "https://github.com/MPAS-Dev/MPAS-Tools/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Mesh tools for Model for Prediction Across Scales (MPAS)"
  },
  "build": {
   "entry_points": [
    "merge_grids = mpas_tools.merge_grids:main",
    "planar_hex = mpas_tools.planar_hex:main",
    "split_grids = mpas_tools.split_grids:main",
    "translate_planar_grid = mpas_tools.translate:main"
   ],
   "number": "0",
   "string": "py37h05a2ad5_0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "jhkennedy",
    "xylar"
   ]
  },
  "package": {
   "name": "mpas_tools",
   "version": "0.0.6"
  },
  "requirements": {
   "build": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 0_gnu",
    "binutils_impl_linux-64 2.33.1 he1b5a44_7",
    "binutils_linux-64 2.33.1 h9595d00_16",
    "bzip2 1.0.8 h516909a_2",
    "ca-certificates 2019.11.28 hecc5488_0",
    "cmake 3.16.2 h28c56e5_1",
    "expat 2.2.5 he1b5a44_1004",
    "gcc_impl_linux-64 7.3.0 hd420e75_4",
    "gcc_linux-64 7.3.0 h553295d_16",
    "gxx_impl_linux-64 7.3.0 hdf63c60_4",
    "gxx_linux-64 7.3.0 h553295d_16",
    "krb5 1.16.4 h2fd8d38_0",
    "ld_impl_linux-64 2.33.1 h53a641e_7",
    "libcurl 7.65.3 hda55be3_0",
    "libedit 3.1.20170329 hf8c457e_1001",
    "libgcc-ng 9.2.0 h24d8f2e_2",
    "libgomp 9.2.0 h24d8f2e_2",
    "libssh2 1.8.2 h22169c7_2",
    "libstdcxx-ng 9.2.0 hdf63c60_2",
    "libuv 1.34.0 h516909a_0",
    "ncurses 6.1 hf484d3e_1002",
    "openssl 1.1.1d h516909a_0",
    "rhash 1.3.6 h14c3975_1001",
    "tk 8.6.10 hed695b0_0",
    "xz 5.2.4 h14c3975_1001",
    "zlib 1.2.11 h516909a_1006"
   ],
   "host": [
    "_libgcc_mutex 0.1 conda_forge",
    "_openmp_mutex 4.5 0_gnu",
    "bzip2 1.0.8 h516909a_2",
    "ca-certificates 2019.11.28 hecc5488_0",
    "certifi 2019.11.28 py37_0",
    "cftime 1.0.4.2 py37hc1659b7_0",
    "curl 7.65.3 hf8cf82a_0",
    "hdf4 4.2.13 hf30be14_1003",
    "hdf5 1.10.5 nompi_h3c11f04_1104",
    "jpeg 9c h14c3975_1001",
    "krb5 1.16.4 h2fd8d38_0",
    "ld_impl_linux-64 2.33.1 h53a641e_7",
    "libblas 3.8.0 14_openblas",
    "libcblas 3.8.0 14_openblas",
    "libcurl 7.65.3 hda55be3_0",
    "libedit 3.1.20170329 hf8c457e_1001",
    "libffi 3.2.1 he1b5a44_1006",
    "libgcc-ng 9.2.0 h24d8f2e_2",
    "libgfortran-ng 7.3.0 hdf63c60_4",
    "libgomp 9.2.0 h24d8f2e_2",
    "liblapack 3.8.0 14_openblas",
    "libnetcdf 4.7.3 nompi_h94020b1_100",
    "libopenblas 0.3.7 h5ec1e0e_6",
    "libssh2 1.8.2 h22169c7_2",
    "libstdcxx-ng 9.2.0 hdf63c60_2",
    "ncurses 6.1 hf484d3e_1002",
    "netcdf4 1.5.3 nompi_py37hd35fb8e_102",
    "numpy 1.17.5 py37h95a1406_0",
    "openssl 1.1.1d h516909a_0",
    "pip 20.0.1 py37_0",
    "python 3.7.6 h357f687_2",
    "readline 8.0 hf8c457e_0",
    "setuptools 45.1.0 py37_0",
    "sqlite 3.30.1 hcee41ef_0",
    "tk 8.6.10 hed695b0_0",
    "wheel 0.33.6 py37_0",
    "xz 5.2.4 h14c3975_1001",
    "zlib 1.2.11 h516909a_1006"
   ],
   "run": [
    "backports.tempfile",
    "dask",
    "future",
    "geometric_features",
    "hdf5 >=1.10.5,<1.10.6.0a0",
    "libgcc-ng >=7.3.0",
    "libnetcdf >=4.7.3,<5.0a0",
    "libstdcxx-ng >=7.3.0",
    "netcdf4",
    "numpy",
    "pyevtk",
    "python >=3.7,<3.8.0a0",
    "scipy",
    "xarray"
   ]
  },
  "source": {
   "sha256": "67a20aba8d313f6e43944b9c6e8e0b3a7a64c10f8f21e30146ea48da32720bf1",
   "url": "https://github.com/MPAS-Dev/MPAS-Tools/archive/0.0.6.tar.gz"
  },
  "test": {
   "commands": [
    "planar_hex --nx=10 --ny=20 --dc=1000. --outFileName='periodic_mesh_10x20_1km.nc'",
    "translate_planar_grid -f 'periodic_mesh_10x20_1km.nc' -x 1000. -y 2000.",
    "translate_planar_grid -f 'periodic_mesh_10x20_1km.nc' -c",
    "planar_hex --nx=20 --ny=40 --dc=1000. --outFileName='periodic_mesh_20x40_1km.nc'",
    "translate_planar_grid -f 'periodic_mesh_10x20_1km.nc' -d 'periodic_mesh_20x40_1km.nc'",
    "MpasMeshConverter.x mesh_tools/mesh_conversion_tools/test/mesh.QU.1920km.151026.nc mesh.nc",
    "MpasCellCuller.x mesh.nc culled_mesh.nc -m mesh_tools/mesh_conversion_tools/test/land_mask_final.nc",
    "MpasMaskCreator.x mesh.nc arctic_mask.nc -f mesh_tools/mesh_conversion_tools/test/Arctic_Ocean.geojson",
    "planar_hex --nx=30 --ny=20 --dc=1000. --npx --npy --outFileName='nonperiodic_mesh_30x20_1km.nc'",
    "MpasCellCuller.x nonperiodic_mesh_30x20_1km.nc culled_nonperiodic_mesh_30x20_1km.nc",
    "python -m pytest conda_package/mpas_tools/tests",
    "mark_horns_for_culling.py --help",
    "set_lat_lon_fields_in_planar_grid.py --help",
    "create_SCRIP_file_from_MPAS_mesh.py --help",
    "create_landice_grid_from_generic_MPAS_grid.py --help",
    "define_cullMask.py --help",
    "interpolate_to_mpasli_grid.py --help",
    "mark_domain_boundaries_dirichlet.py --help",
    "add_land_locked_cells_to_mask.py --help",
    "widen_transect_edge_masks.py --help",
    "add_critical_land_blockages_to_mask.py --help",
    "paraview_vtk_field_extractor.py -f mesh_tools/mesh_conversion_tools/test/mesh.QU.1920km.151026.nc -v latCell,lonCell --ignore_time -o vtk_test",
    "split_grids --help",
    "merge_grids --help"
   ],
   "requires": [
    "pytest"
   ],
   "source_files": [
    "conda_package/mpas_tools/tests/*",
    "mesh_tools/mesh_conversion_tools/test/Arctic_Ocean.geojson",
    "mesh_tools/mesh_conversion_tools/test/land_mask_final.nc",
    "mesh_tools/mesh_conversion_tools/test/mesh.QU.1920km.151026.nc"
   ]
  }
 },
 "version": "0.0.6"
}