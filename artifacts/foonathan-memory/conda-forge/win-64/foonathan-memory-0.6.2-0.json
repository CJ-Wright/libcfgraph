{
 "about": {
  "channels": [
   "conda-forge",
   "defaults"
  ],
  "conda_build_version": "3.18.11",
  "conda_private": false,
  "conda_version": "4.7.12",
  "env_vars": {
   "CIO_TEST": "<not set>"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "seanyen"
   ]
  },
  "home": "https://github.com/foonathan/memory",
  "identifiers": [],
  "keywords": [],
  "license": "zlib",
  "license_file": "LICENSE",
  "root_pkgs": [
   "anaconda-client 1.7.2 py_0",
   "asn1crypto 1.2.0 py36_0",
   "attrs 19.3.0 py_0",
   "beautifulsoup4 4.8.1 py36_0",
   "bzip2 1.0.8 hfa6e2cd_1",
   "ca-certificates 2019.9.11 hecc5488_0",
   "certifi 2019.9.11 py36_0",
   "cffi 1.13.2 py36hb32ad35_0",
   "chardet 3.0.4 py36_1003",
   "click 7.0 py_0",
   "clyent 1.2.2 py_1",
   "conda 4.7.12 py36_0",
   "conda-build 3.18.11 py36_0",
   "conda-env 2.6.0 1",
   "conda-forge-ci-setup 2.5.3 py36_0",
   "conda-package-handling 1.6.0 py36h2fa13f4_0",
   "console_shortcut 0.1.1 3",
   "cryptography 2.8 py36hb32ad35_0",
   "decorator 4.4.1 py_0",
   "filelock 3.0.10 py_0",
   "glob2 0.7 py_0",
   "idna 2.8 py36_1000",
   "importlib_metadata 0.23 py36_0",
   "ipython_genutils 0.2.0 py_1",
   "jinja2 2.10.3 py_0",
   "jsonschema 3.1.1 py36_0",
   "jupyter_core 4.5.0 py_0",
   "libarchive 3.3.3 h4890af2_1006",
   "libiconv 1.15 hfa6e2cd_1005",
   "liblief 0.9.0 ha925a31_2",
   "libxml2 2.9.10 h9ce36c8_0",
   "lz4-c 1.8.3 he025d50_1001",
   "lzo 2.10 hfa6e2cd_1000",
   "m2w64-gcc-libgfortran 5.3.0 6",
   "m2w64-gcc-libs 5.3.0 7",
   "m2w64-gcc-libs-core 5.3.0 7",
   "m2w64-gmp 6.1.0 2",
   "m2w64-libwinpthread-git 5.0.0.4634.697f757 2",
   "markupsafe 1.1.1 py36hfa6e2cd_0",
   "menuinst 1.4.16 py36_0",
   "more-itertools 7.2.0 py_0",
   "msys2-conda-epoch 20160418 1",
   "nbformat 4.4.0 py_1",
   "openssl 1.1.1d hfa6e2cd_0",
   "pip 19.3.1 py36_0",
   "pkginfo 1.5.0.1 py_0",
   "powershell_shortcut 0.0.1 2",
   "psutil 5.6.5 py36hfa6e2cd_0",
   "py-lief 0.9.0 py36ha925a31_2",
   "pycosat 0.6.3 py36hfa6e2cd_1002",
   "pycparser 2.19 py36_1",
   "pyopenssl 19.0.0 py36_0",
   "pyrsistent 0.15.5 py36hfa6e2cd_0",
   "pysocks 1.7.1 py36_0",
   "python 3.6.7 he025d50_1005",
   "python-dateutil 2.8.1 py_0",
   "python-libarchive-c 2.9 py36_0",
   "pytz 2019.3 py_0",
   "pywin32 225 py36hfa6e2cd_0",
   "pyyaml 5.1.2 py36hfa6e2cd_0",
   "requests 2.22.0 py36_1",
   "ripgrep 11.0.2 h301d43c_3",
   "ruamel_yaml 0.15.71 py36hfa6e2cd_1000",
   "setuptools 41.6.0 py36_1",
   "six 1.13.0 py36_0",
   "soupsieve 1.9.4 py36_0",
   "sqlite 3.27.2 he774522_0",
   "tqdm 4.38.0 py_0",
   "traitlets 4.3.3 py36_0",
   "urllib3 1.25.7 py36_0",
   "vc 14.1 h0510ff6_4",
   "vs2008_express_vc_python_patch 1.0.0 0",
   "vs2015_runtime 14.15.26706 h3a45250_0",
   "wheel 0.33.6 py36_0",
   "wincertstore 0.2 py36_1003",
   "win_inet_pton 1.1.0 py36_0",
   "xz 5.2.4 h2fa13f4_1001",
   "yaml 0.1.7 hc54c509_2",
   "zipp 0.6.0 py_0",
   "zlib 1.2.11 h2fa13f4_1006",
   "zstd 1.4.0 hd8a0e53_0"
  ],
  "summary": "STL compatible C++ memory allocator library using a new RawAllocator concept that is similar to an Allocator but easier to use and write.\n",
  "tags": []
 },
 "conda_build_config": {
  "CI": "azure",
  "c_compiler": "vs2017",
  "channel_sources": "conda-forge,defaults",
  "channel_targets": "conda-forge main",
  "cpu_optimization_target": "nocona",
  "cran_mirror": "https://cran.r-project.org",
  "cxx_compiler": "vs2017",
  "extend_keys": [
   "extend_keys",
   "pin_run_as_build",
   "ignore_version",
   "ignore_build_only_deps"
  ],
  "fortran_compiler": "gfortran",
  "ignore_build_only_deps": [
   "numpy",
   "python"
  ],
  "lua": "5",
  "numpy": "1.11",
  "perl": "5.26.0",
  "pin_run_as_build": {
   "python": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   },
   "r-base": {
    "max_pin": "x.x",
    "min_pin": "x.x"
   }
  },
  "python": "3.6",
  "r_base": "3.4",
  "target_platform": "win-64",
  "vc": "14"
 },
 "files": [
  "Library/bin/foonathan_memory-0.6.2.dll",
  "Library/bin/nodesize_dbg.exe",
  "Library/include/foonathan_memory/comp/foonathan/alignas.hpp",
  "Library/include/foonathan_memory/comp/foonathan/alignof.hpp",
  "Library/include/foonathan_memory/comp/foonathan/clz.hpp",
  "Library/include/foonathan_memory/comp/foonathan/constexpr.hpp",
  "Library/include/foonathan_memory/comp/foonathan/exception_support.hpp",
  "Library/include/foonathan_memory/comp/foonathan/get_new_handler.hpp",
  "Library/include/foonathan_memory/comp/foonathan/hosted_implementation.hpp",
  "Library/include/foonathan_memory/comp/foonathan/literal_op.hpp",
  "Library/include/foonathan_memory/comp/foonathan/max_align_t.hpp",
  "Library/include/foonathan_memory/comp/foonathan/mutex.hpp",
  "Library/include/foonathan_memory/comp/foonathan/noexcept.hpp",
  "Library/include/foonathan_memory/comp/foonathan/pmr.hpp",
  "Library/include/foonathan_memory/comp/foonathan/rvalue_ref.hpp",
  "Library/include/foonathan_memory/comp/foonathan/thread_local.hpp",
  "Library/include/foonathan_memory/config_impl.hpp",
  "Library/include/foonathan_memory/foonathan/memory/aligned_allocator.hpp",
  "Library/include/foonathan_memory/foonathan/memory/allocator_storage.hpp",
  "Library/include/foonathan_memory/foonathan/memory/allocator_traits.hpp",
  "Library/include/foonathan_memory/foonathan/memory/config.hpp",
  "Library/include/foonathan_memory/foonathan/memory/container.hpp",
  "Library/include/foonathan_memory/foonathan/memory/container_node_sizes_impl.hpp",
  "Library/include/foonathan_memory/foonathan/memory/debugging.hpp",
  "Library/include/foonathan_memory/foonathan/memory/default_allocator.hpp",
  "Library/include/foonathan_memory/foonathan/memory/deleter.hpp",
  "Library/include/foonathan_memory/foonathan/memory/detail/align.hpp",
  "Library/include/foonathan_memory/foonathan/memory/detail/assert.hpp",
  "Library/include/foonathan_memory/foonathan/memory/detail/container_node_sizes.hpp",
  "Library/include/foonathan_memory/foonathan/memory/detail/container_node_sizes_impl.hpp",
  "Library/include/foonathan_memory/foonathan/memory/detail/debug_helpers.hpp",
  "Library/include/foonathan_memory/foonathan/memory/detail/ebo_storage.hpp",
  "Library/include/foonathan_memory/foonathan/memory/detail/free_list.hpp",
  "Library/include/foonathan_memory/foonathan/memory/detail/free_list_array.hpp",
  "Library/include/foonathan_memory/foonathan/memory/detail/lowlevel_allocator.hpp",
  "Library/include/foonathan_memory/foonathan/memory/detail/memory_stack.hpp",
  "Library/include/foonathan_memory/foonathan/memory/detail/small_free_list.hpp",
  "Library/include/foonathan_memory/foonathan/memory/detail/utility.hpp",
  "Library/include/foonathan_memory/foonathan/memory/error.hpp",
  "Library/include/foonathan_memory/foonathan/memory/fallback_allocator.hpp",
  "Library/include/foonathan_memory/foonathan/memory/heap_allocator.hpp",
  "Library/include/foonathan_memory/foonathan/memory/iteration_allocator.hpp",
  "Library/include/foonathan_memory/foonathan/memory/joint_allocator.hpp",
  "Library/include/foonathan_memory/foonathan/memory/malloc_allocator.hpp",
  "Library/include/foonathan_memory/foonathan/memory/memory_arena.hpp",
  "Library/include/foonathan_memory/foonathan/memory/memory_pool.hpp",
  "Library/include/foonathan_memory/foonathan/memory/memory_pool_collection.hpp",
  "Library/include/foonathan_memory/foonathan/memory/memory_pool_type.hpp",
  "Library/include/foonathan_memory/foonathan/memory/memory_resource_adapter.hpp",
  "Library/include/foonathan_memory/foonathan/memory/memory_stack.hpp",
  "Library/include/foonathan_memory/foonathan/memory/namespace_alias.hpp",
  "Library/include/foonathan_memory/foonathan/memory/new_allocator.hpp",
  "Library/include/foonathan_memory/foonathan/memory/segregator.hpp",
  "Library/include/foonathan_memory/foonathan/memory/smart_ptr.hpp",
  "Library/include/foonathan_memory/foonathan/memory/static_allocator.hpp",
  "Library/include/foonathan_memory/foonathan/memory/std_allocator.hpp",
  "Library/include/foonathan_memory/foonathan/memory/temporary_allocator.hpp",
  "Library/include/foonathan_memory/foonathan/memory/threading.hpp",
  "Library/include/foonathan_memory/foonathan/memory/tracking.hpp",
  "Library/include/foonathan_memory/foonathan/memory/virtual_memory.hpp",
  "Library/lib/foonathan_memory-0.6.2.lib",
  "Library/share/foonathan_memory/LICENSE",
  "Library/share/foonathan_memory/README.md",
  "Library/share/foonathan_memory/cmake/foonathan_memory-config-release.cmake",
  "Library/share/foonathan_memory/cmake/foonathan_memory-config-version.cmake",
  "Library/share/foonathan_memory/cmake/foonathan_memory-config.cmake"
 ],
 "index": {
  "arch": "x86_64",
  "build": "0",
  "build_number": 0,
  "depends": [
   "vc >=14.1,<15.0a0"
  ],
  "license": "zlib",
  "name": "foonathan-memory",
  "platform": "win",
  "subdir": "win-64",
  "timestamp": 1573846524174,
  "version": "0.6.2"
 },
 "metadata_version": 1,
 "name": "foonathan-memory",
 "raw_recipe": "{% set name = \"foonathan-memory\" %}\n{% set version = \"0.6.2\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  - git_url: https://github.com/foonathan/memory.git\n    git_rev: v0.6-2\n    patches:\n      - fix-windows-install.patch\n\nbuild:\n  number: 0\n  run_exports:\n    - {{ pin_subpackage(name, max_pin='x.x') }}\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}              # [not win]\n    - {{ compiler('c') }}                # [not win]\n    - vs2017_win-64                      # [win64]\n    - vs2017_win-32                      # [win32]\n    - ninja\n    - cmake\n\ntest:\n  commands:\n    - test -f ${PREFIX}/lib/libfoonathan_memory-0.6.2${SHLIB_EXT}  # [not win]\n    - if exist %LIBRARY_PREFIX%\\\\lib\\\\foonathan_memory-0.6.2.lib (exit 0) else (exit 1)  # [win]\n    - if exist %LIBRARY_PREFIX%\\\\bin\\\\foonathan_memory-0.6.2.dll (exit 0) else (exit 1)  # [win]\n\nabout:\n  home: https://github.com/foonathan/memory\n  license: zlib\n  license_file: LICENSE\n  summary: |\n    STL compatible C++ memory allocator library using a new RawAllocator concept that is similar to an Allocator but easier to use and write.\n\nextra:\n  recipe-maintainers:\n    - seanyen\n",
 "rendered_recipe": {
  "about": {
   "home": "https://github.com/foonathan/memory",
   "license": "zlib",
   "license_file": "LICENSE",
   "summary": "STL compatible C++ memory allocator library using a new RawAllocator concept that is similar to an Allocator but easier to use and write.\n"
  },
  "build": {
   "number": "0",
   "run_exports": [
    "foonathan-memory >=0.6.2,<0.7.0a0"
   ],
   "string": "0"
  },
  "extra": {
   "copy_test_source_files": true,
   "final": true,
   "recipe-maintainers": [
    "seanyen"
   ]
  },
  "package": {
   "name": "foonathan-memory",
   "version": "0.6.2"
  },
  "requirements": {
   "build": [
    "cmake 3.15.5 he025d50_0",
    "ninja 1.9.0 h1ad3211_1",
    "vs2015_runtime 14.16.27012 hf0eaf9b_0",
    "vs2017_win-64 19.15.26726 hb4ce483_4"
   ],
   "run": [
    "vc >=14.1,<15.0a0"
   ]
  },
  "source": [
   {
    "git_rev": "v0.6-2",
    "git_url": "https://github.com/foonathan/memory.git",
    "patches": [
     "fix-windows-install.patch"
    ]
   }
  ],
  "test": {
   "commands": [
    "if exist %LIBRARY_PREFIX%\\\\lib\\\\foonathan_memory-0.6.2.lib (exit 0) else (exit 1)",
    "if exist %LIBRARY_PREFIX%\\\\bin\\\\foonathan_memory-0.6.2.dll (exit 0) else (exit 1)"
   ]
  }
 },
 "version": "0.6.2"
}